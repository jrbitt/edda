<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
    </ul>
  </div>
<h1>VideoModeSupport.cpp</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00002"></a>00002 <span class="comment">//</span>
<a name="l00003"></a>00003 <span class="comment">// SFML - Simple and Fast Multimedia Library</span>
<a name="l00004"></a>00004 <span class="comment">// Copyright (C) 2007-2009 Laurent Gomila (laurent.gom@gmail.com)</span>
<a name="l00005"></a>00005 <span class="comment">//</span>
<a name="l00006"></a>00006 <span class="comment">// This software is provided 'as-is', without any express or implied warranty.</span>
<a name="l00007"></a>00007 <span class="comment">// In no event will the authors be held liable for any damages arising from the use of this software.</span>
<a name="l00008"></a>00008 <span class="comment">//</span>
<a name="l00009"></a>00009 <span class="comment">// Permission is granted to anyone to use this software for any purpose,</span>
<a name="l00010"></a>00010 <span class="comment">// including commercial applications, and to alter it and redistribute it freely,</span>
<a name="l00011"></a>00011 <span class="comment">// subject to the following restrictions:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// 1. The origin of this software must not be misrepresented;</span>
<a name="l00014"></a>00014 <span class="comment">//    you must not claim that you wrote the original software.</span>
<a name="l00015"></a>00015 <span class="comment">//    If you use this software in a product, an acknowledgment</span>
<a name="l00016"></a>00016 <span class="comment">//    in the product documentation would be appreciated but is not required.</span>
<a name="l00017"></a>00017 <span class="comment">//</span>
<a name="l00018"></a>00018 <span class="comment">// 2. Altered source versions must be plainly marked as such,</span>
<a name="l00019"></a>00019 <span class="comment">//    and must not be misrepresented as being the original software.</span>
<a name="l00020"></a>00020 <span class="comment">//</span>
<a name="l00021"></a>00021 <span class="comment">// 3. This notice may not be removed or altered from any source distribution.</span>
<a name="l00022"></a>00022 <span class="comment">//</span>
<a name="l00024"></a>00024 <span class="comment"></span>
<a name="l00026"></a>00026 <span class="comment">// Headers</span>
<a name="l00028"></a>00028 <span class="comment"></span><span class="preprocessor">#include &lt;SFML/Window/Cocoa/VideoModeSupport.hpp&gt;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;ApplicationServices/ApplicationServices.h&gt;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &lt;algorithm&gt;</span>
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 <span class="keyword">namespace </span>sf
<a name="l00033"></a>00033 {
<a name="l00034"></a>00034 <span class="keyword">namespace </span>priv
<a name="l00035"></a>00035 {
<a name="l00039"></a>00039 <span class="keywordtype">void</span> VideoModeSupport::GetSupportedVideoModes(std::vector&lt;VideoMode&gt;&amp; Modes)
<a name="l00040"></a>00040 {
<a name="l00041"></a>00041     <span class="comment">// Ceylo -- using same implementation as in OSXCarbon</span>
<a name="l00042"></a>00042     
<a name="l00043"></a>00043     <span class="comment">// First, clear array to fill</span>
<a name="l00044"></a>00044     Modes.clear();
<a name="l00045"></a>00045     
<a name="l00046"></a>00046     <span class="comment">// Enumerate all available video modes for primary display adapter</span>
<a name="l00047"></a>00047     CFArrayRef DisplayModes = CGDisplayAvailableModes( kCGDirectMainDisplay );
<a name="l00048"></a>00048     CFIndex DisplayModeCount = CFArrayGetCount( DisplayModes );
<a name="l00049"></a>00049     CFDictionaryRef CurrentMode;
<a name="l00050"></a>00050     
<a name="l00051"></a>00051     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> Count = 0; Count &lt; DisplayModeCount; ++Count)
<a name="l00052"></a>00052     {
<a name="l00053"></a>00053         CurrentMode = (CFDictionaryRef)CFArrayGetValueAtIndex( DisplayModes, Count );
<a name="l00054"></a>00054         
<a name="l00055"></a>00055         <a class="code" href="classsf_1_1VideoMode.htm#04c9417e5c304510bef5f6aeb03f6ce1" title="Default constructor.">VideoMode</a> <a class="code" href="namespacesf_1_1Blend.htm#1a2fa89de4bb0d82b2eb30399fe575ca">Mode</a>;
<a name="l00056"></a>00056         
<a name="l00057"></a>00057         CFNumberGetValue((CFNumberRef)CFDictionaryGetValue(CurrentMode, kCGDisplayWidth), kCFNumberIntType, &amp;(Mode.Width));
<a name="l00058"></a>00058         CFNumberGetValue((CFNumberRef)CFDictionaryGetValue(CurrentMode, kCGDisplayHeight), kCFNumberIntType, &amp;(Mode.Height));
<a name="l00059"></a>00059         CFNumberGetValue((CFNumberRef)CFDictionaryGetValue(CurrentMode, kCGDisplayBitsPerPixel), kCFNumberIntType, &amp;(Mode.BitsPerPixel));
<a name="l00060"></a>00060         
<a name="l00061"></a>00061         <span class="comment">// Add it only if it is not already in the array</span>
<a name="l00062"></a>00062         <span class="keywordflow">if</span> (std::find(Modes.begin(), Modes.end(), Mode) == Modes.end())
<a name="l00063"></a>00063             Modes.push_back(Mode);
<a name="l00064"></a>00064     }
<a name="l00065"></a>00065 }
<a name="l00066"></a>00066 
<a name="l00067"></a>00067 
<a name="l00071"></a>00071 VideoMode VideoModeSupport::GetDesktopVideoMode()
<a name="l00072"></a>00072 {
<a name="l00073"></a>00073     <span class="comment">// Ceylo -- using same implementation as in OSXCarbon</span>
<a name="l00074"></a>00074     
<a name="l00075"></a>00075     CFDictionaryRef CurrentVideoMode = CGDisplayCurrentMode(kCGDirectMainDisplay);
<a name="l00076"></a>00076     
<a name="l00077"></a>00077     <a class="code" href="classsf_1_1VideoMode.htm#04c9417e5c304510bef5f6aeb03f6ce1" title="Default constructor.">VideoMode</a> DesktopMode;
<a name="l00078"></a>00078     
<a name="l00079"></a>00079     
<a name="l00080"></a>00080     <span class="comment">// Get video mode width</span>
<a name="l00081"></a>00081     CFNumberGetValue((CFNumberRef)CFDictionaryGetValue(CurrentVideoMode, kCGDisplayWidth),
<a name="l00082"></a>00082                      kCFNumberIntType,
<a name="l00083"></a>00083                      &amp;(DesktopMode.Width));
<a name="l00084"></a>00084     
<a name="l00085"></a>00085     <span class="comment">// Get video mode height</span>
<a name="l00086"></a>00086     CFNumberGetValue((CFNumberRef)CFDictionaryGetValue(CurrentVideoMode, kCGDisplayHeight),
<a name="l00087"></a>00087                      kCFNumberIntType,
<a name="l00088"></a>00088                      &amp;(DesktopMode.Height));
<a name="l00089"></a>00089     
<a name="l00090"></a>00090     <span class="comment">// Get video mode depth</span>
<a name="l00091"></a>00091     CFNumberGetValue((CFNumberRef)CFDictionaryGetValue(CurrentVideoMode, kCGDisplayBitsPerPixel),
<a name="l00092"></a>00092                      kCFNumberIntType,
<a name="l00093"></a>00093                      &amp;(DesktopMode.BitsPerPixel));
<a name="l00094"></a>00094     
<a name="l00095"></a>00095     
<a name="l00096"></a>00096     <span class="keywordflow">return</span> DesktopMode;
<a name="l00097"></a>00097 }
<a name="l00098"></a>00098 
<a name="l00099"></a>00099 } <span class="comment">// namespace priv</span>
<a name="l00100"></a>00100 
<a name="l00101"></a>00101 } <span class="comment">// namespace sf</span>
</pre></div></div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
