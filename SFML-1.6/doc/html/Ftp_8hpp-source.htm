<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
    </ul>
  </div>
<h1>Ftp.hpp</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00002"></a>00002 <span class="comment">//</span>
<a name="l00003"></a>00003 <span class="comment">// SFML - Simple and Fast Multimedia Library</span>
<a name="l00004"></a>00004 <span class="comment">// Copyright (C) 2007-2009 Laurent Gomila (laurent.gom@gmail.com)</span>
<a name="l00005"></a>00005 <span class="comment">//</span>
<a name="l00006"></a>00006 <span class="comment">// This software is provided 'as-is', without any express or implied warranty.</span>
<a name="l00007"></a>00007 <span class="comment">// In no event will the authors be held liable for any damages arising from the use of this software.</span>
<a name="l00008"></a>00008 <span class="comment">//</span>
<a name="l00009"></a>00009 <span class="comment">// Permission is granted to anyone to use this software for any purpose,</span>
<a name="l00010"></a>00010 <span class="comment">// including commercial applications, and to alter it and redistribute it freely,</span>
<a name="l00011"></a>00011 <span class="comment">// subject to the following restrictions:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// 1. The origin of this software must not be misrepresented;</span>
<a name="l00014"></a>00014 <span class="comment">//    you must not claim that you wrote the original software.</span>
<a name="l00015"></a>00015 <span class="comment">//    If you use this software in a product, an acknowledgment</span>
<a name="l00016"></a>00016 <span class="comment">//    in the product documentation would be appreciated but is not required.</span>
<a name="l00017"></a>00017 <span class="comment">//</span>
<a name="l00018"></a>00018 <span class="comment">// 2. Altered source versions must be plainly marked as such,</span>
<a name="l00019"></a>00019 <span class="comment">//    and must not be misrepresented as being the original software.</span>
<a name="l00020"></a>00020 <span class="comment">//</span>
<a name="l00021"></a>00021 <span class="comment">// 3. This notice may not be removed or altered from any source distribution.</span>
<a name="l00022"></a>00022 <span class="comment">//</span>
<a name="l00024"></a>00024 <span class="comment"></span>
<a name="l00025"></a>00025 <span class="preprocessor">#ifndef SFML_FTP_HPP</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span><span class="preprocessor">#define SFML_FTP_HPP</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span>
<a name="l00029"></a>00029 <span class="comment">// Headers</span>
<a name="l00031"></a>00031 <span class="comment"></span><span class="preprocessor">#include &lt;SFML/System/NonCopyable.hpp&gt;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;SFML/Network/SocketTCP.hpp&gt;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &lt;string&gt;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 
<a name="l00037"></a>00037 <span class="keyword">namespace </span>sf
<a name="l00038"></a>00038 {
<a name="l00039"></a>00039 <span class="keyword">class </span>IPAddress;
<a name="l00040"></a>00040 
<a name="l00047"></a><a class="code" href="classsf_1_1Ftp.htm">00047</a> <span class="keyword">class </span>SFML_API <a class="code" href="classsf_1_1Ftp.htm" title="This class provides methods for manipulating the FTP protocol (described in RFC 959)...">Ftp</a> : <a class="code" href="structsf_1_1NonCopyable.htm" title="Utility base class to easily declare non-copyable classes.">NonCopyable</a>
<a name="l00048"></a>00048 {
<a name="l00049"></a>00049 <span class="keyword">public</span> :
<a name="l00050"></a>00050 
<a name="l00054"></a><a class="code" href="classsf_1_1Ftp.htm#1cd6b89ad23253f6d97e6d4ca4d558cb">00054</a>     <span class="keyword">enum</span> <a class="code" href="classsf_1_1Ftp.htm#1cd6b89ad23253f6d97e6d4ca4d558cb" title="Enumeration of transfer modes.">TransferMode</a>
<a name="l00055"></a>00055     {
<a name="l00056"></a><a class="code" href="classsf_1_1Ftp.htm#1cd6b89ad23253f6d97e6d4ca4d558cb6f253b362639fb5e059dc292762a21ee">00056</a>         Binary, 
<a name="l00057"></a><a class="code" href="classsf_1_1Ftp.htm#1cd6b89ad23253f6d97e6d4ca4d558cbc9e544a22dce8ef3177449cb235d15c2">00057</a>         Ascii,  
<a name="l00058"></a><a class="code" href="classsf_1_1Ftp.htm#1cd6b89ad23253f6d97e6d4ca4d558cbbb1e34435231e73c96534c71090be7f4">00058</a>         Ebcdic  
<a name="l00059"></a>00059     };
<a name="l00060"></a>00060 
<a name="l00066"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm">00066</a>     <span class="keyword">class </span>SFML_API <a class="code" href="classsf_1_1Ftp_1_1Response.htm" title="This class wraps a FTP response, which is basically :a status codea message.">Response</a>
<a name="l00067"></a>00067     {
<a name="l00068"></a>00068     <span class="keyword">public</span> :
<a name="l00069"></a>00069 
<a name="l00074"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b">00074</a>         <span class="keyword">enum</span> <a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b" title="Enumerate all the valid status codes returned in a FTP response.">Status</a>
<a name="l00075"></a>00075         {
<a name="l00076"></a>00076             <span class="comment">// 1xx: the requested action is being initiated,</span>
<a name="l00077"></a>00077             <span class="comment">// expect another reply before proceeding with a new command</span>
<a name="l00078"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b6443d0307c6ca8545b2668d0b2414ba9">00078</a>             RestartMarkerReply          = 110, 
<a name="l00079"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b953c56d1d90d161ba08c5a67f99bf52e">00079</a>             ServiceReadySoon            = 120, 
<a name="l00080"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b01c534efa8299dc8c398f9c3c735af7f">00080</a>             DataConnectionAlreadyOpened = 125, 
<a name="l00081"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b12656c07a0163ae77f8eebbcd83fedcf">00081</a>             OpeningDataConnection       = 150, 
<a name="l00082"></a>00082 
<a name="l00083"></a>00083             <span class="comment">// 2xx: the requested action has been successfully completed</span>
<a name="l00084"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b4a822160c9e456c304d9081f695f9204">00084</a>             Ok                    = 200, 
<a name="l00085"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3bb1efc117885b60e0f4c63f7635929861">00085</a>             PointlessCommand      = 202, 
<a name="l00086"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b546cffa3466de7c0acda1df410269165">00086</a>             SystemStatus          = 211, 
<a name="l00087"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b3e525d31e69df913fa4808c82a8cc680">00087</a>             DirectoryStatus       = 212, 
<a name="l00088"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b64a925b61f519b6692cca1db9b5b36c0">00088</a>             FileStatus            = 213, 
<a name="l00089"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3bef9780ffb9aa0e2ad8bd0418c7982017">00089</a>             HelpMessage           = 214, 
<a name="l00090"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b34ea28f393b78baf66fc53531bb1bddd">00090</a>             SystemType            = 215, 
<a name="l00091"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3bc173cc4c38946ffe38ef19bf55ca37a2">00091</a>             ServiceReady          = 220, 
<a name="l00092"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b92ad91a4a4697e370a7ce9548a801e78">00092</a>             ClosingConnection     = 221, 
<a name="l00093"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b3b54aba6b1a5a64245de93082a62f19c">00093</a>             DataConnectionOpened  = 225, 
<a name="l00094"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b48efc6aec1a5053f0dd4222a4a1c0601">00094</a>             ClosingDataConnection = 226, 
<a name="l00095"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b27a9ad99275979f87e7182872dba29db">00095</a>             EnteringPassiveMode   = 227, 
<a name="l00096"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3bc33c09daa22e3939f71d1b2db42c56ac">00096</a>             LoggedIn              = 230, 
<a name="l00097"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3bed8fd0f5acbbcee897fc83030fc6a92b">00097</a>             FileActionOk          = 250, 
<a name="l00098"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b30abe316da5ce6674c7417d6afc8bbab">00098</a>             DirectoryOk           = 257, 
<a name="l00099"></a>00099 
<a name="l00100"></a>00100             <span class="comment">// 3xx: the command has been accepted, but the requested action</span>
<a name="l00101"></a>00101             <span class="comment">// is dormant, pending receipt of further information</span>
<a name="l00102"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b8a9c19cce4c2f6dd21c26287f043a20b">00102</a>             NeedPassword       = 331, 
<a name="l00103"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3bc48ec2d177addb0bf0312ce0d7d856e0">00103</a>             NeedAccountToLogIn = 332, 
<a name="l00104"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3be24e23795ce75bcbe31e6e14fb2b9fd1">00104</a>             NeedInformation    = 350, 
<a name="l00105"></a>00105 
<a name="l00106"></a>00106             <span class="comment">// 4xx: the command was not accepted and the requested action did not take place,</span>
<a name="l00107"></a>00107             <span class="comment">// but the error condition is temporary and the action may be requested again</span>
<a name="l00108"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b204b10b97f813aad7de1126bc7f69740">00108</a>             ServiceUnavailable        = 421, 
<a name="l00109"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b92eb7d9848511a97387536bf2ea7df48">00109</a>             DataConnectionUnavailable = 425, 
<a name="l00110"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b5f35323d8c86feb0cbafe2448d507cb7">00110</a>             TransferAborted           = 426, 
<a name="l00111"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b9e9e0bc31b36b0acdc24a90d9ac47664">00111</a>             FileActionAborted         = 450, 
<a name="l00112"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b68f37b168627d7aa1f83d29446dbf535">00112</a>             LocalError                = 451, 
<a name="l00113"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3bc8336cfb56dbb1bdeee3e1db484964ee">00113</a>             InsufficientStorageSpace  = 452, 
<a name="l00114"></a>00114 
<a name="l00115"></a>00115             <span class="comment">// 5xx: the command was not accepted and</span>
<a name="l00116"></a>00116             <span class="comment">// the requested action did not take place</span>
<a name="l00117"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3baea8c086e961bc08590a3b0125e3a8e9">00117</a>             CommandUnknown          = 500, 
<a name="l00118"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3bff1bf0a489b39dc9ea51605208793c05">00118</a>             ParametersUnknown       = 501, 
<a name="l00119"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b82eefceb7296b5c49a8af13c4fde0a56">00119</a>             CommandNotImplemented   = 502, 
<a name="l00120"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b90cb7aa403588e89a96d2b45796734eb">00120</a>             BadCommandSequence      = 503, 
<a name="l00121"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b5ad5d88255f235420f09272a2f8bb450">00121</a>             ParameterNotImplemented = 504, 
<a name="l00122"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b4b56e5c93eecc0bf951feb456ae00a69">00122</a>             NotLoggedIn             = 530, 
<a name="l00123"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b6aa05b90c45b8a29df984a33f67c09e4">00123</a>             NeedAccountToStore      = 532, 
<a name="l00124"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b2c39989f89691d39bfdf5f3720f201a1">00124</a>             FileUnavailable         = 550, 
<a name="l00125"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b187ace32b24e6dc2173fd06766009f0a">00125</a>             PageTypeUnknown         = 551, 
<a name="l00126"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b00b738c9bb9c46b5344d973cde49b3c3">00126</a>             NotEnoughMemory         = 552, 
<a name="l00127"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b149c960e8de97c512c13790266626b86">00127</a>             FilenameNotAllowed      = 553, 
<a name="l00128"></a>00128 
<a name="l00129"></a>00129             <span class="comment">// 10xx: SFML custom codes</span>
<a name="l00130"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b68ea252a23f9da1a7caac3e8cd79b45b">00130</a>             InvalidResponse  = 1000, 
<a name="l00131"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b1193dea18ab5169792489796e29a154c">00131</a>             ConnectionFailed = 1001, 
<a name="l00132"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b4eb0af3b6dc0d9d54834c183143950e6">00132</a>             ConnectionClosed = 1002, 
<a name="l00133"></a><a class="code" href="classsf_1_1Ftp_1_1Response.htm#f81738f06b6f571761696291276acb3b835ed0e55eac77c5ebf33b9be7507935">00133</a>             InvalidFile      = 1003  
<a name="l00134"></a>00134         };
<a name="l00135"></a>00135 
<a name="l00143"></a>00143         <a class="code" href="classsf_1_1Ftp_1_1Response.htm" title="This class wraps a FTP response, which is basically :a status codea message.">Response</a>(Status Code = InvalidResponse, <span class="keyword">const</span> std::string&amp; Message = <span class="stringliteral">""</span>);
<a name="l00144"></a>00144 
<a name="l00152"></a>00152         <span class="keywordtype">bool</span> IsOk() <span class="keyword">const</span>;
<a name="l00153"></a>00153 
<a name="l00160"></a>00160         Status GetStatus() <span class="keyword">const</span>;
<a name="l00161"></a>00161 
<a name="l00168"></a>00168         <span class="keyword">const</span> std::string&amp; GetMessage() <span class="keyword">const</span>;
<a name="l00169"></a>00169 
<a name="l00170"></a>00170     <span class="keyword">private</span> :
<a name="l00171"></a>00171 
<a name="l00173"></a>00173         <span class="comment">// Member data</span>
<a name="l00175"></a>00175 <span class="comment"></span>        Status      myStatus;  
<a name="l00176"></a>00176         std::string myMessage; 
<a name="l00177"></a>00177     };
<a name="l00178"></a>00178 
<a name="l00182"></a><a class="code" href="classsf_1_1Ftp_1_1DirectoryResponse.htm">00182</a>     <span class="keyword">class </span>SFML_API <a class="code" href="classsf_1_1Ftp_1_1DirectoryResponse.htm" title="Specialization of FTP response returning a directory.">DirectoryResponse</a> : <span class="keyword">public</span> <a class="code" href="classsf_1_1Ftp_1_1Response.htm" title="This class wraps a FTP response, which is basically :a status codea message.">Response</a>
<a name="l00183"></a>00183     {
<a name="l00184"></a>00184     <span class="keyword">public</span> :
<a name="l00185"></a>00185 
<a name="l00192"></a>00192         <a class="code" href="classsf_1_1Ftp_1_1DirectoryResponse.htm" title="Specialization of FTP response returning a directory.">DirectoryResponse</a>(<a class="code" href="classsf_1_1Ftp_1_1Response.htm" title="This class wraps a FTP response, which is basically :a status codea message.">Response</a> Resp);
<a name="l00193"></a>00193 
<a name="l00200"></a>00200         <span class="keyword">const</span> std::string&amp; GetDirectory() <span class="keyword">const</span>;
<a name="l00201"></a>00201 
<a name="l00202"></a>00202     <span class="keyword">private</span> :
<a name="l00203"></a>00203 
<a name="l00205"></a>00205         <span class="comment">// Member data</span>
<a name="l00207"></a>00207 <span class="comment"></span>        std::string myDirectory; 
<a name="l00208"></a>00208     };
<a name="l00209"></a>00209 
<a name="l00210"></a>00210 
<a name="l00214"></a><a class="code" href="classsf_1_1Ftp_1_1ListingResponse.htm">00214</a>     <span class="keyword">class </span>SFML_API <a class="code" href="classsf_1_1Ftp_1_1ListingResponse.htm" title="Specialization of FTP response returning a filename lisiting.">ListingResponse</a> : <span class="keyword">public</span> <a class="code" href="classsf_1_1Ftp_1_1Response.htm" title="This class wraps a FTP response, which is basically :a status codea message.">Response</a>
<a name="l00215"></a>00215     {
<a name="l00216"></a>00216     <span class="keyword">public</span> :
<a name="l00217"></a>00217 
<a name="l00225"></a>00225         <a class="code" href="classsf_1_1Ftp_1_1ListingResponse.htm" title="Specialization of FTP response returning a filename lisiting.">ListingResponse</a>(<a class="code" href="classsf_1_1Ftp_1_1Response.htm" title="This class wraps a FTP response, which is basically :a status codea message.">Response</a> Resp, <span class="keyword">const</span> std::vector&lt;char&gt;&amp; Data);
<a name="l00226"></a>00226 
<a name="l00233"></a>00233         std::size_t GetCount() <span class="keyword">const</span>;
<a name="l00234"></a>00234 
<a name="l00243"></a>00243         <span class="keyword">const</span> std::string&amp; GetFilename(std::size_t Index) <span class="keyword">const</span>;
<a name="l00244"></a>00244 
<a name="l00245"></a>00245     <span class="keyword">private</span> :
<a name="l00246"></a>00246 
<a name="l00248"></a>00248         <span class="comment">// Member data</span>
<a name="l00250"></a>00250 <span class="comment"></span>        std::vector&lt;std::string&gt; myFilenames; 
<a name="l00251"></a>00251     };
<a name="l00252"></a>00252 
<a name="l00253"></a>00253 
<a name="l00258"></a>00258     ~<a class="code" href="classsf_1_1Ftp.htm" title="This class provides methods for manipulating the FTP protocol (described in RFC 959)...">Ftp</a>();
<a name="l00259"></a>00259 
<a name="l00270"></a>00270     <a class="code" href="classsf_1_1Ftp_1_1Response.htm" title="This class wraps a FTP response, which is basically :a status codea message.">Response</a> Connect(<span class="keyword">const</span> <a class="code" href="classsf_1_1IPAddress.htm" title="IPAddress provides easy manipulation of IP v4 addresses.">IPAddress</a>&amp; Server, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> Port = 21, <span class="keywordtype">float</span> Timeout = 0.f);
<a name="l00271"></a>00271 
<a name="l00278"></a>00278     <a class="code" href="classsf_1_1Ftp_1_1Response.htm" title="This class wraps a FTP response, which is basically :a status codea message.">Response</a> Login();
<a name="l00279"></a>00279 
<a name="l00289"></a>00289     <a class="code" href="classsf_1_1Ftp_1_1Response.htm" title="This class wraps a FTP response, which is basically :a status codea message.">Response</a> Login(<span class="keyword">const</span> std::string&amp; UserName, <span class="keyword">const</span> std::string&amp; Password);
<a name="l00290"></a>00290 
<a name="l00297"></a>00297     <a class="code" href="classsf_1_1Ftp_1_1Response.htm" title="This class wraps a FTP response, which is basically :a status codea message.">Response</a> Disconnect();
<a name="l00298"></a>00298 
<a name="l00305"></a>00305     <a class="code" href="classsf_1_1Ftp_1_1Response.htm" title="This class wraps a FTP response, which is basically :a status codea message.">Response</a> KeepAlive();
<a name="l00306"></a>00306 
<a name="l00313"></a>00313     <a class="code" href="classsf_1_1Ftp_1_1DirectoryResponse.htm" title="Specialization of FTP response returning a directory.">DirectoryResponse</a> GetWorkingDirectory();
<a name="l00314"></a>00314 
<a name="l00324"></a>00324     <a class="code" href="classsf_1_1Ftp_1_1ListingResponse.htm" title="Specialization of FTP response returning a filename lisiting.">ListingResponse</a> GetDirectoryListing(<span class="keyword">const</span> std::string&amp; Directory = <span class="stringliteral">""</span>);
<a name="l00325"></a>00325 
<a name="l00334"></a>00334     <a class="code" href="classsf_1_1Ftp_1_1Response.htm" title="This class wraps a FTP response, which is basically :a status codea message.">Response</a> ChangeDirectory(<span class="keyword">const</span> std::string&amp; Directory);
<a name="l00335"></a>00335 
<a name="l00342"></a>00342     <a class="code" href="classsf_1_1Ftp_1_1Response.htm" title="This class wraps a FTP response, which is basically :a status codea message.">Response</a> ParentDirectory();
<a name="l00343"></a>00343 
<a name="l00352"></a>00352     <a class="code" href="classsf_1_1Ftp_1_1Response.htm" title="This class wraps a FTP response, which is basically :a status codea message.">Response</a> MakeDirectory(<span class="keyword">const</span> std::string&amp; Name);
<a name="l00353"></a>00353 
<a name="l00362"></a>00362     <a class="code" href="classsf_1_1Ftp_1_1Response.htm" title="This class wraps a FTP response, which is basically :a status codea message.">Response</a> DeleteDirectory(<span class="keyword">const</span> std::string&amp; Name);
<a name="l00363"></a>00363 
<a name="l00373"></a>00373     <a class="code" href="classsf_1_1Ftp_1_1Response.htm" title="This class wraps a FTP response, which is basically :a status codea message.">Response</a> RenameFile(<span class="keyword">const</span> std::string&amp; File, <span class="keyword">const</span> std::string&amp; NewName);
<a name="l00374"></a>00374 
<a name="l00383"></a>00383     <a class="code" href="classsf_1_1Ftp_1_1Response.htm" title="This class wraps a FTP response, which is basically :a status codea message.">Response</a> DeleteFile(<span class="keyword">const</span> std::string&amp; Name);
<a name="l00384"></a>00384 
<a name="l00395"></a>00395     <a class="code" href="classsf_1_1Ftp_1_1Response.htm" title="This class wraps a FTP response, which is basically :a status codea message.">Response</a> Download(<span class="keyword">const</span> std::string&amp; DistantFile, <span class="keyword">const</span> std::string&amp; DestPath, <a class="code" href="classsf_1_1Ftp.htm#1cd6b89ad23253f6d97e6d4ca4d558cb" title="Enumeration of transfer modes.">TransferMode</a> Mode = Binary);
<a name="l00396"></a>00396 
<a name="l00407"></a>00407     <a class="code" href="classsf_1_1Ftp_1_1Response.htm" title="This class wraps a FTP response, which is basically :a status codea message.">Response</a> Upload(<span class="keyword">const</span> std::string&amp; LocalFile, <span class="keyword">const</span> std::string&amp; DestPath, <a class="code" href="classsf_1_1Ftp.htm#1cd6b89ad23253f6d97e6d4ca4d558cb" title="Enumeration of transfer modes.">TransferMode</a> Mode = Binary);
<a name="l00408"></a>00408 
<a name="l00409"></a>00409 <span class="keyword">private</span> :
<a name="l00410"></a>00410 
<a name="l00420"></a>00420     <a class="code" href="classsf_1_1Ftp_1_1Response.htm" title="This class wraps a FTP response, which is basically :a status codea message.">Response</a> SendCommand(<span class="keyword">const</span> std::string&amp; Command, <span class="keyword">const</span> std::string&amp; Parameter = <span class="stringliteral">""</span>);
<a name="l00421"></a>00421 
<a name="l00429"></a>00429     <a class="code" href="classsf_1_1Ftp_1_1Response.htm" title="This class wraps a FTP response, which is basically :a status codea message.">Response</a> GetResponse();
<a name="l00430"></a>00430 
<a name="l00435"></a>00435     <span class="keyword">class </span>DataChannel;
<a name="l00436"></a>00436 
<a name="l00437"></a>00437     <span class="keyword">friend</span> <span class="keyword">class </span>DataChannel;
<a name="l00438"></a>00438 
<a name="l00440"></a>00440     <span class="comment">// Member data</span>
<a name="l00442"></a>00442 <span class="comment"></span>    <a class="code" href="classsf_1_1SocketTCP.htm" title="SocketTCP wraps a socket using TCP protocol to send data safely (but a bit slower)...">SocketTCP</a> myCommandSocket; 
<a name="l00443"></a>00443 };
<a name="l00444"></a>00444 
<a name="l00445"></a>00445 } <span class="comment">// namespace sf</span>
<a name="l00446"></a>00446 
<a name="l00447"></a>00447 
<a name="l00448"></a>00448 <span class="preprocessor">#endif // SFML_FTP_HPP</span>
</pre></div></div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
