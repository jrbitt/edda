<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>sf::SocketUDP Member List</h1>This is the complete list of members for <a class="el" href="classsf_1_1SocketUDP.htm">sf::SocketUDP</a>, including all inherited members.<p><table>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketUDP.htm#4a7e364fd39aa7338f0822d849323a5d">Bind</a>(unsigned short Port)</td><td><a class="el" href="classsf_1_1SocketUDP.htm">sf::SocketUDP</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketUDP.htm#c9abf54c9ced16b55ddef46973cd1a58">Close</a>()</td><td><a class="el" href="classsf_1_1SocketUDP.htm">sf::SocketUDP</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketUDP.htm#14f2c68a57a163a5d142acd0c4b022dd">GetPort</a>() const </td><td><a class="el" href="classsf_1_1SocketUDP.htm">sf::SocketUDP</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketUDP.htm#ffecb97b84b51dea691934f9195abc1f">IsValid</a>() const </td><td><a class="el" href="classsf_1_1SocketUDP.htm">sf::SocketUDP</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketUDP.htm#2cb8111d79d32e456f047132e61acd24">operator!=</a>(const SocketUDP &amp;Other) const </td><td><a class="el" href="classsf_1_1SocketUDP.htm">sf::SocketUDP</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketUDP.htm#fc35043831c10528cc3e97b959438b95">operator&lt;</a>(const SocketUDP &amp;Other) const </td><td><a class="el" href="classsf_1_1SocketUDP.htm">sf::SocketUDP</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketUDP.htm#5e6df73d3b4acf5890bd48229b2d2fa0">operator==</a>(const SocketUDP &amp;Other) const </td><td><a class="el" href="classsf_1_1SocketUDP.htm">sf::SocketUDP</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketUDP.htm#c6928928fa1d6242db1f8d4176369996">Receive</a>(char *Data, std::size_t MaxSize, std::size_t &amp;SizeReceived, IPAddress &amp;Address, unsigned short &amp;Port)</td><td><a class="el" href="classsf_1_1SocketUDP.htm">sf::SocketUDP</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketUDP.htm#463bbd635513f2653f072c2f220d2495">Receive</a>(Packet &amp;PacketToReceive, IPAddress &amp;Address, unsigned short &amp;Port)</td><td><a class="el" href="classsf_1_1SocketUDP.htm">sf::SocketUDP</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>Selector&lt; SocketUDP &gt;</b> (defined in <a class="el" href="classsf_1_1SocketUDP.htm">sf::SocketUDP</a>)</td><td><a class="el" href="classsf_1_1SocketUDP.htm">sf::SocketUDP</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketUDP.htm#bce9f533dd86c0fd8fbe26b7efce3bc2">Send</a>(const char *Data, std::size_t Size, const IPAddress &amp;Address, unsigned short Port)</td><td><a class="el" href="classsf_1_1SocketUDP.htm">sf::SocketUDP</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketUDP.htm#fef698f2544ac0364d422e1e1ba7a5b6">Send</a>(Packet &amp;PacketToSend, const IPAddress &amp;Address, unsigned short Port)</td><td><a class="el" href="classsf_1_1SocketUDP.htm">sf::SocketUDP</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketUDP.htm#128ebfff7472dfdd330b46b719e06fd6">SetBlocking</a>(bool Blocking)</td><td><a class="el" href="classsf_1_1SocketUDP.htm">sf::SocketUDP</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketUDP.htm#844e648922eccd86d4815d19472bb901">SocketUDP</a>()</td><td><a class="el" href="classsf_1_1SocketUDP.htm">sf::SocketUDP</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketUDP.htm#6f6b448b8ab63913dad5d6906645081c">Unbind</a>()</td><td><a class="el" href="classsf_1_1SocketUDP.htm">sf::SocketUDP</a></td><td></td></tr>
</table></div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
