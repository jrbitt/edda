<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>sf::SoundStream Member List</h1>This is the complete list of members for <a class="el" href="classsf_1_1SoundStream.htm">sf::SoundStream</a>, including all inherited members.<p><table>
  <tr class="memlist"><td><a class="el" href="classsf_1_1AudioResource.htm#cdff57800064eb0d6ca5ce1773182705">AudioResource</a>()</td><td><a class="el" href="classsf_1_1AudioResource.htm">sf::AudioResource</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1AudioResource.htm#72180730c0d811d1a9c5d0c9c9a71907">AudioResource</a>(const AudioResource &amp;)</td><td><a class="el" href="classsf_1_1AudioResource.htm">sf::AudioResource</a></td><td><code> [private]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>FuncType</b> typedef (defined in <a class="el" href="classsf_1_1Thread.htm">sf::Thread</a>)</td><td><a class="el" href="classsf_1_1Thread.htm">sf::Thread</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#f594211c35d6ac7a9df083c226749c42">GetAttenuation</a>() const </td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#bb46557ecfb32c4538fedad28cc59d9e">GetBuffer</a>() const </td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SoundStream.htm#bdcb5c8f3b5884a27e2eb013f5e36858">GetChannelsCount</a>() const </td><td><a class="el" href="classsf_1_1SoundStream.htm">sf::SoundStream</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SoundStream.htm#caecb1c68af4a9d75f9e9ad2d42afa78">GetLoop</a>() const </td><td><a class="el" href="classsf_1_1SoundStream.htm">sf::SoundStream</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#07f37119f7b3b00f274ac0263a4bc58b">GetMinDistance</a>() const </td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#42333202ed0586f434d852cc35b9d4ef">GetPitch</a>() const </td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SoundStream.htm#d11fee9eb4baba68d6ed9f44bc6170ac">GetPlayingOffset</a>() const </td><td><a class="el" href="classsf_1_1SoundStream.htm">sf::SoundStream</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#b1adb173ee12a86f261fb765be050643">GetPosition</a>() const </td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SoundStream.htm#74dabd1177bb60c8bd64bb6bbedb64bc">GetSampleRate</a>() const </td><td><a class="el" href="classsf_1_1SoundStream.htm">sf::SoundStream</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SoundStream.htm#cef2468ca4bc3e8ced76b11fb95c7ef2">GetStatus</a>() const </td><td><a class="el" href="classsf_1_1SoundStream.htm">sf::SoundStream</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#018e78cd6c50d653fffff1005a350782">GetVolume</a>() const </td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SoundStream.htm#ed9b6b06c0fa9c2d0b8c094eb2826793">Initialize</a>(unsigned int ChannelsCount, unsigned int SampleRate)</td><td><a class="el" href="classsf_1_1SoundStream.htm">sf::SoundStream</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#f0278152abf6e3f195353ce3c270f34e">IsRelativeToListener</a>() const </td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Thread.htm#046df871f73d3cf452d1c72bcc143642">Launch</a>()</td><td><a class="el" href="classsf_1_1Thread.htm">sf::Thread</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#b794404f8facdad9578c31eff25110a7">operator=</a>(const Sound &amp;Other)</td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#6a712910ac1340f32e3ec3a04295ebd3">Pause</a>()</td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#28ad2186cde78fed2c79c867b9622195c9fedbd48103548431e7851d16be5f4f">Paused</a> enum value</td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SoundStream.htm#4d8437ef9a952fe3798bd239ff20d9bf">Play</a>()</td><td><a class="el" href="classsf_1_1SoundStream.htm">sf::SoundStream</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#28ad2186cde78fed2c79c867b962219516657b221888cf11e2a076f5b2783288">Playing</a> enum value</td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#0fe562f8a52994658398c61796cde331">ResetBuffer</a>()</td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#c3743f1fb53bf9818fbab6e9220bd7b9">SetAttenuation</a>(float Attenuation)</td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#9dbc27c54f0ee633c831a0b6e24ecc55">SetBuffer</a>(const SoundBuffer &amp;Buffer)</td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SoundStream.htm#1072090152b10d83f43f0cd6bbd82b4e">SetLoop</a>(bool Loop)</td><td><a class="el" href="classsf_1_1SoundStream.htm">sf::SoundStream</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#0a545d8dca68d85a03390f6da7c446a9">SetMinDistance</a>(float MinDistance)</td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#f93301feb88770789ba7cd993c9dd3a0">SetPitch</a>(float Pitch)</td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#e779b4fa3d8d98a1490334dbd32e8d62">SetPlayingOffset</a>(float TimeOffset)</td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#b445e8738218525d8dd067628bc70c78">SetPosition</a>(float X, float Y, float Z)</td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#0d8c6f11281a574b781c53d62a4af776">SetPosition</a>(const Vector3f &amp;Position)</td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#7604f576d184ba8031789beee96d04d3">SetRelativeToListener</a>(bool Relative)</td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#1536095045923a2332dd9eed6bf8e96a">SetVolume</a>(float Volume)</td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#36ab74beaaa953d9879c933ddd246282">Sound</a>()</td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#45aff03dc5bf87647eba6bed7c1ced29">Sound</a>(const SoundBuffer &amp;Buffer, bool Loop=false, float Pitch=1.f, float Volume=100.f, const Vector3f &amp;Position=Vector3f(0, 0, 0))</td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [explicit, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#a930dcf53775f501ce43d44bf54c0ce4">Sound</a>(const Sound &amp;Copy)</td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SoundStream.htm#769d08f4c3c6b4340ef3a838329d2e5c">SoundStream</a>()</td><td><a class="el" href="classsf_1_1SoundStream.htm">sf::SoundStream</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SoundStream.htm#28ad2186cde78fed2c79c867b9622195">Status</a> enum name</td><td><a class="el" href="classsf_1_1SoundStream.htm">sf::SoundStream</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SoundStream.htm#53c9e9b160bcbcc89c93c1682b4525df">Stop</a>()</td><td><a class="el" href="classsf_1_1SoundStream.htm">sf::SoundStream</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#28ad2186cde78fed2c79c867b962219539fd53aa83db9189ca2fff82e0553cf9">Stopped</a> enum value</td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Thread.htm#603d9493c6a845188f05c2eca48dc41b">Terminate</a>()</td><td><a class="el" href="classsf_1_1Thread.htm">sf::Thread</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Thread.htm#5a5f6a41323c0983d6c0f4e496f4a173">Thread</a>(FuncType Function, void *UserData=NULL)</td><td><a class="el" href="classsf_1_1Thread.htm">sf::Thread</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Thread.htm#d719b83ce7b02b56db919d423a69f1a2">Thread</a>()</td><td><a class="el" href="classsf_1_1Thread.htm">sf::Thread</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Thread.htm#67f3c609fdf99688531dbfae461ea4d2">Wait</a>()</td><td><a class="el" href="classsf_1_1Thread.htm">sf::Thread</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1AudioResource.htm#b637cc0e1ff4770a3ac3be48f83d6702">~AudioResource</a>()</td><td><a class="el" href="classsf_1_1AudioResource.htm">sf::AudioResource</a></td><td><code> [private, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sound.htm#d0792c35310eba2dffd8489c80fad076">~Sound</a>()</td><td><a class="el" href="classsf_1_1Sound.htm">sf::Sound</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SoundStream.htm#5b14ec6669440e4dbd5650f0fb6b0674">~SoundStream</a>()</td><td><a class="el" href="classsf_1_1SoundStream.htm">sf::SoundStream</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Thread.htm#f77942fc1730af7c31bc4c3a913a9c1d">~Thread</a>()</td><td><a class="el" href="classsf_1_1Thread.htm">sf::Thread</a></td><td><code> [private, virtual]</code></td></tr>
</table></div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
