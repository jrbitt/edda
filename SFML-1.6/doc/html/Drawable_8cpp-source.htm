<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
    </ul>
  </div>
<h1>Drawable.cpp</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00002"></a>00002 <span class="comment">//</span>
<a name="l00003"></a>00003 <span class="comment">// SFML - Simple and Fast Multimedia Library</span>
<a name="l00004"></a>00004 <span class="comment">// Copyright (C) 2007-2009 Laurent Gomila (laurent.gom@gmail.com)</span>
<a name="l00005"></a>00005 <span class="comment">//</span>
<a name="l00006"></a>00006 <span class="comment">// This software is provided 'as-is', without any express or implied warranty.</span>
<a name="l00007"></a>00007 <span class="comment">// In no event will the authors be held liable for any damages arising from the use of this software.</span>
<a name="l00008"></a>00008 <span class="comment">//</span>
<a name="l00009"></a>00009 <span class="comment">// Permission is granted to anyone to use this software for any purpose,</span>
<a name="l00010"></a>00010 <span class="comment">// including commercial applications, and to alter it and redistribute it freely,</span>
<a name="l00011"></a>00011 <span class="comment">// subject to the following restrictions:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// 1. The origin of this software must not be misrepresented;</span>
<a name="l00014"></a>00014 <span class="comment">//    you must not claim that you wrote the original software.</span>
<a name="l00015"></a>00015 <span class="comment">//    If you use this software in a product, an acknowledgment</span>
<a name="l00016"></a>00016 <span class="comment">//    in the product documentation would be appreciated but is not required.</span>
<a name="l00017"></a>00017 <span class="comment">//</span>
<a name="l00018"></a>00018 <span class="comment">// 2. Altered source versions must be plainly marked as such,</span>
<a name="l00019"></a>00019 <span class="comment">//    and must not be misrepresented as being the original software.</span>
<a name="l00020"></a>00020 <span class="comment">//</span>
<a name="l00021"></a>00021 <span class="comment">// 3. This notice may not be removed or altered from any source distribution.</span>
<a name="l00022"></a>00022 <span class="comment">//</span>
<a name="l00024"></a>00024 <span class="comment"></span>
<a name="l00026"></a>00026 <span class="comment">// Headers</span>
<a name="l00028"></a>00028 <span class="comment"></span><span class="preprocessor">#include &lt;SFML/Graphics/Drawable.hpp&gt;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;SFML/Graphics/GraphicsContext.hpp&gt;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &lt;SFML/Window/Window.hpp&gt;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &lt;math.h&gt;</span>
<a name="l00032"></a>00032 
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 <span class="keyword">namespace </span>sf
<a name="l00035"></a>00035 {
<a name="l00039"></a><a class="code" href="classsf_1_1Drawable.htm#712de01505e04a03b93cf33ae004cdbc">00039</a> <a class="code" href="classsf_1_1Drawable.htm#712de01505e04a03b93cf33ae004cdbc" title="Default constructor.">Drawable::Drawable</a>(<span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>&amp; Position, <span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>&amp; Scale, <span class="keywordtype">float</span> Rotation, <span class="keyword">const</span> <a class="code" href="classsf_1_1Color.htm" title="Color is an utility class for manipulating 32-bits RGBA colors.">Color</a>&amp; Col) :
<a name="l00040"></a>00040 myPosition     (Position),
<a name="l00041"></a>00041 myScale        (Scale),
<a name="l00042"></a>00042 myCenter       (0, 0),
<a name="l00043"></a>00043 myRotation     (Rotation),
<a name="l00044"></a>00044 myColor        (Col),
<a name="l00045"></a>00045 myBlendMode    (Blend::Alpha),
<a name="l00046"></a>00046 myNeedUpdate   (true),
<a name="l00047"></a>00047 myInvNeedUpdate(true)
<a name="l00048"></a>00048 {
<a name="l00049"></a>00049 
<a name="l00050"></a>00050 }
<a name="l00051"></a>00051 
<a name="l00052"></a>00052 
<a name="l00056"></a><a class="code" href="classsf_1_1Drawable.htm#28141b9ba1e4b432313339546669817a">00056</a> <a class="code" href="classsf_1_1Drawable.htm#28141b9ba1e4b432313339546669817a" title="Virtual destructor.">Drawable::~Drawable</a>()
<a name="l00057"></a>00057 {
<a name="l00058"></a>00058     <span class="comment">// Nothing to do</span>
<a name="l00059"></a>00059 }
<a name="l00060"></a>00060 
<a name="l00061"></a>00061 
<a name="l00065"></a><a class="code" href="classsf_1_1Drawable.htm#419da954b1f2ad1ac2ae0b9ab6e72589">00065</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1Drawable.htm#419da954b1f2ad1ac2ae0b9ab6e72589" title="Set the position of the object (take 2 values).">Drawable::SetPosition</a>(<span class="keywordtype">float</span> X, <span class="keywordtype">float</span> Y)
<a name="l00066"></a>00066 {
<a name="l00067"></a>00067     <a class="code" href="classsf_1_1Drawable.htm#c8de7bfe092736083dcf23b0dbd22b1e" title="Set the X position of the object.">SetX</a>(X);
<a name="l00068"></a>00068     <a class="code" href="classsf_1_1Drawable.htm#83fecebe749c1aca9070eafd63e1a0c9" title="Set the Y position of the object.">SetY</a>(Y);
<a name="l00069"></a>00069 }
<a name="l00070"></a>00070 
<a name="l00071"></a>00071 
<a name="l00075"></a><a class="code" href="classsf_1_1Drawable.htm#d2a279f3b13abf57cc25b2b4bd3b81ae">00075</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1Drawable.htm#419da954b1f2ad1ac2ae0b9ab6e72589" title="Set the position of the object (take 2 values).">Drawable::SetPosition</a>(<span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>&amp; Position)
<a name="l00076"></a>00076 {
<a name="l00077"></a>00077     <a class="code" href="classsf_1_1Drawable.htm#c8de7bfe092736083dcf23b0dbd22b1e" title="Set the X position of the object.">SetX</a>(Position.<a class="code" href="classsf_1_1Vector2.htm#1e6ad77fa155f3753bfb92699bd28141" title="X coordinate of the vector.">x</a>);
<a name="l00078"></a>00078     <a class="code" href="classsf_1_1Drawable.htm#83fecebe749c1aca9070eafd63e1a0c9" title="Set the Y position of the object.">SetY</a>(Position.<a class="code" href="classsf_1_1Vector2.htm#420f2481b015f4eb929c75f2af564299" title="Y coordinate of the vector.">y</a>);
<a name="l00079"></a>00079 }
<a name="l00080"></a>00080 
<a name="l00081"></a>00081 
<a name="l00085"></a><a class="code" href="classsf_1_1Drawable.htm#c8de7bfe092736083dcf23b0dbd22b1e">00085</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1Drawable.htm#c8de7bfe092736083dcf23b0dbd22b1e" title="Set the X position of the object.">Drawable::SetX</a>(<span class="keywordtype">float</span> X)
<a name="l00086"></a>00086 {
<a name="l00087"></a>00087     myPosition.<a class="code" href="classsf_1_1Vector2.htm#1e6ad77fa155f3753bfb92699bd28141" title="X coordinate of the vector.">x</a>    = X;
<a name="l00088"></a>00088     myNeedUpdate    = <span class="keyword">true</span>;
<a name="l00089"></a>00089     myInvNeedUpdate = <span class="keyword">true</span>;
<a name="l00090"></a>00090 }
<a name="l00091"></a>00091 
<a name="l00092"></a>00092 
<a name="l00096"></a><a class="code" href="classsf_1_1Drawable.htm#83fecebe749c1aca9070eafd63e1a0c9">00096</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1Drawable.htm#83fecebe749c1aca9070eafd63e1a0c9" title="Set the Y position of the object.">Drawable::SetY</a>(<span class="keywordtype">float</span> Y)
<a name="l00097"></a>00097 {
<a name="l00098"></a>00098     myPosition.<a class="code" href="classsf_1_1Vector2.htm#420f2481b015f4eb929c75f2af564299" title="Y coordinate of the vector.">y</a>    = Y;
<a name="l00099"></a>00099     myNeedUpdate    = <span class="keyword">true</span>;
<a name="l00100"></a>00100     myInvNeedUpdate = <span class="keyword">true</span>;
<a name="l00101"></a>00101 }
<a name="l00102"></a>00102 
<a name="l00103"></a>00103 
<a name="l00107"></a><a class="code" href="classsf_1_1Drawable.htm#0b486c56c2bd137bac629f72fea66769">00107</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1Drawable.htm#0b486c56c2bd137bac629f72fea66769" title="Set the scale of the object (take 2 values).">Drawable::SetScale</a>(<span class="keywordtype">float</span> ScaleX, <span class="keywordtype">float</span> ScaleY)
<a name="l00108"></a>00108 {
<a name="l00109"></a>00109     <a class="code" href="classsf_1_1Drawable.htm#0cafae61a1d23bddb059d64df0e1502f" title="Set the X scale factor of the object.">SetScaleX</a>(ScaleX);
<a name="l00110"></a>00110     <a class="code" href="classsf_1_1Drawable.htm#89e7793c74c656e5850b71d0ab34b8bf" title="Set the Y scale factor of the object.">SetScaleY</a>(ScaleY);
<a name="l00111"></a>00111 }
<a name="l00112"></a>00112 
<a name="l00113"></a>00113 
<a name="l00117"></a><a class="code" href="classsf_1_1Drawable.htm#84876c5ef7fa628c85c3c9e000e50aa1">00117</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1Drawable.htm#0b486c56c2bd137bac629f72fea66769" title="Set the scale of the object (take 2 values).">Drawable::SetScale</a>(<span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>&amp; Scale)
<a name="l00118"></a>00118 {
<a name="l00119"></a>00119     <a class="code" href="classsf_1_1Drawable.htm#0cafae61a1d23bddb059d64df0e1502f" title="Set the X scale factor of the object.">SetScaleX</a>(Scale.<a class="code" href="classsf_1_1Vector2.htm#1e6ad77fa155f3753bfb92699bd28141" title="X coordinate of the vector.">x</a>);
<a name="l00120"></a>00120     <a class="code" href="classsf_1_1Drawable.htm#89e7793c74c656e5850b71d0ab34b8bf" title="Set the Y scale factor of the object.">SetScaleY</a>(Scale.<a class="code" href="classsf_1_1Vector2.htm#420f2481b015f4eb929c75f2af564299" title="Y coordinate of the vector.">y</a>);
<a name="l00121"></a>00121 }
<a name="l00122"></a>00122 
<a name="l00123"></a>00123 
<a name="l00127"></a><a class="code" href="classsf_1_1Drawable.htm#0cafae61a1d23bddb059d64df0e1502f">00127</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1Drawable.htm#0cafae61a1d23bddb059d64df0e1502f" title="Set the X scale factor of the object.">Drawable::SetScaleX</a>(<span class="keywordtype">float</span> FactorX)
<a name="l00128"></a>00128 {
<a name="l00129"></a>00129     <span class="keywordflow">if</span> (FactorX &gt; 0)
<a name="l00130"></a>00130     {
<a name="l00131"></a>00131         myScale.<a class="code" href="classsf_1_1Vector2.htm#1e6ad77fa155f3753bfb92699bd28141" title="X coordinate of the vector.">x</a>       = FactorX;
<a name="l00132"></a>00132         myNeedUpdate    = <span class="keyword">true</span>;
<a name="l00133"></a>00133         myInvNeedUpdate = <span class="keyword">true</span>;
<a name="l00134"></a>00134     }
<a name="l00135"></a>00135 }
<a name="l00136"></a>00136 
<a name="l00137"></a>00137 
<a name="l00141"></a><a class="code" href="classsf_1_1Drawable.htm#89e7793c74c656e5850b71d0ab34b8bf">00141</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1Drawable.htm#89e7793c74c656e5850b71d0ab34b8bf" title="Set the Y scale factor of the object.">Drawable::SetScaleY</a>(<span class="keywordtype">float</span> FactorY)
<a name="l00142"></a>00142 {
<a name="l00143"></a>00143     <span class="keywordflow">if</span> (FactorY &gt; 0)
<a name="l00144"></a>00144     {
<a name="l00145"></a>00145         myScale.<a class="code" href="classsf_1_1Vector2.htm#420f2481b015f4eb929c75f2af564299" title="Y coordinate of the vector.">y</a>       = FactorY;
<a name="l00146"></a>00146         myNeedUpdate    = <span class="keyword">true</span>;
<a name="l00147"></a>00147         myInvNeedUpdate = <span class="keyword">true</span>;
<a name="l00148"></a>00148     }
<a name="l00149"></a>00149 }
<a name="l00150"></a>00150 
<a name="l00151"></a>00151 
<a name="l00157"></a><a class="code" href="classsf_1_1Drawable.htm#11ba1d92bc863af6d95831d216802f61">00157</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1Drawable.htm#11ba1d92bc863af6d95831d216802f61" title="Set the center of the object, in coordinates relative to the top-left of the object...">Drawable::SetCenter</a>(<span class="keywordtype">float</span> CenterX, <span class="keywordtype">float</span> CenterY)
<a name="l00158"></a>00158 {
<a name="l00159"></a>00159     myCenter.<a class="code" href="classsf_1_1Vector2.htm#1e6ad77fa155f3753bfb92699bd28141" title="X coordinate of the vector.">x</a>      = CenterX;
<a name="l00160"></a>00160     myCenter.<a class="code" href="classsf_1_1Vector2.htm#420f2481b015f4eb929c75f2af564299" title="Y coordinate of the vector.">y</a>      = CenterY;
<a name="l00161"></a>00161     myNeedUpdate    = <span class="keyword">true</span>;
<a name="l00162"></a>00162     myInvNeedUpdate = <span class="keyword">true</span>;
<a name="l00163"></a>00163 }
<a name="l00164"></a>00164 
<a name="l00165"></a>00165 
<a name="l00171"></a><a class="code" href="classsf_1_1Drawable.htm#235e438555d8161f4995615f24fa0b11">00171</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1Drawable.htm#11ba1d92bc863af6d95831d216802f61" title="Set the center of the object, in coordinates relative to the top-left of the object...">Drawable::SetCenter</a>(<span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>&amp; Center)
<a name="l00172"></a>00172 {
<a name="l00173"></a>00173     <a class="code" href="classsf_1_1Drawable.htm#11ba1d92bc863af6d95831d216802f61" title="Set the center of the object, in coordinates relative to the top-left of the object...">SetCenter</a>(Center.<a class="code" href="classsf_1_1Vector2.htm#1e6ad77fa155f3753bfb92699bd28141" title="X coordinate of the vector.">x</a>, Center.<a class="code" href="classsf_1_1Vector2.htm#420f2481b015f4eb929c75f2af564299" title="Y coordinate of the vector.">y</a>);
<a name="l00174"></a>00174 }
<a name="l00175"></a>00175 
<a name="l00176"></a>00176 
<a name="l00180"></a><a class="code" href="classsf_1_1Drawable.htm#6d06383770eb01ffecf3d1cae6fec0ec">00180</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1Drawable.htm#6d06383770eb01ffecf3d1cae6fec0ec" title="Set the orientation of the object.">Drawable::SetRotation</a>(<span class="keywordtype">float</span> Rotation)
<a name="l00181"></a>00181 {
<a name="l00182"></a>00182     myRotation = <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(fmod(Rotation, 360));
<a name="l00183"></a>00183     <span class="keywordflow">if</span> (myRotation &lt; 0)
<a name="l00184"></a>00184         myRotation += 360.f;
<a name="l00185"></a>00185     myNeedUpdate    = <span class="keyword">true</span>;
<a name="l00186"></a>00186     myInvNeedUpdate = <span class="keyword">true</span>;
<a name="l00187"></a>00187 }
<a name="l00188"></a>00188 
<a name="l00189"></a>00189 
<a name="l00194"></a><a class="code" href="classsf_1_1Drawable.htm#8cae9f22220985e368a1b38af7644ffb">00194</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1Drawable.htm#8cae9f22220985e368a1b38af7644ffb" title="Set the color of the object.">Drawable::SetColor</a>(<span class="keyword">const</span> <a class="code" href="classsf_1_1Color.htm" title="Color is an utility class for manipulating 32-bits RGBA colors.">Color</a>&amp; Col)
<a name="l00195"></a>00195 {
<a name="l00196"></a>00196     myColor = Col;
<a name="l00197"></a>00197 }
<a name="l00198"></a>00198 
<a name="l00199"></a>00199 
<a name="l00204"></a><a class="code" href="classsf_1_1Drawable.htm#aa6558b1ae27e29cb825028473707da5">00204</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1Drawable.htm#aa6558b1ae27e29cb825028473707da5" title="Set the blending mode for the object.">Drawable::SetBlendMode</a>(<a class="code" href="namespacesf_1_1Blend.htm#1a2fa89de4bb0d82b2eb30399fe575ca">Blend::Mode</a> Mode)
<a name="l00205"></a>00205 {
<a name="l00206"></a>00206     myBlendMode = Mode;
<a name="l00207"></a>00207 }
<a name="l00208"></a>00208 
<a name="l00209"></a>00209 
<a name="l00213"></a><a class="code" href="classsf_1_1Drawable.htm#9ad52594fd5e835cbd03b79098d70e0b">00213</a> <span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>&amp; <a class="code" href="classsf_1_1Drawable.htm#9ad52594fd5e835cbd03b79098d70e0b" title="Get the position of the object.">Drawable::GetPosition</a>()<span class="keyword"> const</span>
<a name="l00214"></a>00214 <span class="keyword"></span>{
<a name="l00215"></a>00215     <span class="keywordflow">return</span> myPosition;
<a name="l00216"></a>00216 }
<a name="l00217"></a>00217 
<a name="l00218"></a>00218 
<a name="l00222"></a><a class="code" href="classsf_1_1Drawable.htm#fa4d6b97e7c10a82430ff9ee56009c97">00222</a> <span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>&amp; <a class="code" href="classsf_1_1Drawable.htm#fa4d6b97e7c10a82430ff9ee56009c97" title="Get the current scale of the object.">Drawable::GetScale</a>()<span class="keyword"> const</span>
<a name="l00223"></a>00223 <span class="keyword"></span>{
<a name="l00224"></a>00224     <span class="keywordflow">return</span> myScale;
<a name="l00225"></a>00225 }
<a name="l00226"></a>00226 
<a name="l00227"></a>00227 
<a name="l00231"></a><a class="code" href="classsf_1_1Drawable.htm#de634efe8d6264282acc564fa5ea77c0">00231</a> <span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>&amp; <a class="code" href="classsf_1_1Drawable.htm#de634efe8d6264282acc564fa5ea77c0" title="Get the center of the object.">Drawable::GetCenter</a>()<span class="keyword"> const</span>
<a name="l00232"></a>00232 <span class="keyword"></span>{
<a name="l00233"></a>00233     <span class="keywordflow">return</span> myCenter;
<a name="l00234"></a>00234 }
<a name="l00235"></a>00235 
<a name="l00236"></a>00236 
<a name="l00240"></a><a class="code" href="classsf_1_1Drawable.htm#4e82bec096673bccf7ceac5207617017">00240</a> <span class="keywordtype">float</span> <a class="code" href="classsf_1_1Drawable.htm#4e82bec096673bccf7ceac5207617017" title="Get the orientation of the object.">Drawable::GetRotation</a>()<span class="keyword"> const</span>
<a name="l00241"></a>00241 <span class="keyword"></span>{
<a name="l00242"></a>00242     <span class="keywordflow">return</span> myRotation;
<a name="l00243"></a>00243 }
<a name="l00244"></a>00244 
<a name="l00245"></a>00245 
<a name="l00249"></a><a class="code" href="classsf_1_1Drawable.htm#a2a028c4a975b5ed6d5a560a1c44e0c8">00249</a> <span class="keyword">const</span> <a class="code" href="classsf_1_1Color.htm" title="Color is an utility class for manipulating 32-bits RGBA colors.">Color</a>&amp; <a class="code" href="classsf_1_1Drawable.htm#a2a028c4a975b5ed6d5a560a1c44e0c8" title="Get the color of the object.">Drawable::GetColor</a>()<span class="keyword"> const</span>
<a name="l00250"></a>00250 <span class="keyword"></span>{
<a name="l00251"></a>00251     <span class="keywordflow">return</span> myColor;
<a name="l00252"></a>00252 }
<a name="l00253"></a>00253 
<a name="l00254"></a>00254 
<a name="l00258"></a><a class="code" href="classsf_1_1Drawable.htm#b6446c4717a2800cad85db55cb55409a">00258</a> <a class="code" href="namespacesf_1_1Blend.htm#1a2fa89de4bb0d82b2eb30399fe575ca">Blend::Mode</a> <a class="code" href="classsf_1_1Drawable.htm#b6446c4717a2800cad85db55cb55409a" title="Get the current blending mode.">Drawable::GetBlendMode</a>()<span class="keyword"> const</span>
<a name="l00259"></a>00259 <span class="keyword"></span>{
<a name="l00260"></a>00260     <span class="keywordflow">return</span> myBlendMode;
<a name="l00261"></a>00261 }
<a name="l00262"></a>00262 
<a name="l00263"></a>00263 
<a name="l00268"></a><a class="code" href="classsf_1_1Drawable.htm#501df9af956362b3e3769d80381c051b">00268</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1Drawable.htm#501df9af956362b3e3769d80381c051b" title="Move the object of a given offset (take 2 values).">Drawable::Move</a>(<span class="keywordtype">float</span> OffsetX, <span class="keywordtype">float</span> OffsetY)
<a name="l00269"></a>00269 {
<a name="l00270"></a>00270     <a class="code" href="classsf_1_1Drawable.htm#c8de7bfe092736083dcf23b0dbd22b1e" title="Set the X position of the object.">SetX</a>(myPosition.<a class="code" href="classsf_1_1Vector2.htm#1e6ad77fa155f3753bfb92699bd28141" title="X coordinate of the vector.">x</a> + OffsetX);
<a name="l00271"></a>00271     <a class="code" href="classsf_1_1Drawable.htm#83fecebe749c1aca9070eafd63e1a0c9" title="Set the Y position of the object.">SetY</a>(myPosition.<a class="code" href="classsf_1_1Vector2.htm#420f2481b015f4eb929c75f2af564299" title="Y coordinate of the vector.">y</a> + OffsetY);
<a name="l00272"></a>00272 }
<a name="l00273"></a>00273 
<a name="l00274"></a>00274 
<a name="l00278"></a><a class="code" href="classsf_1_1Drawable.htm#3c0ac0851d6b0ebed80ae9641ff93161">00278</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1Drawable.htm#501df9af956362b3e3769d80381c051b" title="Move the object of a given offset (take 2 values).">Drawable::Move</a>(<span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>&amp; Offset)
<a name="l00279"></a>00279 {
<a name="l00280"></a>00280     <a class="code" href="classsf_1_1Drawable.htm#501df9af956362b3e3769d80381c051b" title="Move the object of a given offset (take 2 values).">Move</a>(Offset.<a class="code" href="classsf_1_1Vector2.htm#1e6ad77fa155f3753bfb92699bd28141" title="X coordinate of the vector.">x</a>, Offset.<a class="code" href="classsf_1_1Vector2.htm#420f2481b015f4eb929c75f2af564299" title="Y coordinate of the vector.">y</a>);
<a name="l00281"></a>00281 }
<a name="l00282"></a>00282 
<a name="l00283"></a>00283 
<a name="l00287"></a><a class="code" href="classsf_1_1Drawable.htm#2a132c9f2f3736b7d0f6ea80303caacd">00287</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1Drawable.htm#2a132c9f2f3736b7d0f6ea80303caacd" title="Scale the object (take 2 values).">Drawable::Scale</a>(<span class="keywordtype">float</span> FactorX, <span class="keywordtype">float</span> FactorY)
<a name="l00288"></a>00288 {
<a name="l00289"></a>00289     <a class="code" href="classsf_1_1Drawable.htm#0cafae61a1d23bddb059d64df0e1502f" title="Set the X scale factor of the object.">SetScaleX</a>(myScale.<a class="code" href="classsf_1_1Vector2.htm#1e6ad77fa155f3753bfb92699bd28141" title="X coordinate of the vector.">x</a> * FactorX);
<a name="l00290"></a>00290     <a class="code" href="classsf_1_1Drawable.htm#89e7793c74c656e5850b71d0ab34b8bf" title="Set the Y scale factor of the object.">SetScaleY</a>(myScale.<a class="code" href="classsf_1_1Vector2.htm#420f2481b015f4eb929c75f2af564299" title="Y coordinate of the vector.">y</a> * FactorY);
<a name="l00291"></a>00291 }
<a name="l00292"></a>00292 
<a name="l00293"></a>00293 
<a name="l00297"></a><a class="code" href="classsf_1_1Drawable.htm#c969d85eaf63f072de9e963bd973e91a">00297</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1Drawable.htm#2a132c9f2f3736b7d0f6ea80303caacd" title="Scale the object (take 2 values).">Drawable::Scale</a>(<span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>&amp; Factor)
<a name="l00298"></a>00298 {
<a name="l00299"></a>00299     <a class="code" href="classsf_1_1Drawable.htm#2a132c9f2f3736b7d0f6ea80303caacd" title="Scale the object (take 2 values).">Scale</a>(Factor.<a class="code" href="classsf_1_1Vector2.htm#1e6ad77fa155f3753bfb92699bd28141" title="X coordinate of the vector.">x</a>, Factor.<a class="code" href="classsf_1_1Vector2.htm#420f2481b015f4eb929c75f2af564299" title="Y coordinate of the vector.">y</a>);
<a name="l00300"></a>00300 }
<a name="l00301"></a>00301 
<a name="l00302"></a>00302 
<a name="l00306"></a><a class="code" href="classsf_1_1Drawable.htm#3e7d558d0ef488485a2d3f885ff2b419">00306</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1Drawable.htm#3e7d558d0ef488485a2d3f885ff2b419" title="Rotate the object.">Drawable::Rotate</a>(<span class="keywordtype">float</span> Angle)
<a name="l00307"></a>00307 {
<a name="l00308"></a>00308     <a class="code" href="classsf_1_1Drawable.htm#6d06383770eb01ffecf3d1cae6fec0ec" title="Set the orientation of the object.">SetRotation</a>(myRotation + Angle);
<a name="l00309"></a>00309 }
<a name="l00310"></a>00310 
<a name="l00311"></a>00311 
<a name="l00316"></a><a class="code" href="classsf_1_1Drawable.htm#809f25ae0b3a2015ec8a44fe9f5a0008">00316</a> <a class="code" href="classsf_1_1Vector2.htm">sf::Vector2f</a> <a class="code" href="classsf_1_1Drawable.htm#809f25ae0b3a2015ec8a44fe9f5a0008" title="Transform a point from global coordinates into local coordinates (ie it applies the...">Drawable::TransformToLocal</a>(<span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">sf::Vector2f</a>&amp; Point)<span class="keyword"> const</span>
<a name="l00317"></a>00317 <span class="keyword"></span>{
<a name="l00318"></a>00318     <span class="keywordflow">return</span> <a class="code" href="classsf_1_1Drawable.htm#48238d5726104ba7ddb42f21fc5d5b2f" title="Get the inverse transform matrix of the drawable.">GetInverseMatrix</a>().<a class="code" href="classsf_1_1Matrix3.htm#8cb1106305307a8fbf8450f4aa6f4151" title="Transform a point by the matrix.">Transform</a>(Point);
<a name="l00319"></a>00319 }
<a name="l00320"></a>00320 
<a name="l00325"></a><a class="code" href="classsf_1_1Drawable.htm#fe3cb6e62921ce13806c27dc727f8945">00325</a> <a class="code" href="classsf_1_1Vector2.htm">sf::Vector2f</a> <a class="code" href="classsf_1_1Drawable.htm#fe3cb6e62921ce13806c27dc727f8945" title="Transform a point from local coordinates into global coordinates (ie it applies the...">Drawable::TransformToGlobal</a>(<span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">sf::Vector2f</a>&amp; Point)<span class="keyword"> const</span>
<a name="l00326"></a>00326 <span class="keyword"></span>{
<a name="l00327"></a>00327     <span class="keywordflow">return</span> <a class="code" href="classsf_1_1Drawable.htm#c659a89e42063d13aa9ebe2b534d404e" title="Get the transform matrix of the drawable.">GetMatrix</a>().<a class="code" href="classsf_1_1Matrix3.htm#8cb1106305307a8fbf8450f4aa6f4151" title="Transform a point by the matrix.">Transform</a>(Point);
<a name="l00328"></a>00328 }
<a name="l00329"></a>00329 
<a name="l00330"></a>00330 
<a name="l00334"></a><a class="code" href="classsf_1_1Drawable.htm#c659a89e42063d13aa9ebe2b534d404e">00334</a> <span class="keyword">const</span> <a class="code" href="classsf_1_1Matrix3.htm" title="Utility class to manipulate 3x3 matrices representing 2D transformations.">Matrix3</a>&amp; <a class="code" href="classsf_1_1Drawable.htm#c659a89e42063d13aa9ebe2b534d404e" title="Get the transform matrix of the drawable.">Drawable::GetMatrix</a>()<span class="keyword"> const</span>
<a name="l00335"></a>00335 <span class="keyword"></span>{
<a name="l00336"></a>00336     <span class="comment">// First recompute it if needed</span>
<a name="l00337"></a>00337     <span class="keywordflow">if</span> (myNeedUpdate)
<a name="l00338"></a>00338     {
<a name="l00339"></a>00339         myMatrix.<a class="code" href="classsf_1_1Matrix3.htm#beb18b51c51229e809725e4cd5741b2d" title="Build a matrix from a set of transformations.">SetFromTransformations</a>(myCenter, myPosition, myRotation, myScale);
<a name="l00340"></a>00340         myNeedUpdate = <span class="keyword">false</span>;
<a name="l00341"></a>00341     }
<a name="l00342"></a>00342 
<a name="l00343"></a>00343     <span class="keywordflow">return</span> myMatrix;
<a name="l00344"></a>00344 }
<a name="l00345"></a>00345 
<a name="l00346"></a>00346 
<a name="l00350"></a><a class="code" href="classsf_1_1Drawable.htm#48238d5726104ba7ddb42f21fc5d5b2f">00350</a> <span class="keyword">const</span> <a class="code" href="classsf_1_1Matrix3.htm" title="Utility class to manipulate 3x3 matrices representing 2D transformations.">Matrix3</a>&amp; <a class="code" href="classsf_1_1Drawable.htm#48238d5726104ba7ddb42f21fc5d5b2f" title="Get the inverse transform matrix of the drawable.">Drawable::GetInverseMatrix</a>()<span class="keyword"> const</span>
<a name="l00351"></a>00351 <span class="keyword"></span>{
<a name="l00352"></a>00352     <span class="comment">// First recompute it if needed</span>
<a name="l00353"></a>00353     <span class="keywordflow">if</span> (myInvNeedUpdate)
<a name="l00354"></a>00354     {
<a name="l00355"></a>00355         myInvMatrix     = <a class="code" href="classsf_1_1Drawable.htm#c659a89e42063d13aa9ebe2b534d404e" title="Get the transform matrix of the drawable.">GetMatrix</a>().<a class="code" href="classsf_1_1Matrix3.htm#fa7b544f401812b55ace055043385e8e" title="Return the inverse of the matrix.">GetInverse</a>();
<a name="l00356"></a>00356         myInvNeedUpdate = <span class="keyword">false</span>;
<a name="l00357"></a>00357     }
<a name="l00358"></a>00358 
<a name="l00359"></a>00359     <span class="keywordflow">return</span> myInvMatrix;
<a name="l00360"></a>00360 }
<a name="l00361"></a>00361 
<a name="l00362"></a>00362 
<a name="l00366"></a>00366 <span class="keywordtype">void</span> Drawable::Draw(<a class="code" href="classsf_1_1RenderTarget.htm" title="Base class for all render targets (window, image, .">RenderTarget</a>&amp; Target)<span class="keyword"> const</span>
<a name="l00367"></a>00367 <span class="keyword"></span>{
<a name="l00368"></a>00368     <span class="comment">// Save the current modelview matrix and set the new one</span>
<a name="l00369"></a>00369     GLCheck(glMatrixMode(GL_MODELVIEW));
<a name="l00370"></a>00370     GLCheck(glPushMatrix());
<a name="l00371"></a>00371     GLCheck(glMultMatrixf(<a class="code" href="classsf_1_1Drawable.htm#c659a89e42063d13aa9ebe2b534d404e" title="Get the transform matrix of the drawable.">GetMatrix</a>().Get4x4Elements()));
<a name="l00372"></a>00372 
<a name="l00373"></a>00373     <span class="comment">// Setup alpha-blending</span>
<a name="l00374"></a>00374     <span class="keywordflow">if</span> (myBlendMode == <a class="code" href="namespacesf_1_1Blend.htm#1a2fa89de4bb0d82b2eb30399fe575ca4b6aa39cf8edd92775ee03ba7fd047ea" title="No blending.">Blend::None</a>)
<a name="l00375"></a>00375     {
<a name="l00376"></a>00376         GLCheck(glDisable(GL_BLEND));
<a name="l00377"></a>00377     }
<a name="l00378"></a>00378     <span class="keywordflow">else</span>
<a name="l00379"></a>00379     {
<a name="l00380"></a>00380         GLCheck(glEnable(GL_BLEND));
<a name="l00381"></a>00381 
<a name="l00382"></a>00382         <span class="keywordflow">switch</span> (myBlendMode)
<a name="l00383"></a>00383         {
<a name="l00384"></a>00384             <span class="keywordflow">case</span> <a class="code" href="namespacesf_1_1Blend.htm#1a2fa89de4bb0d82b2eb30399fe575ca23075ecfbf49e19b713cc18188a7661a" title="Pixel = Src * a + Dest * (1 - a).">Blend::Alpha</a> :    GLCheck(glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA)); <span class="keywordflow">break</span>;
<a name="l00385"></a>00385             <span class="keywordflow">case</span> <a class="code" href="namespacesf_1_1Blend.htm#1a2fa89de4bb0d82b2eb30399fe575cad40133cc93b5ee0975eb4c2266815563" title="Pixel = Src + Dest.">Blend::Add</a> :      GLCheck(glBlendFunc(GL_SRC_ALPHA, GL_ONE));                 <span class="keywordflow">break</span>;
<a name="l00386"></a>00386             <span class="keywordflow">case</span> <a class="code" href="namespacesf_1_1Blend.htm#1a2fa89de4bb0d82b2eb30399fe575ca7a5f5cbb669b8ec859e3f7927451c736" title="Pixel = Src * Dest.">Blend::Multiply</a> : GLCheck(glBlendFunc(GL_DST_COLOR, GL_ZERO));                <span class="keywordflow">break</span>;
<a name="l00387"></a>00387             <span class="keywordflow">default</span> :                                                                          <span class="keywordflow">break</span>;
<a name="l00388"></a>00388         }
<a name="l00389"></a>00389     }
<a name="l00390"></a>00390 
<a name="l00391"></a>00391     <span class="comment">// Set color</span>
<a name="l00392"></a>00392     GLCheck(glColor4f(myColor.r / 255.f, myColor.g / 255.f, myColor.b / 255.f, myColor.a / 255.f));
<a name="l00393"></a>00393 
<a name="l00394"></a>00394     <span class="comment">// Let the derived class render the object geometry</span>
<a name="l00395"></a>00395     Render(Target);
<a name="l00396"></a>00396 
<a name="l00397"></a>00397     <span class="comment">// Restore the previous modelview matrix</span>
<a name="l00398"></a>00398     GLCheck(glMatrixMode(GL_MODELVIEW));
<a name="l00399"></a>00399     GLCheck(glPopMatrix());
<a name="l00400"></a>00400 }
<a name="l00401"></a>00401 
<a name="l00402"></a>00402 } <span class="comment">// namespace sf</span>
</pre></div></div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
