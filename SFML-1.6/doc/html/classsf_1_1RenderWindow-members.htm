<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>sf::RenderWindow Member List</h1>This is the complete list of members for <a class="el" href="classsf_1_1RenderWindow.htm">sf::RenderWindow</a>, including all inherited members.<p><table>
  <tr class="memlist"><td><a class="el" href="classsf_1_1RenderWindow.htm#7066f80705fb53c2c4a9fe068fc47a8a">Capture</a>() const </td><td><a class="el" href="classsf_1_1RenderWindow.htm">sf::RenderWindow</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1RenderTarget.htm#125645088d7b2df07599ea36fbb8b87e">Clear</a>(const Color &amp;FillColor=Color(0, 0, 0))</td><td><a class="el" href="classsf_1_1RenderTarget.htm">sf::RenderTarget</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Window.htm#b04439f6fb9fdfe40f882676fdb2938c">Close</a>()</td><td><a class="el" href="classsf_1_1Window.htm">sf::Window</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1RenderWindow.htm#05c614a2cdc2c2c4e3b473e39b3b9a17">ConvertCoords</a>(unsigned int WindowX, unsigned int WindowY, const View *TargetView=NULL) const </td><td><a class="el" href="classsf_1_1RenderWindow.htm">sf::RenderWindow</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Window.htm#a891f1cbd7d77c4dc02ac950b6e76f61">Create</a>(VideoMode Mode, const std::string &amp;Title, unsigned long WindowStyle=Style::Resize|Style::Close, const WindowSettings &amp;Params=WindowSettings())</td><td><a class="el" href="classsf_1_1Window.htm">sf::Window</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Window.htm#58e264c181fd70e67986d26fea69a71d">Create</a>(WindowHandle Handle, const WindowSettings &amp;Params=WindowSettings())</td><td><a class="el" href="classsf_1_1Window.htm">sf::Window</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Window.htm#ee37843c5c882f7b3a0788b310308435">Display</a>()</td><td><a class="el" href="classsf_1_1Window.htm">sf::Window</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1RenderTarget.htm#18678bb6afe22b7462e2cf08f701d2ff">Draw</a>(const Drawable &amp;Object)</td><td><a class="el" href="classsf_1_1RenderTarget.htm">sf::RenderTarget</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Window.htm#43ac767f0b7b697b392444d639b909e0">EnableKeyRepeat</a>(bool Enabled)</td><td><a class="el" href="classsf_1_1Window.htm">sf::Window</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1RenderTarget.htm#16db9179a7f035c59b8ecdd10cc2e699">GetDefaultView</a>()</td><td><a class="el" href="classsf_1_1RenderTarget.htm">sf::RenderTarget</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Window.htm#65cb14f66a870f459bd66e11e52fbfe8">GetEvent</a>(Event &amp;EventReceived)</td><td><a class="el" href="classsf_1_1Window.htm">sf::Window</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Window.htm#63571ef14c9351899bcd605fb101c254">GetFrameTime</a>() const </td><td><a class="el" href="classsf_1_1Window.htm">sf::Window</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1RenderWindow.htm#efa842a47f9c2415d1f8e93543ed2447">GetHeight</a>() const </td><td><a class="el" href="classsf_1_1RenderWindow.htm">sf::RenderWindow</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Window.htm#49db47a79ca98b7d65087adeea06e919">GetInput</a>() const </td><td><a class="el" href="classsf_1_1Window.htm">sf::Window</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Window.htm#27321006595f9f6a482b26b13800695f">GetSettings</a>() const </td><td><a class="el" href="classsf_1_1Window.htm">sf::Window</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1RenderTarget.htm#d426b7ba51cc6970fb828a2bef020274">GetView</a>() const </td><td><a class="el" href="classsf_1_1RenderTarget.htm">sf::RenderTarget</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1RenderWindow.htm#e2b04f655a655b7c4bfac22958266e0c">GetWidth</a>() const </td><td><a class="el" href="classsf_1_1RenderWindow.htm">sf::RenderWindow</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1RenderTarget.htm#3d9265548b6903ab7f645d12177bba24">Initialize</a>()</td><td><a class="el" href="classsf_1_1RenderTarget.htm">sf::RenderTarget</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Window.htm#5c4c82e1fdb4252108314fcbe462ad8d">IsOpened</a>() const </td><td><a class="el" href="classsf_1_1Window.htm">sf::Window</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1RenderTarget.htm#b763d16f00166b516fead600d8824c71">PreserveOpenGLStates</a>(bool Preserve)</td><td><a class="el" href="classsf_1_1RenderTarget.htm">sf::RenderTarget</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1RenderTarget.htm#2997c96cbd93cb8ce0aba2ddae35b86f">RenderTarget</a>()</td><td><a class="el" href="classsf_1_1RenderTarget.htm">sf::RenderTarget</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1RenderWindow.htm#839bbf336bdcafb084dafc3076fc9021">RenderWindow</a>()</td><td><a class="el" href="classsf_1_1RenderWindow.htm">sf::RenderWindow</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1RenderWindow.htm#da5aeec63eddbfacb6ee093ed0fff082">RenderWindow</a>(VideoMode Mode, const std::string &amp;Title, unsigned long WindowStyle=Style::Resize|Style::Close, const WindowSettings &amp;Params=WindowSettings())</td><td><a class="el" href="classsf_1_1RenderWindow.htm">sf::RenderWindow</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1RenderWindow.htm#b35dccdc0c735f50edba3acb0cfbea03">RenderWindow</a>(WindowHandle Handle, const WindowSettings &amp;Params=WindowSettings())</td><td><a class="el" href="classsf_1_1RenderWindow.htm">sf::RenderWindow</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Window.htm#9fc1e745594d5cf6a30225ec9ea36675">SetActive</a>(bool Active=true) const </td><td><a class="el" href="classsf_1_1Window.htm">sf::Window</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Window.htm#369d1764893c6fde8979fcf04142dc55">SetCursorPosition</a>(unsigned int Left, unsigned int Top)</td><td><a class="el" href="classsf_1_1Window.htm">sf::Window</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Window.htm#5544031f1d2965c00532fb5660763f33">SetFramerateLimit</a>(unsigned int Limit)</td><td><a class="el" href="classsf_1_1Window.htm">sf::Window</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Window.htm#36fa09e52af66878b8b826457b8f1dfa">SetIcon</a>(unsigned int Width, unsigned int Height, const Uint8 *Pixels)</td><td><a class="el" href="classsf_1_1Window.htm">sf::Window</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Window.htm#d685eed68b85a66c8000a08e9a28aa91">SetJoystickThreshold</a>(float Threshold)</td><td><a class="el" href="classsf_1_1Window.htm">sf::Window</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Window.htm#3a6d2908a624a8afda4b2fdd9ef46058">SetPosition</a>(int Left, int Top)</td><td><a class="el" href="classsf_1_1Window.htm">sf::Window</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Window.htm#dc4461bfaa9b4ff0fd0364a5079a47ef">SetSize</a>(unsigned int Width, unsigned int Height)</td><td><a class="el" href="classsf_1_1Window.htm">sf::Window</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1RenderTarget.htm#7060ca19e685d8d5b7c6f5dd9b5906e1">SetView</a>(const View &amp;NewView)</td><td><a class="el" href="classsf_1_1RenderTarget.htm">sf::RenderTarget</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Window.htm#727c01602c86710fd935f9892946b2de">Show</a>(bool State)</td><td><a class="el" href="classsf_1_1Window.htm">sf::Window</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Window.htm#6142e38cb60901e6604284425714f3f0">ShowMouseCursor</a>(bool Show)</td><td><a class="el" href="classsf_1_1Window.htm">sf::Window</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Window.htm#cb8391cc93ff730288e2a8dd6b0bb7b5">UseVerticalSync</a>(bool Enabled)</td><td><a class="el" href="classsf_1_1Window.htm">sf::Window</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Window.htm#5359122166b4dc492c3d25caf08ccfc4">Window</a>()</td><td><a class="el" href="classsf_1_1Window.htm">sf::Window</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Window.htm#8a89aba8776a4eeb5393522a0e6513c9">Window</a>(VideoMode Mode, const std::string &amp;Title, unsigned long WindowStyle=Style::Resize|Style::Close, const WindowSettings &amp;Params=WindowSettings())</td><td><a class="el" href="classsf_1_1Window.htm">sf::Window</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Window.htm#ef6c45b1d53ed4a884ccb9c609d2456a">Window</a>(WindowHandle Handle, const WindowSettings &amp;Params=WindowSettings())</td><td><a class="el" href="classsf_1_1Window.htm">sf::Window</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1RenderTarget.htm#45414a2f09b257db7e7b37861d70c5a0">~RenderTarget</a>()</td><td><a class="el" href="classsf_1_1RenderTarget.htm">sf::RenderTarget</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1RenderWindow.htm#b95277816e7237146ebfeb6d35f85020">~RenderWindow</a>()</td><td><a class="el" href="classsf_1_1RenderWindow.htm">sf::RenderWindow</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Window.htm#6d5a00ce5cc93a2c0bc8ae0e317f5008">~Window</a>()</td><td><a class="el" href="classsf_1_1Window.htm">sf::Window</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1WindowListener.htm#0c5603bbe6dc4980cc4ed55019952ec0">~WindowListener</a>()</td><td><a class="el" href="classsf_1_1WindowListener.htm">sf::WindowListener</a></td><td><code> [inline, protected, virtual]</code></td></tr>
</table></div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
