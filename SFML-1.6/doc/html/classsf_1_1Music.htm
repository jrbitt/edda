<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><b>sf</b>::<a class="el" href="classsf_1_1Music.htm">Music</a>
  </div>
</div>
<div class="contents">
<h1>sf::Music Class Reference</h1><!-- doxytag: class="sf::Music" --><!-- doxytag: inherits="sf::SoundStream" --><a class="el" href="classsf_1_1Music.htm" title="Music defines a big sound played using streaming, so usually what we call a music...">Music</a> defines a big sound played using streaming, so usually what we call a music :).  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="Music_8hpp-source.htm">Music.hpp</a>&gt;</code>
<p>
<div class="dynheader">
Inheritance diagram for sf::Music:</div>
<div class="dynsection">

<p><center><img src="classsf_1_1Music.png" usemap="#sf::Music_map" border="0" alt=""></center>
<map name="sf::Music_map">
<area href="classsf_1_1SoundStream.htm" alt="sf::SoundStream" shape="rect" coords="56,56,159,80">
<area href="classsf_1_1Thread.htm" alt="sf::Thread" shape="rect" coords="0,0,103,24">
<area href="classsf_1_1Sound.htm" alt="sf::Sound" shape="rect" coords="113,0,216,24">
</map>
</div>

<p>
<a href="classsf_1_1Music-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Types</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.htm#28ad2186cde78fed2c79c867b9622195">Status</a> </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Enumeration of the sound states.  <a href="classsf_1_1SoundStream.htm#28ad2186cde78fed2c79c867b9622195">More...</a><br></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Music.htm#18db20495fc566e5f9c26fcfe1a5dff6">Music</a> (std::size_t BufferSize=44100)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Construct the music with a buffer size.  <a href="#18db20495fc566e5f9c26fcfe1a5dff6"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Music.htm#4c65860fed2f01d0eaa6c4199870414b">~Music</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Destructor.  <a href="#4c65860fed2f01d0eaa6c4199870414b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Music.htm#26986766bc5674a87da1bcb10bef59db">OpenFromFile</a> (const std::string &amp;Filename)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Open a music file (doesn't play it -- call <a class="el" href="classsf_1_1SoundStream.htm#4d8437ef9a952fe3798bd239ff20d9bf" title="Start playing the audio stream.">Play()</a> for that).  <a href="#26986766bc5674a87da1bcb10bef59db"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Music.htm#07896cadcaf54e2998e0f91fb2d6d017">OpenFromMemory</a> (const char *Data, std::size_t SizeInBytes)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Open a music file from memory (doesn't play it -- call <a class="el" href="classsf_1_1SoundStream.htm#4d8437ef9a952fe3798bd239ff20d9bf" title="Start playing the audio stream.">Play()</a> for that).  <a href="#07896cadcaf54e2998e0f91fb2d6d017"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Music.htm#dbda9cff41ec10cb85db056cf67e5e50">GetDuration</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the music duration.  <a href="#dbda9cff41ec10cb85db056cf67e5e50"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.htm#4d8437ef9a952fe3798bd239ff20d9bf">Play</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Start playing the audio stream.  <a href="#4d8437ef9a952fe3798bd239ff20d9bf"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.htm#53c9e9b160bcbcc89c93c1682b4525df">Stop</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Stop playing the audio stream.  <a href="#53c9e9b160bcbcc89c93c1682b4525df"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.htm#bdcb5c8f3b5884a27e2eb013f5e36858">GetChannelsCount</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return the number of channels (1 = mono, 2 = stereo).  <a href="#bdcb5c8f3b5884a27e2eb013f5e36858"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.htm#74dabd1177bb60c8bd64bb6bbedb64bc">GetSampleRate</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the stream sample rate.  <a href="#74dabd1177bb60c8bd64bb6bbedb64bc"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classsf_1_1Sound.htm#28ad2186cde78fed2c79c867b9622195">Status</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.htm#cef2468ca4bc3e8ced76b11fb95c7ef2">GetStatus</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the status of the stream (stopped, paused, playing).  <a href="#cef2468ca4bc3e8ced76b11fb95c7ef2"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.htm#d11fee9eb4baba68d6ed9f44bc6170ac">GetPlayingOffset</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the current playing position of the stream.  <a href="#d11fee9eb4baba68d6ed9f44bc6170ac"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.htm#1072090152b10d83f43f0cd6bbd82b4e">SetLoop</a> (bool Loop)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the stream loop state.  <a href="#1072090152b10d83f43f0cd6bbd82b4e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.htm#caecb1c68af4a9d75f9e9ad2d42afa78">GetLoop</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Tell whether or not the stream is looping.  <a href="#caecb1c68af4a9d75f9e9ad2d42afa78"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.htm#ed9b6b06c0fa9c2d0b8c094eb2826793">Initialize</a> (unsigned int ChannelsCount, unsigned int SampleRate)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the audio stream parameters, you must call it before <a class="el" href="classsf_1_1SoundStream.htm#4d8437ef9a952fe3798bd239ff20d9bf" title="Start playing the audio stream.">Play()</a>.  <a href="#ed9b6b06c0fa9c2d0b8c094eb2826793"></a><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
<a class="el" href="classsf_1_1Music.htm" title="Music defines a big sound played using streaming, so usually what we call a music...">Music</a> defines a big sound played using streaming, so usually what we call a music :). 
<p>Definition at line <a class="el" href="Music_8hpp-source.htm#l00047">47</a> of file <a class="el" href="Music_8hpp-source.htm">Music.hpp</a>.</p>
<hr><h2>Member Enumeration Documentation</h2>
<a class="anchor" name="28ad2186cde78fed2c79c867b9622195"></a><!-- doxytag: member="sf::Music::Status" ref="28ad2186cde78fed2c79c867b9622195" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classsf_1_1Sound.htm#28ad2186cde78fed2c79c867b9622195">sf::Sound::Status</a><code> [inherited]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Enumeration of the sound states. 
<p>

<p>Definition at line <a class="el" href="Sound_8hpp-source.htm#l00052">52</a> of file <a class="el" href="Sound_8hpp-source.htm">Sound.hpp</a>.</p>

</div>
</div><p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="18db20495fc566e5f9c26fcfe1a5dff6"></a><!-- doxytag: member="sf::Music::Music" ref="18db20495fc566e5f9c26fcfe1a5dff6" args="(std::size_t BufferSize=44100)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::Music::Music           </td>
          <td>(</td>
          <td class="paramtype">std::size_t&nbsp;</td>
          <td class="paramname"> <em>BufferSize</em> = <code>44100</code>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [explicit]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Construct the music with a buffer size. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>BufferSize</em>&nbsp;</td><td>: Size of the internal buffer, expressed in number of samples (ie. size taken by the music in memory) (44100 by default) </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="Music_8cpp-source.htm#l00040">40</a> of file <a class="el" href="Music_8cpp-source.htm">Music.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="4c65860fed2f01d0eaa6c4199870414b"></a><!-- doxytag: member="sf::Music::~Music" ref="4c65860fed2f01d0eaa6c4199870414b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::Music::~Music           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Destructor. 
<p>

<p>Definition at line <a class="el" href="Music_8cpp-source.htm#l00052">52</a> of file <a class="el" href="Music_8cpp-source.htm">Music.cpp</a>.</p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="bdcb5c8f3b5884a27e2eb013f5e36858"></a><!-- doxytag: member="sf::Music::GetChannelsCount" ref="bdcb5c8f3b5884a27e2eb013f5e36858" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int sf::SoundStream::GetChannelsCount           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Return the number of channels (1 = mono, 2 = stereo). 
<p>
Return the number of channels (1 = mono, 2 = stereo, .<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Number of channels</dd></dl>
..) 
<p>Definition at line <a class="el" href="SoundStream_8cpp-source.htm#l00126">126</a> of file <a class="el" href="SoundStream_8cpp-source.htm">SoundStream.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="dbda9cff41ec10cb85db056cf67e5e50"></a><!-- doxytag: member="sf::Music::GetDuration" ref="dbda9cff41ec10cb85db056cf67e5e50" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float sf::Music::GetDuration           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the music duration. 
<p>
Get the sound duration.<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd><a class="el" href="classsf_1_1Music.htm" title="Music defines a big sound played using streaming, so usually what we call a music...">Music</a> duration, in seconds </dd></dl>

<p>Definition at line <a class="el" href="Music_8cpp-source.htm#l00148">148</a> of file <a class="el" href="Music_8cpp-source.htm">Music.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="caecb1c68af4a9d75f9e9ad2d42afa78"></a><!-- doxytag: member="sf::Music::GetLoop" ref="caecb1c68af4a9d75f9e9ad2d42afa78" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::SoundStream::GetLoop           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Tell whether or not the stream is looping. 
<p>
Tell whether or not the music is looping.<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>True if the music is looping, false otherwise </dd></dl>

<p>Reimplemented from <a class="el" href="classsf_1_1Sound.htm#5cdc44ade7bda8db2d0431701d72495e">sf::Sound</a>.</p>

<p>Definition at line <a class="el" href="SoundStream_8cpp-source.htm#l00180">180</a> of file <a class="el" href="SoundStream_8cpp-source.htm">SoundStream.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="d11fee9eb4baba68d6ed9f44bc6170ac"></a><!-- doxytag: member="sf::Music::GetPlayingOffset" ref="d11fee9eb4baba68d6ed9f44bc6170ac" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float sf::SoundStream::GetPlayingOffset           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the current playing position of the stream. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Current playing position, expressed in seconds<p>
Current playing position, expressed in seconds </dd></dl>

<p>Reimplemented from <a class="el" href="classsf_1_1Sound.htm#0e80c736a6865123be0c19e99f36467f">sf::Sound</a>.</p>

<p>Definition at line <a class="el" href="SoundStream_8cpp-source.htm#l00162">162</a> of file <a class="el" href="SoundStream_8cpp-source.htm">SoundStream.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="74dabd1177bb60c8bd64bb6bbedb64bc"></a><!-- doxytag: member="sf::Music::GetSampleRate" ref="74dabd1177bb60c8bd64bb6bbedb64bc" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int sf::SoundStream::GetSampleRate           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the stream sample rate. 
<p>
Get the sound frequency (sample rate).<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Stream frequency (number of samples per second) </dd></dl>

<p>Definition at line <a class="el" href="SoundStream_8cpp-source.htm#l00135">135</a> of file <a class="el" href="SoundStream_8cpp-source.htm">SoundStream.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="cef2468ca4bc3e8ced76b11fb95c7ef2"></a><!-- doxytag: member="sf::Music::GetStatus" ref="cef2468ca4bc3e8ced76b11fb95c7ef2" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Sound.htm#28ad2186cde78fed2c79c867b9622195">Sound::Status</a> sf::SoundStream::GetStatus           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the status of the stream (stopped, paused, playing). 
<p>
Get the status of the sound (stopped, paused, playing).<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Current status of the sound </dd></dl>

<p>Reimplemented from <a class="el" href="classsf_1_1Sound.htm#76c97fca3a5092db606eb66461f063af">sf::Sound</a>.</p>

<p>Definition at line <a class="el" href="SoundStream_8cpp-source.htm#l00144">144</a> of file <a class="el" href="SoundStream_8cpp-source.htm">SoundStream.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="ed9b6b06c0fa9c2d0b8c094eb2826793"></a><!-- doxytag: member="sf::Music::Initialize" ref="ed9b6b06c0fa9c2d0b8c094eb2826793" args="(unsigned int ChannelsCount, unsigned int SampleRate)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::SoundStream::Initialize           </td>
          <td>(</td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>ChannelsCount</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>SampleRate</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [protected, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the audio stream parameters, you must call it before <a class="el" href="classsf_1_1SoundStream.htm#4d8437ef9a952fe3798bd239ff20d9bf" title="Start playing the audio stream.">Play()</a>. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>ChannelsCount</em>&nbsp;</td><td>: Number of channels </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>SampleRate</em>&nbsp;</td><td>: Sample rate </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="SoundStream_8cpp-source.htm#l00064">64</a> of file <a class="el" href="SoundStream_8cpp-source.htm">SoundStream.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="26986766bc5674a87da1bcb10bef59db"></a><!-- doxytag: member="sf::Music::OpenFromFile" ref="26986766bc5674a87da1bcb10bef59db" args="(const std::string &amp;Filename)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::Music::OpenFromFile           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>Filename</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Open a music file (doesn't play it -- call <a class="el" href="classsf_1_1SoundStream.htm#4d8437ef9a952fe3798bd239ff20d9bf" title="Start playing the audio stream.">Play()</a> for that). 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Filename</em>&nbsp;</td><td>: Path of the music file to open</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>True if loading has been successful </dd></dl>

<p>Definition at line <a class="el" href="Music_8cpp-source.htm#l00064">64</a> of file <a class="el" href="Music_8cpp-source.htm">Music.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="07896cadcaf54e2998e0f91fb2d6d017"></a><!-- doxytag: member="sf::Music::OpenFromMemory" ref="07896cadcaf54e2998e0f91fb2d6d017" args="(const char *Data, std::size_t SizeInBytes)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::Music::OpenFromMemory           </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>Data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t&nbsp;</td>
          <td class="paramname"> <em>SizeInBytes</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Open a music file from memory (doesn't play it -- call <a class="el" href="classsf_1_1SoundStream.htm#4d8437ef9a952fe3798bd239ff20d9bf" title="Start playing the audio stream.">Play()</a> for that). 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Data</em>&nbsp;</td><td>: Pointer to the file data in memory </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>SizeInBytes</em>&nbsp;</td><td>: Size of the data to load, in bytes</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>True if loading has been successful </dd></dl>

<p>Definition at line <a class="el" href="Music_8cpp-source.htm#l00091">91</a> of file <a class="el" href="Music_8cpp-source.htm">Music.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="4d8437ef9a952fe3798bd239ff20d9bf"></a><!-- doxytag: member="sf::Music::Play" ref="4d8437ef9a952fe3798bd239ff20d9bf" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::SoundStream::Play           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Start playing the audio stream. 
<p>

<p>Reimplemented from <a class="el" href="classsf_1_1Sound.htm#fdafa7970587f04d3833b4095c2de1db">sf::Sound</a>.</p>

<p>Definition at line <a class="el" href="SoundStream_8cpp-source.htm#l00085">85</a> of file <a class="el" href="SoundStream_8cpp-source.htm">SoundStream.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="1072090152b10d83f43f0cd6bbd82b4e"></a><!-- doxytag: member="sf::Music::SetLoop" ref="1072090152b10d83f43f0cd6bbd82b4e" args="(bool Loop)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::SoundStream::SetLoop           </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>Loop</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the stream loop state. 
<p>
Set the music loop state.<p>
This parameter is disabled by default<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Loop</em>&nbsp;</td><td>: True to play in loop, false to play once </td></tr>
  </table>
</dl>

<p>Reimplemented from <a class="el" href="classsf_1_1Sound.htm#4eb9966b7289c69623a39cc0125012f4">sf::Sound</a>.</p>

<p>Definition at line <a class="el" href="SoundStream_8cpp-source.htm#l00171">171</a> of file <a class="el" href="SoundStream_8cpp-source.htm">SoundStream.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="53c9e9b160bcbcc89c93c1682b4525df"></a><!-- doxytag: member="sf::Music::Stop" ref="53c9e9b160bcbcc89c93c1682b4525df" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::SoundStream::Stop           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Stop playing the audio stream. 
<p>

<p>Reimplemented from <a class="el" href="classsf_1_1Sound.htm#b1f5f103f737c52ceb0b1a067b4d0630">sf::Sound</a>.</p>

<p>Definition at line <a class="el" href="SoundStream_8cpp-source.htm#l00115">115</a> of file <a class="el" href="SoundStream_8cpp-source.htm">SoundStream.cpp</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="Music_8hpp-source.htm">Music.hpp</a><li><a class="el" href="Music_8cpp-source.htm">Music.cpp</a></ul>
</div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
