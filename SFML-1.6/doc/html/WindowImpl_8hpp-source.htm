<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
    </ul>
  </div>
<h1>WindowImpl.hpp</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00002"></a>00002 <span class="comment">//</span>
<a name="l00003"></a>00003 <span class="comment">// SFML - Simple and Fast Multimedia Library</span>
<a name="l00004"></a>00004 <span class="comment">// Copyright (C) 2007-2009 Laurent Gomila (laurent.gom@gmail.com)</span>
<a name="l00005"></a>00005 <span class="comment">//</span>
<a name="l00006"></a>00006 <span class="comment">// This software is provided 'as-is', without any express or implied warranty.</span>
<a name="l00007"></a>00007 <span class="comment">// In no event will the authors be held liable for any damages arising from the use of this software.</span>
<a name="l00008"></a>00008 <span class="comment">//</span>
<a name="l00009"></a>00009 <span class="comment">// Permission is granted to anyone to use this software for any purpose,</span>
<a name="l00010"></a>00010 <span class="comment">// including commercial applications, and to alter it and redistribute it freely,</span>
<a name="l00011"></a>00011 <span class="comment">// subject to the following restrictions:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// 1. The origin of this software must not be misrepresented;</span>
<a name="l00014"></a>00014 <span class="comment">//    you must not claim that you wrote the original software.</span>
<a name="l00015"></a>00015 <span class="comment">//    If you use this software in a product, an acknowledgment</span>
<a name="l00016"></a>00016 <span class="comment">//    in the product documentation would be appreciated but is not required.</span>
<a name="l00017"></a>00017 <span class="comment">//</span>
<a name="l00018"></a>00018 <span class="comment">// 2. Altered source versions must be plainly marked as such,</span>
<a name="l00019"></a>00019 <span class="comment">//    and must not be misrepresented as being the original software.</span>
<a name="l00020"></a>00020 <span class="comment">//</span>
<a name="l00021"></a>00021 <span class="comment">// 3. This notice may not be removed or altered from any source distribution.</span>
<a name="l00022"></a>00022 <span class="comment">//</span>
<a name="l00024"></a>00024 <span class="comment"></span>
<a name="l00025"></a>00025 <span class="preprocessor">#ifndef SFML_WINDOWIMPL_HPP</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span><span class="preprocessor">#define SFML_WINDOWIMPL_HPP</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span>
<a name="l00029"></a>00029 <span class="comment">// Headers</span>
<a name="l00031"></a>00031 <span class="comment"></span><span class="preprocessor">#include &lt;SFML/Config.hpp&gt;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;SFML/System/NonCopyable.hpp&gt;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &lt;SFML/Window/Joystick.hpp&gt;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &lt;SFML/Window/VideoMode.hpp&gt;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &lt;SFML/Window/WindowHandle.hpp&gt;</span>
<a name="l00036"></a>00036 <span class="preprocessor">#include &lt;SFML/Window/WindowSettings.hpp&gt;</span>
<a name="l00037"></a>00037 <span class="preprocessor">#include &lt;set&gt;</span>
<a name="l00038"></a>00038 <span class="preprocessor">#include &lt;string&gt;</span>
<a name="l00039"></a>00039 
<a name="l00040"></a>00040 
<a name="l00041"></a>00041 <span class="keyword">namespace </span>sf
<a name="l00042"></a>00042 {
<a name="l00043"></a>00043 <span class="keyword">class </span>Event;
<a name="l00044"></a>00044 <span class="keyword">class </span>WindowListener;
<a name="l00045"></a>00045 
<a name="l00046"></a>00046 <span class="keyword">namespace </span>priv
<a name="l00047"></a>00047 {
<a name="l00051"></a>00051 <span class="keyword">class </span>WindowImpl : NonCopyable
<a name="l00052"></a>00052 {
<a name="l00053"></a>00053 <span class="keyword">public</span> :
<a name="l00054"></a>00054 
<a name="l00061"></a>00061     <span class="keyword">static</span> WindowImpl* New();
<a name="l00062"></a>00062 
<a name="l00074"></a>00074     <span class="keyword">static</span> WindowImpl* New(VideoMode Mode, <span class="keyword">const</span> std::string&amp; Title, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> WindowStyle, WindowSettings&amp; Params);
<a name="l00075"></a>00075 
<a name="l00085"></a>00085     <span class="keyword">static</span> WindowImpl* New(WindowHandle Handle, WindowSettings&amp; Params);
<a name="l00086"></a>00086 
<a name="l00087"></a>00087 <span class="keyword">public</span> :
<a name="l00088"></a>00088 
<a name="l00093"></a>00093     <span class="keyword">virtual</span> ~WindowImpl();
<a name="l00094"></a>00094 
<a name="l00101"></a>00101     <span class="keywordtype">void</span> AddListener(WindowListener* Listener);
<a name="l00102"></a>00102 
<a name="l00109"></a>00109     <span class="keywordtype">void</span> RemoveListener(WindowListener* Listener);
<a name="l00110"></a>00110 
<a name="l00115"></a>00115     <span class="keywordtype">void</span> Initialize();
<a name="l00116"></a>00116 
<a name="l00123"></a>00123     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> GetWidth() <span class="keyword">const</span>;
<a name="l00124"></a>00124 
<a name="l00131"></a>00131     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> GetHeight() <span class="keyword">const</span>;
<a name="l00132"></a>00132 
<a name="l00140"></a>00140     <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetActive(<span class="keywordtype">bool</span> Active = <span class="keyword">true</span>) <span class="keyword">const</span> = 0;
<a name="l00141"></a>00141 
<a name="l00149"></a>00149     <span class="keywordtype">void</span> SetJoystickThreshold(<span class="keywordtype">float</span> Threshold);
<a name="l00150"></a>00150 
<a name="l00155"></a>00155     <span class="keywordtype">void</span> DoEvents();
<a name="l00156"></a>00156 
<a name="l00163"></a>00163     <span class="keyword">static</span> <span class="keywordtype">bool</span> IsContextActive();
<a name="l00164"></a>00164 
<a name="l00169"></a>00169     <span class="keyword">virtual</span> <span class="keywordtype">void</span> Display() = 0;
<a name="l00170"></a>00170 
<a name="l00177"></a>00177     <span class="keyword">virtual</span> <span class="keywordtype">void</span> UseVerticalSync(<span class="keywordtype">bool</span> Enabled) = 0;
<a name="l00178"></a>00178 
<a name="l00185"></a>00185     <span class="keyword">virtual</span> <span class="keywordtype">void</span> ShowMouseCursor(<span class="keywordtype">bool</span> Show) = 0;
<a name="l00186"></a>00186 
<a name="l00194"></a>00194     <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetCursorPosition(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> Left, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> Top) = 0;
<a name="l00195"></a>00195 
<a name="l00203"></a>00203     <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetPosition(<span class="keywordtype">int</span> Left, <span class="keywordtype">int</span> Top) = 0;
<a name="l00204"></a>00204 
<a name="l00212"></a>00212     <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetSize(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> Width, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> Height) = 0;
<a name="l00213"></a>00213 
<a name="l00220"></a>00220     <span class="keyword">virtual</span> <span class="keywordtype">void</span> Show(<span class="keywordtype">bool</span> State) = 0;
<a name="l00221"></a>00221 
<a name="l00228"></a>00228     <span class="keyword">virtual</span> <span class="keywordtype">void</span> EnableKeyRepeat(<span class="keywordtype">bool</span> Enabled) = 0;
<a name="l00229"></a>00229 
<a name="l00238"></a>00238     <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetIcon(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> Width, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> Height, <span class="keyword">const</span> Uint8* Pixels) = 0;
<a name="l00239"></a>00239 
<a name="l00240"></a>00240 <span class="keyword">protected</span> :
<a name="l00241"></a>00241 
<a name="l00246"></a>00246     WindowImpl();
<a name="l00247"></a>00247 
<a name="l00254"></a>00254     <span class="keywordtype">void</span> SendEvent(<span class="keyword">const</span> Event&amp; EventToSend);
<a name="l00255"></a>00255 
<a name="l00271"></a>00271     <span class="keyword">static</span> <span class="keywordtype">int</span> EvaluateConfig(<span class="keyword">const</span> VideoMode&amp; Mode, <span class="keyword">const</span> WindowSettings&amp; Settings, <span class="keywordtype">int</span> ColorBits, <span class="keywordtype">int</span> DepthBits, <span class="keywordtype">int</span> StencilBits, <span class="keywordtype">int</span> Antialiasing);
<a name="l00272"></a>00272 
<a name="l00274"></a>00274     <span class="comment">// Member data</span>
<a name="l00276"></a>00276 <span class="comment"></span>    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> myWidth;  
<a name="l00277"></a>00277     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> myHeight; 
<a name="l00278"></a>00278 
<a name="l00279"></a>00279 <span class="keyword">private</span> :
<a name="l00280"></a>00280 
<a name="l00285"></a>00285     <span class="keywordtype">void</span> ProcessJoystickEvents();
<a name="l00286"></a>00286 
<a name="l00291"></a>00291     <span class="keyword">virtual</span> <span class="keywordtype">void</span> ProcessEvents() = 0;
<a name="l00292"></a>00292 
<a name="l00294"></a>00294     <span class="comment">// Member data</span>
<a name="l00296"></a>00296 <span class="comment"></span>    std::set&lt;WindowListener*&gt; myListeners;             
<a name="l00297"></a>00297     Joystick                  myJoysticks[<a class="code" href="namespacesf_1_1Joy.htm#bb37a72f42b3ef9841fcf8270d0ac881668554c121c39f79eceb15f8b6631a9f" title="Total number of supported joysticks.">Joy::Count</a>]; 
<a name="l00298"></a>00298     JoystickState             myJoyStates[<a class="code" href="namespacesf_1_1Joy.htm#bb37a72f42b3ef9841fcf8270d0ac881668554c121c39f79eceb15f8b6631a9f" title="Total number of supported joysticks.">Joy::Count</a>]; 
<a name="l00299"></a>00299     <span class="keywordtype">float</span>                     myJoyThreshold;          
<a name="l00300"></a>00300 };
<a name="l00301"></a>00301 
<a name="l00302"></a>00302 } <span class="comment">// namespace priv</span>
<a name="l00303"></a>00303 
<a name="l00304"></a>00304 } <span class="comment">// namespace sf</span>
<a name="l00305"></a>00305 
<a name="l00306"></a>00306 
<a name="l00307"></a>00307 <span class="preprocessor">#endif // SFML_WINDOWIMPL_HPP</span>
</pre></div></div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
