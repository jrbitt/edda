<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><b>sf</b>::<a class="el" href="classsf_1_1Http.htm">Http</a>
  </div>
</div>
<div class="contents">
<h1>sf::Http Class Reference</h1><!-- doxytag: class="sf::Http" --><!-- doxytag: inherits="sf::NonCopyable" -->This class provides methods for manipulating the HTTP protocol (described in RFC 1945).  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="Http_8hpp-source.htm">Http.hpp</a>&gt;</code>
<p>
<div class="dynheader">
Inheritance diagram for sf::Http:</div>
<div class="dynsection">

<p><center><img src="classsf_1_1Http.png" usemap="#sf::Http_map" border="0" alt=""></center>
<map name="sf::Http_map">
<area href="structsf_1_1NonCopyable.htm" alt="sf::NonCopyable" shape="rect" coords="0,0,105,24">
</map>
</div>

<p>
<a href="classsf_1_1Http-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Classes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Http_1_1Request.htm">Request</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This class wraps an HTTP request, which is basically :<ul>
<li>a header with a method, a target URI, and a set of field/value pairs</li><li>an optional body (for POST requests). </li></ul>
 <a href="classsf_1_1Http_1_1Request.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Http_1_1Response.htm">Response</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This class wraps an HTTP response, which is basically :<ul>
<li>a header with a status code and a set of field/value pairs</li><li>a body (the content of the requested resource). </li></ul>
 <a href="classsf_1_1Http_1_1Response.htm#_details">More...</a><br></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Http.htm#be2360194f99bdde402c9f97a85cf067">Http</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Default constructor.  <a href="#be2360194f99bdde402c9f97a85cf067"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Http.htm#283ce40b04ef678916834b8032796677">Http</a> (const std::string &amp;Host, unsigned short Port=0)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Construct the <a class="el" href="classsf_1_1Http.htm" title="This class provides methods for manipulating the HTTP protocol (described in RFC...">Http</a> instance with the target host.  <a href="#283ce40b04ef678916834b8032796677"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Http.htm#233fb3eabfeb22a442a0db92e38aee1f">SetHost</a> (const std::string &amp;Host, unsigned short Port=0)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the target host.  <a href="#233fb3eabfeb22a442a0db92e38aee1f"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classsf_1_1Http_1_1Response.htm">Response</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Http.htm#25a88ce405f43feb9faf4480ea3c2d61">SendRequest</a> (const <a class="el" href="classsf_1_1Http_1_1Request.htm">Request</a> &amp;Req, float Timeout=0.f)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Send a HTTP request and return the server's response.  <a href="#25a88ce405f43feb9faf4480ea3c2d61"></a><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
This class provides methods for manipulating the HTTP protocol (described in RFC 1945). 
<p>
It can connect to a website, get its files, send requests, etc. 
<p>Definition at line <a class="el" href="Http_8hpp-source.htm#l00045">45</a> of file <a class="el" href="Http_8hpp-source.htm">Http.hpp</a>.</p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="be2360194f99bdde402c9f97a85cf067"></a><!-- doxytag: member="sf::Http::Http" ref="be2360194f99bdde402c9f97a85cf067" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::Http::Http           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Default constructor. 
<p>

<p>Definition at line <a class="el" href="Http_8cpp-source.htm#l00307">307</a> of file <a class="el" href="Http_8cpp-source.htm">Http.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="283ce40b04ef678916834b8032796677"></a><!-- doxytag: member="sf::Http::Http" ref="283ce40b04ef678916834b8032796677" args="(const std::string &amp;Host, unsigned short Port=0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::Http::Http           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>Host</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned short&nbsp;</td>
          <td class="paramname"> <em>Port</em> = <code>0</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Construct the <a class="el" href="classsf_1_1Http.htm" title="This class provides methods for manipulating the HTTP protocol (described in RFC...">Http</a> instance with the target host. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Host</em>&nbsp;</td><td>: Web server to connect to </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>Port</em>&nbsp;</td><td>: Port to use for connection (0 by default -- use the standard port of the protocol used) </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="Http_8cpp-source.htm#l00318">318</a> of file <a class="el" href="Http_8cpp-source.htm">Http.cpp</a>.</p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="25a88ce405f43feb9faf4480ea3c2d61"></a><!-- doxytag: member="sf::Http::SendRequest" ref="25a88ce405f43feb9faf4480ea3c2d61" args="(const Request &amp;Req, float Timeout=0.f)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Http_1_1Response.htm">Http::Response</a> sf::Http::SendRequest           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Http_1_1Request.htm">Request</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>Req</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>Timeout</em> = <code>0.f</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Send a HTTP request and return the server's response. 
<p>
You must be connected to a host before sending requests. Any missing mandatory header field will be added with an appropriate value. Warning : this function waits for the server's response and may not return instantly; use a thread if you don't want to block your application.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Req</em>&nbsp;</td><td>: <a class="el" href="classsf_1_1Http_1_1Request.htm" title="This class wraps an HTTP request, which is basically :a header with a method, a target...">Request</a> to send </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>Timeout</em>&nbsp;</td><td>: Maximum time to wait, in seconds (0 by default, means no timeout)</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Server's response</dd></dl>
You must be connected to a host before sending requests. Any missing mandatory header field will be added with an appropriate value. Warning : this function waits for the server's response and may not return instantly; use a thread if you don't want to block your application. 
<p>Definition at line <a class="el" href="Http_8cpp-source.htm#l00366">366</a> of file <a class="el" href="Http_8cpp-source.htm">Http.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="233fb3eabfeb22a442a0db92e38aee1f"></a><!-- doxytag: member="sf::Http::SetHost" ref="233fb3eabfeb22a442a0db92e38aee1f" args="(const std::string &amp;Host, unsigned short Port=0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Http::SetHost           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>Host</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned short&nbsp;</td>
          <td class="paramname"> <em>Port</em> = <code>0</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the target host. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Host</em>&nbsp;</td><td>: Web server to connect to </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>Port</em>&nbsp;</td><td>: Port to use for connection (0 by default -- use the standard port of the protocol used) </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="Http_8cpp-source.htm#l00327">327</a> of file <a class="el" href="Http_8cpp-source.htm">Http.cpp</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="Http_8hpp-source.htm">Http.hpp</a><li><a class="el" href="Http_8cpp-source.htm">Http.cpp</a></ul>
</div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
