<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>sf::SocketTCP Member List</h1>This is the complete list of members for <a class="el" href="classsf_1_1SocketTCP.htm">sf::SocketTCP</a>, including all inherited members.<p><table>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketTCP.htm#70beb8cda69c4e9212fd5987f0d04107">Accept</a>(SocketTCP &amp;Connected, IPAddress *Address=NULL)</td><td><a class="el" href="classsf_1_1SocketTCP.htm">sf::SocketTCP</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketTCP.htm#70a5111cbddd1edbfa6cbd6017c6d044">Close</a>()</td><td><a class="el" href="classsf_1_1SocketTCP.htm">sf::SocketTCP</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketTCP.htm#dd590d0119fa8edbe8da1574b6c8f07f">Connect</a>(unsigned short Port, const IPAddress &amp;HostAddress, float Timeout=0.f)</td><td><a class="el" href="classsf_1_1SocketTCP.htm">sf::SocketTCP</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketTCP.htm#098d613057a72d9e5cfa76a77b5f7124">IsValid</a>() const </td><td><a class="el" href="classsf_1_1SocketTCP.htm">sf::SocketTCP</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketTCP.htm#3153062e1fb2a7afe9e0ed80f9204b39">Listen</a>(unsigned short Port)</td><td><a class="el" href="classsf_1_1SocketTCP.htm">sf::SocketTCP</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketTCP.htm#4d4dd9e422c485b8a8b390d1f210e84e">operator!=</a>(const SocketTCP &amp;Other) const </td><td><a class="el" href="classsf_1_1SocketTCP.htm">sf::SocketTCP</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketTCP.htm#dbcfa2c662f98a92beb509d3e5ebb1ce">operator&lt;</a>(const SocketTCP &amp;Other) const </td><td><a class="el" href="classsf_1_1SocketTCP.htm">sf::SocketTCP</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketTCP.htm#ae32dcf5042a50544848140ec1f94ed1">operator==</a>(const SocketTCP &amp;Other) const </td><td><a class="el" href="classsf_1_1SocketTCP.htm">sf::SocketTCP</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketTCP.htm#47027b00ab5589017a5c235f2deb3ab0">Receive</a>(char *Data, std::size_t MaxSize, std::size_t &amp;SizeReceived)</td><td><a class="el" href="classsf_1_1SocketTCP.htm">sf::SocketTCP</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketTCP.htm#4389aa92523e0a6b3f2d6517cbde74fa">Receive</a>(Packet &amp;PacketToReceive)</td><td><a class="el" href="classsf_1_1SocketTCP.htm">sf::SocketTCP</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>Selector&lt; SocketTCP &gt;</b> (defined in <a class="el" href="classsf_1_1SocketTCP.htm">sf::SocketTCP</a>)</td><td><a class="el" href="classsf_1_1SocketTCP.htm">sf::SocketTCP</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketTCP.htm#4debed568966f75e3e63a70f08e67c21">Send</a>(const char *Data, std::size_t Size)</td><td><a class="el" href="classsf_1_1SocketTCP.htm">sf::SocketTCP</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketTCP.htm#a1825883276970b3d2f9b1d61763e5c7">Send</a>(Packet &amp;PacketToSend)</td><td><a class="el" href="classsf_1_1SocketTCP.htm">sf::SocketTCP</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketTCP.htm#a80f7711b15fe33a5c7005acedae43c9">SetBlocking</a>(bool Blocking)</td><td><a class="el" href="classsf_1_1SocketTCP.htm">sf::SocketTCP</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1SocketTCP.htm#098157a901a6f355b499085a3fb97afa">SocketTCP</a>()</td><td><a class="el" href="classsf_1_1SocketTCP.htm">sf::SocketTCP</a></td><td></td></tr>
</table></div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
