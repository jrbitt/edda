<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
    </ul>
  </div>
<h1>SocketHelper.cpp</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00002"></a>00002 <span class="comment">//</span>
<a name="l00003"></a>00003 <span class="comment">// SFML - Simple and Fast Multimedia Library</span>
<a name="l00004"></a>00004 <span class="comment">// Copyright (C) 2007-2009 Laurent Gomila (laurent.gom@gmail.com)</span>
<a name="l00005"></a>00005 <span class="comment">//</span>
<a name="l00006"></a>00006 <span class="comment">// This software is provided 'as-is', without any express or implied warranty.</span>
<a name="l00007"></a>00007 <span class="comment">// In no event will the authors be held liable for any damages arising from the use of this software.</span>
<a name="l00008"></a>00008 <span class="comment">//</span>
<a name="l00009"></a>00009 <span class="comment">// Permission is granted to anyone to use this software for any purpose,</span>
<a name="l00010"></a>00010 <span class="comment">// including commercial applications, and to alter it and redistribute it freely,</span>
<a name="l00011"></a>00011 <span class="comment">// subject to the following restrictions:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// 1. The origin of this software must not be misrepresented;</span>
<a name="l00014"></a>00014 <span class="comment">//    you must not claim that you wrote the original software.</span>
<a name="l00015"></a>00015 <span class="comment">//    If you use this software in a product, an acknowledgment</span>
<a name="l00016"></a>00016 <span class="comment">//    in the product documentation would be appreciated but is not required.</span>
<a name="l00017"></a>00017 <span class="comment">//</span>
<a name="l00018"></a>00018 <span class="comment">// 2. Altered source versions must be plainly marked as such,</span>
<a name="l00019"></a>00019 <span class="comment">//    and must not be misrepresented as being the original software.</span>
<a name="l00020"></a>00020 <span class="comment">//</span>
<a name="l00021"></a>00021 <span class="comment">// 3. This notice may not be removed or altered from any source distribution.</span>
<a name="l00022"></a>00022 <span class="comment">//</span>
<a name="l00024"></a>00024 <span class="comment"></span>
<a name="l00026"></a>00026 <span class="comment">// Headers</span>
<a name="l00028"></a>00028 <span class="comment"></span><span class="preprocessor">#include &lt;SFML/Network/SocketHelper.hpp&gt;</span>
<a name="l00029"></a>00029 
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 <span class="keyword">namespace </span>sf
<a name="l00032"></a>00032 {
<a name="l00036"></a><a class="code" href="classsf_1_1SocketHelper.htm#99e426a217cc8847264f837632b4e458">00036</a> SocketHelper::SocketType <a class="code" href="classsf_1_1SocketHelper.htm#99e426a217cc8847264f837632b4e458" title="Return the value of the invalid socket.">SocketHelper::InvalidSocket</a>()
<a name="l00037"></a>00037 {
<a name="l00038"></a>00038     <span class="keywordflow">return</span> INVALID_SOCKET;
<a name="l00039"></a>00039 }
<a name="l00040"></a>00040 
<a name="l00041"></a>00041 
<a name="l00045"></a><a class="code" href="classsf_1_1SocketHelper.htm#ec266cafe3270d1f2e210909b9b6d232">00045</a> <span class="keywordtype">bool</span> <a class="code" href="classsf_1_1SocketHelper.htm#ec266cafe3270d1f2e210909b9b6d232" title="Close / destroy a socket.">SocketHelper::Close</a>(SocketHelper::SocketType Socket)
<a name="l00046"></a>00046 {
<a name="l00047"></a>00047     <span class="keywordflow">return</span> closesocket(Socket) != -1;
<a name="l00048"></a>00048 }
<a name="l00049"></a>00049 
<a name="l00050"></a>00050 
<a name="l00054"></a><a class="code" href="classsf_1_1SocketHelper.htm#4815bb2bb615b3a4fd9ad597813697b8">00054</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1SocketHelper.htm#4815bb2bb615b3a4fd9ad597813697b8" title="Set a socket as blocking or non-blocking.">SocketHelper::SetBlocking</a>(SocketHelper::SocketType Socket, <span class="keywordtype">bool</span> Block)
<a name="l00055"></a>00055 {
<a name="l00056"></a>00056     <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> Blocking = Block ? 0 : 1;
<a name="l00057"></a>00057     ioctlsocket(Socket, FIONBIO, &amp;Blocking);
<a name="l00058"></a>00058 }
<a name="l00059"></a>00059 
<a name="l00060"></a>00060 
<a name="l00064"></a><a class="code" href="classsf_1_1SocketHelper.htm#7e634801c53a5a1b2ee16757e2d96a83">00064</a> Socket::Status <a class="code" href="classsf_1_1SocketHelper.htm#7e634801c53a5a1b2ee16757e2d96a83" title="Get the last socket error status.">SocketHelper::GetErrorStatus</a>()
<a name="l00065"></a>00065 {
<a name="l00066"></a>00066     <span class="keywordflow">switch</span> (WSAGetLastError())
<a name="l00067"></a>00067     {
<a name="l00068"></a>00068         <span class="keywordflow">case</span> WSAEWOULDBLOCK :  <span class="keywordflow">return</span> Socket::NotReady;
<a name="l00069"></a>00069         <span class="keywordflow">case</span> WSAECONNABORTED : <span class="keywordflow">return</span> Socket::Disconnected;
<a name="l00070"></a>00070         <span class="keywordflow">case</span> WSAECONNRESET :   <span class="keywordflow">return</span> Socket::Disconnected;
<a name="l00071"></a>00071         <span class="keywordflow">case</span> WSAETIMEDOUT :    <span class="keywordflow">return</span> Socket::Disconnected;
<a name="l00072"></a>00072         <span class="keywordflow">case</span> WSAENETRESET :    <span class="keywordflow">return</span> Socket::Disconnected;
<a name="l00073"></a>00073         <span class="keywordflow">case</span> WSAENOTCONN :     <span class="keywordflow">return</span> Socket::Disconnected;
<a name="l00074"></a>00074         <span class="keywordflow">default</span> :              <span class="keywordflow">return</span> Socket::Error;
<a name="l00075"></a>00075     }
<a name="l00076"></a>00076 }
<a name="l00077"></a>00077 
<a name="l00078"></a>00078 
<a name="l00080"></a>00080 <span class="comment">// Windows needs some initialization and cleanup to get</span>
<a name="l00081"></a>00081 <span class="comment">// sockets working properly... so let's create a class that will</span>
<a name="l00082"></a>00082 <span class="comment">// do it automatically</span>
<a name="l00084"></a>00084 <span class="comment"></span><span class="keyword">struct </span>SocketInitializer
<a name="l00085"></a>00085 {
<a name="l00086"></a>00086     SocketInitializer()
<a name="l00087"></a>00087     {
<a name="l00088"></a>00088         WSADATA InitData;
<a name="l00089"></a>00089         WSAStartup(MAKEWORD(2,2), &amp;InitData);
<a name="l00090"></a>00090     }
<a name="l00091"></a>00091 
<a name="l00092"></a>00092     ~SocketInitializer()
<a name="l00093"></a>00093     {
<a name="l00094"></a>00094         WSACleanup();
<a name="l00095"></a>00095     }
<a name="l00096"></a>00096 };
<a name="l00097"></a>00097 
<a name="l00098"></a>00098 SocketInitializer GlobalInitializer;
<a name="l00099"></a>00099 
<a name="l00100"></a>00100 } <span class="comment">// namespace sf</span>
</pre></div></div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
