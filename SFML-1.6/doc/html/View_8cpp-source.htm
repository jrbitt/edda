<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
    </ul>
  </div>
<h1>View.cpp</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00002"></a>00002 <span class="comment">//</span>
<a name="l00003"></a>00003 <span class="comment">// SFML - Simple and Fast Multimedia Library</span>
<a name="l00004"></a>00004 <span class="comment">// Copyright (C) 2007-2009 Laurent Gomila (laurent.gom@gmail.com)</span>
<a name="l00005"></a>00005 <span class="comment">//</span>
<a name="l00006"></a>00006 <span class="comment">// This software is provided 'as-is', without any express or implied warranty.</span>
<a name="l00007"></a>00007 <span class="comment">// In no event will the authors be held liable for any damages arising from the use of this software.</span>
<a name="l00008"></a>00008 <span class="comment">//</span>
<a name="l00009"></a>00009 <span class="comment">// Permission is granted to anyone to use this software for any purpose,</span>
<a name="l00010"></a>00010 <span class="comment">// including commercial applications, and to alter it and redistribute it freely,</span>
<a name="l00011"></a>00011 <span class="comment">// subject to the following restrictions:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// 1. The origin of this software must not be misrepresented;</span>
<a name="l00014"></a>00014 <span class="comment">//    you must not claim that you wrote the original software.</span>
<a name="l00015"></a>00015 <span class="comment">//    If you use this software in a product, an acknowledgment</span>
<a name="l00016"></a>00016 <span class="comment">//    in the product documentation would be appreciated but is not required.</span>
<a name="l00017"></a>00017 <span class="comment">//</span>
<a name="l00018"></a>00018 <span class="comment">// 2. Altered source versions must be plainly marked as such,</span>
<a name="l00019"></a>00019 <span class="comment">//    and must not be misrepresented as being the original software.</span>
<a name="l00020"></a>00020 <span class="comment">//</span>
<a name="l00021"></a>00021 <span class="comment">// 3. This notice may not be removed or altered from any source distribution.</span>
<a name="l00022"></a>00022 <span class="comment">//</span>
<a name="l00024"></a>00024 <span class="comment"></span>
<a name="l00026"></a>00026 <span class="comment">// Headers</span>
<a name="l00028"></a>00028 <span class="comment"></span><span class="preprocessor">#include &lt;SFML/Graphics/View.hpp&gt;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;algorithm&gt;</span>
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 <span class="keyword">namespace </span>sf
<a name="l00033"></a>00033 {
<a name="l00037"></a><a class="code" href="classsf_1_1View.htm#884afd75948366ba6c0f760b276496cc">00037</a> <a class="code" href="classsf_1_1View.htm#884afd75948366ba6c0f760b276496cc" title="Construct the view from a rectangle.">View::View</a>(<span class="keyword">const</span> <a class="code" href="classsf_1_1Rect.htm">FloatRect</a>&amp; ViewRect)
<a name="l00038"></a>00038 {
<a name="l00039"></a>00039     <a class="code" href="classsf_1_1View.htm#a5c2ac8985a573632f9a1e95d56cc2ee" title="Rebuild the view from a rectangle.">SetFromRect</a>(ViewRect);
<a name="l00040"></a>00040 }
<a name="l00041"></a>00041 
<a name="l00042"></a>00042 
<a name="l00046"></a><a class="code" href="classsf_1_1View.htm#0323ca80f81ad7feb877d328a0fdbb60">00046</a> <a class="code" href="classsf_1_1View.htm#884afd75948366ba6c0f760b276496cc" title="Construct the view from a rectangle.">View::View</a>(<span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">sf::Vector2f</a>&amp; Center, <span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">sf::Vector2f</a>&amp; HalfSize) :
<a name="l00047"></a>00047 myCenter    (Center),
<a name="l00048"></a>00048 myHalfSize  (HalfSize),
<a name="l00049"></a>00049 myNeedUpdate(true)
<a name="l00050"></a>00050 {
<a name="l00051"></a>00051 
<a name="l00052"></a>00052 }
<a name="l00053"></a>00053 
<a name="l00054"></a>00054 
<a name="l00058"></a><a class="code" href="classsf_1_1View.htm#f357e9c647672b94b8b8f584eaff1e86">00058</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1View.htm#f357e9c647672b94b8b8f584eaff1e86" title="Change the center of the view (take 2 values).">View::SetCenter</a>(<span class="keywordtype">float</span> X, <span class="keywordtype">float</span> Y)
<a name="l00059"></a>00059 {
<a name="l00060"></a>00060     myCenter.<a class="code" href="classsf_1_1Vector2.htm#1e6ad77fa155f3753bfb92699bd28141" title="X coordinate of the vector.">x</a>   = X;
<a name="l00061"></a>00061     myCenter.<a class="code" href="classsf_1_1Vector2.htm#420f2481b015f4eb929c75f2af564299" title="Y coordinate of the vector.">y</a>   = Y;
<a name="l00062"></a>00062     myNeedUpdate = <span class="keyword">true</span>;
<a name="l00063"></a>00063 }
<a name="l00064"></a>00064 
<a name="l00065"></a>00065 
<a name="l00069"></a><a class="code" href="classsf_1_1View.htm#fc62a34d1bb3c7a64ab5cc11941967cb">00069</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1View.htm#f357e9c647672b94b8b8f584eaff1e86" title="Change the center of the view (take 2 values).">View::SetCenter</a>(<span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">sf::Vector2f</a>&amp; Center)
<a name="l00070"></a>00070 {
<a name="l00071"></a>00071     <a class="code" href="classsf_1_1View.htm#f357e9c647672b94b8b8f584eaff1e86" title="Change the center of the view (take 2 values).">SetCenter</a>(Center.<a class="code" href="classsf_1_1Vector2.htm#1e6ad77fa155f3753bfb92699bd28141" title="X coordinate of the vector.">x</a>, Center.<a class="code" href="classsf_1_1Vector2.htm#420f2481b015f4eb929c75f2af564299" title="Y coordinate of the vector.">y</a>);
<a name="l00072"></a>00072 }
<a name="l00073"></a>00073 
<a name="l00074"></a>00074 
<a name="l00078"></a><a class="code" href="classsf_1_1View.htm#5e1a8e0c729daf4be95c1f27ba275a2a">00078</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1View.htm#5e1a8e0c729daf4be95c1f27ba275a2a" title="Change the half-size of the view (take 2 values).">View::SetHalfSize</a>(<span class="keywordtype">float</span> HalfWidth, <span class="keywordtype">float</span> HalfHeight)
<a name="l00079"></a>00079 {
<a name="l00080"></a>00080     myHalfSize.<a class="code" href="classsf_1_1Vector2.htm#1e6ad77fa155f3753bfb92699bd28141" title="X coordinate of the vector.">x</a> = HalfWidth;
<a name="l00081"></a>00081     myHalfSize.<a class="code" href="classsf_1_1Vector2.htm#420f2481b015f4eb929c75f2af564299" title="Y coordinate of the vector.">y</a> = HalfHeight;
<a name="l00082"></a>00082     myNeedUpdate = <span class="keyword">true</span>;
<a name="l00083"></a>00083 }
<a name="l00084"></a>00084 
<a name="l00085"></a>00085 
<a name="l00089"></a><a class="code" href="classsf_1_1View.htm#ce6e0d15b8fe1f2f0066d8438c01f1d3">00089</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1View.htm#5e1a8e0c729daf4be95c1f27ba275a2a" title="Change the half-size of the view (take 2 values).">View::SetHalfSize</a>(<span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">sf::Vector2f</a>&amp; HalfSize)
<a name="l00090"></a>00090 {
<a name="l00091"></a>00091     <a class="code" href="classsf_1_1View.htm#5e1a8e0c729daf4be95c1f27ba275a2a" title="Change the half-size of the view (take 2 values).">SetHalfSize</a>(HalfSize.<a class="code" href="classsf_1_1Vector2.htm#1e6ad77fa155f3753bfb92699bd28141" title="X coordinate of the vector.">x</a>, HalfSize.<a class="code" href="classsf_1_1Vector2.htm#420f2481b015f4eb929c75f2af564299" title="Y coordinate of the vector.">y</a>);
<a name="l00092"></a>00092 }
<a name="l00093"></a>00093 
<a name="l00094"></a>00094 
<a name="l00098"></a><a class="code" href="classsf_1_1View.htm#a5c2ac8985a573632f9a1e95d56cc2ee">00098</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1View.htm#a5c2ac8985a573632f9a1e95d56cc2ee" title="Rebuild the view from a rectangle.">View::SetFromRect</a>(<span class="keyword">const</span> <a class="code" href="classsf_1_1Rect.htm">FloatRect</a>&amp; ViewRect)
<a name="l00099"></a>00099 {
<a name="l00100"></a>00100     <a class="code" href="classsf_1_1View.htm#f357e9c647672b94b8b8f584eaff1e86" title="Change the center of the view (take 2 values).">SetCenter</a>(  (ViewRect.<a class="code" href="classsf_1_1Rect.htm#6ce87895496327187a20a46dc2479383" title="Right coordinate of the rectangle.">Right</a> + ViewRect.<a class="code" href="classsf_1_1Rect.htm#9619c6b9741163c86eea6a0b84b2f9b3" title="Left coordinate of the rectangle.">Left</a>) / 2, (ViewRect.<a class="code" href="classsf_1_1Rect.htm#b234b311011892cfd8a3e831dec341a8" title="Bottom coordinate of the rectangle.">Bottom</a> + ViewRect.<a class="code" href="classsf_1_1Rect.htm#4addcc0bf656fb5f2f80d406cf90c047" title="Top coordinate of the rectangle.">Top</a>) / 2);
<a name="l00101"></a>00101     <a class="code" href="classsf_1_1View.htm#5e1a8e0c729daf4be95c1f27ba275a2a" title="Change the half-size of the view (take 2 values).">SetHalfSize</a>((ViewRect.<a class="code" href="classsf_1_1Rect.htm#6ce87895496327187a20a46dc2479383" title="Right coordinate of the rectangle.">Right</a> - ViewRect.<a class="code" href="classsf_1_1Rect.htm#9619c6b9741163c86eea6a0b84b2f9b3" title="Left coordinate of the rectangle.">Left</a>) / 2, (ViewRect.<a class="code" href="classsf_1_1Rect.htm#b234b311011892cfd8a3e831dec341a8" title="Bottom coordinate of the rectangle.">Bottom</a> - ViewRect.<a class="code" href="classsf_1_1Rect.htm#4addcc0bf656fb5f2f80d406cf90c047" title="Top coordinate of the rectangle.">Top</a>) / 2);
<a name="l00102"></a>00102 }
<a name="l00103"></a>00103 
<a name="l00104"></a>00104 
<a name="l00108"></a><a class="code" href="classsf_1_1View.htm#edfc422283cb9dbd89c2beb70261b7fd">00108</a> <span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">sf::Vector2f</a>&amp; <a class="code" href="classsf_1_1View.htm#edfc422283cb9dbd89c2beb70261b7fd" title="Get the center of the view.">View::GetCenter</a>()<span class="keyword"> const</span>
<a name="l00109"></a>00109 <span class="keyword"></span>{
<a name="l00110"></a>00110     <span class="keywordflow">return</span> myCenter;
<a name="l00111"></a>00111 }
<a name="l00112"></a>00112 
<a name="l00113"></a>00113 
<a name="l00117"></a><a class="code" href="classsf_1_1View.htm#2fa0eb90604dd90ffdaf2405be276d47">00117</a> <span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">sf::Vector2f</a>&amp; <a class="code" href="classsf_1_1View.htm#2fa0eb90604dd90ffdaf2405be276d47" title="Get the half-size of the view.">View::GetHalfSize</a>()<span class="keyword"> const</span>
<a name="l00118"></a>00118 <span class="keyword"></span>{
<a name="l00119"></a>00119     <span class="keywordflow">return</span> myHalfSize;
<a name="l00120"></a>00120 }
<a name="l00121"></a>00121 
<a name="l00122"></a>00122 
<a name="l00126"></a><a class="code" href="classsf_1_1View.htm#af368a69233ee426a5fbd63dde1cc4bd">00126</a> <span class="keyword">const</span> <a class="code" href="classsf_1_1Rect.htm">sf::FloatRect</a>&amp; <a class="code" href="classsf_1_1View.htm#af368a69233ee426a5fbd63dde1cc4bd" title="Get the bounding rectangle of the view.">View::GetRect</a>()<span class="keyword"> const</span>
<a name="l00127"></a>00127 <span class="keyword"></span>{
<a name="l00128"></a>00128     <span class="comment">// Recompute it if needed</span>
<a name="l00129"></a>00129     <span class="keywordflow">if</span> (myNeedUpdate)
<a name="l00130"></a>00130         <span class="keyword">const_cast&lt;</span><a class="code" href="classsf_1_1View.htm" title="This class defines a view (position, size, etc.">View</a>*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;RecomputeMatrix();
<a name="l00131"></a>00131 
<a name="l00132"></a>00132     <span class="keywordflow">return</span> myRect;
<a name="l00133"></a>00133 }
<a name="l00134"></a>00134 
<a name="l00135"></a>00135 
<a name="l00139"></a><a class="code" href="classsf_1_1View.htm#8f1bfbae90991ab777994cad4f4bfa9c">00139</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1View.htm#8f1bfbae90991ab777994cad4f4bfa9c" title="Move the view (take 2 values).">View::Move</a>(<span class="keywordtype">float</span> OffsetX, <span class="keywordtype">float</span> OffsetY)
<a name="l00140"></a>00140 {
<a name="l00141"></a>00141     myCenter.<a class="code" href="classsf_1_1Vector2.htm#1e6ad77fa155f3753bfb92699bd28141" title="X coordinate of the vector.">x</a>  += OffsetX;
<a name="l00142"></a>00142     myCenter.<a class="code" href="classsf_1_1Vector2.htm#420f2481b015f4eb929c75f2af564299" title="Y coordinate of the vector.">y</a>  += OffsetY;
<a name="l00143"></a>00143     myNeedUpdate = <span class="keyword">true</span>;
<a name="l00144"></a>00144 }
<a name="l00145"></a>00145 
<a name="l00146"></a>00146 
<a name="l00150"></a><a class="code" href="classsf_1_1View.htm#e065331d6f2d450b3482c623c7506ced">00150</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1View.htm#8f1bfbae90991ab777994cad4f4bfa9c" title="Move the view (take 2 values).">View::Move</a>(<span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">sf::Vector2f</a>&amp; Offset)
<a name="l00151"></a>00151 {
<a name="l00152"></a>00152     <a class="code" href="classsf_1_1View.htm#8f1bfbae90991ab777994cad4f4bfa9c" title="Move the view (take 2 values).">Move</a>(Offset.<a class="code" href="classsf_1_1Vector2.htm#1e6ad77fa155f3753bfb92699bd28141" title="X coordinate of the vector.">x</a>, Offset.<a class="code" href="classsf_1_1Vector2.htm#420f2481b015f4eb929c75f2af564299" title="Y coordinate of the vector.">y</a>);
<a name="l00153"></a>00153 }
<a name="l00154"></a>00154 
<a name="l00155"></a>00155 
<a name="l00159"></a><a class="code" href="classsf_1_1View.htm#2bc9321a19bc371b3f29d8c9f25bcbb1">00159</a> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1View.htm#2bc9321a19bc371b3f29d8c9f25bcbb1" title="Resize the view rectangle to simulate a zoom / unzoom effect.">View::Zoom</a>(<span class="keywordtype">float</span> Factor)
<a name="l00160"></a>00160 {
<a name="l00161"></a>00161     <span class="keywordflow">if</span> (Factor != 0)
<a name="l00162"></a>00162     {
<a name="l00163"></a>00163         myHalfSize  /= Factor;
<a name="l00164"></a>00164         myNeedUpdate = <span class="keyword">true</span>;
<a name="l00165"></a>00165     }
<a name="l00166"></a>00166 }
<a name="l00167"></a>00167 
<a name="l00168"></a>00168 
<a name="l00172"></a>00172 <span class="keyword">const</span> <a class="code" href="classsf_1_1Matrix3.htm" title="Utility class to manipulate 3x3 matrices representing 2D transformations.">Matrix3</a>&amp; View::GetMatrix()<span class="keyword"> const</span>
<a name="l00173"></a>00173 <span class="keyword"></span>{
<a name="l00174"></a>00174     <span class="comment">// Recompute the matrix if needed</span>
<a name="l00175"></a>00175     <span class="keywordflow">if</span> (myNeedUpdate)
<a name="l00176"></a>00176         <span class="keyword">const_cast&lt;</span><a class="code" href="classsf_1_1View.htm" title="This class defines a view (position, size, etc.">View</a>*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;RecomputeMatrix();
<a name="l00177"></a>00177 
<a name="l00178"></a>00178     <span class="keywordflow">return</span> myMatrix;
<a name="l00179"></a>00179 }
<a name="l00180"></a>00180 
<a name="l00181"></a>00181 
<a name="l00185"></a>00185 <span class="keywordtype">void</span> View::RecomputeMatrix()
<a name="l00186"></a>00186 {
<a name="l00187"></a>00187     <span class="comment">// Compute the 4 corners of the view</span>
<a name="l00188"></a>00188     <span class="keywordtype">float</span> Left   = myCenter.<a class="code" href="classsf_1_1Vector2.htm#1e6ad77fa155f3753bfb92699bd28141" title="X coordinate of the vector.">x</a> - myHalfSize.<a class="code" href="classsf_1_1Vector2.htm#1e6ad77fa155f3753bfb92699bd28141" title="X coordinate of the vector.">x</a>;
<a name="l00189"></a>00189     <span class="keywordtype">float</span> Top    = myCenter.<a class="code" href="classsf_1_1Vector2.htm#420f2481b015f4eb929c75f2af564299" title="Y coordinate of the vector.">y</a> - myHalfSize.<a class="code" href="classsf_1_1Vector2.htm#420f2481b015f4eb929c75f2af564299" title="Y coordinate of the vector.">y</a>;
<a name="l00190"></a>00190     <span class="keywordtype">float</span> Right  = myCenter.<a class="code" href="classsf_1_1Vector2.htm#1e6ad77fa155f3753bfb92699bd28141" title="X coordinate of the vector.">x</a> + myHalfSize.<a class="code" href="classsf_1_1Vector2.htm#1e6ad77fa155f3753bfb92699bd28141" title="X coordinate of the vector.">x</a>;
<a name="l00191"></a>00191     <span class="keywordtype">float</span> Bottom = myCenter.<a class="code" href="classsf_1_1Vector2.htm#420f2481b015f4eb929c75f2af564299" title="Y coordinate of the vector.">y</a> + myHalfSize.<a class="code" href="classsf_1_1Vector2.htm#420f2481b015f4eb929c75f2af564299" title="Y coordinate of the vector.">y</a>;
<a name="l00192"></a>00192 
<a name="l00193"></a>00193     <span class="comment">// Update the view rectangle - be careful, reversed views are allowed !</span>
<a name="l00194"></a>00194     myRect.Left   = std::min(Left, Right);
<a name="l00195"></a>00195     myRect.Top    = std::min(Top, Bottom);
<a name="l00196"></a>00196     myRect.Right  = std::max(Left, Right);
<a name="l00197"></a>00197     myRect.Bottom = std::max(Top, Bottom);
<a name="l00198"></a>00198 
<a name="l00199"></a>00199     <span class="comment">// Update the projection matrix</span>
<a name="l00200"></a>00200     myMatrix(0, 0) = 2.f / (Right - Left);
<a name="l00201"></a>00201     myMatrix(1, 1) = 2.f / (Top - Bottom);
<a name="l00202"></a>00202     myMatrix(0, 2) = (Left + Right) / (Left - Right);
<a name="l00203"></a>00203     myMatrix(1, 2) = (Bottom + Top) / (Bottom - Top);
<a name="l00204"></a>00204 
<a name="l00205"></a>00205     myNeedUpdate = <span class="keyword">false</span>;
<a name="l00206"></a>00206 }
<a name="l00207"></a>00207 
<a name="l00208"></a>00208 } <span class="comment">// namespace sf</span>
</pre></div></div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
