<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><b>sf</b>::<a class="el" href="classsf_1_1VideoMode.htm">VideoMode</a>
  </div>
</div>
<div class="contents">
<h1>sf::VideoMode Class Reference</h1><!-- doxytag: class="sf::VideoMode" --><a class="el" href="classsf_1_1VideoMode.htm" title="VideoMode defines a video mode (width, height, bpp, frequency) and provides static...">VideoMode</a> defines a video mode (width, height, bpp, frequency) and provides static functions for getting modes supported by the display device.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="VideoMode_8hpp-source.htm">VideoMode.hpp</a>&gt;</code>
<p>

<p>
<a href="classsf_1_1VideoMode-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VideoMode.htm#04c9417e5c304510bef5f6aeb03f6ce1">VideoMode</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Default constructor.  <a href="#04c9417e5c304510bef5f6aeb03f6ce1"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VideoMode.htm#9478572db06121f70260e6b9dc21704e">VideoMode</a> (unsigned int ModeWidth, unsigned int ModeHeight, unsigned int ModeBpp=32)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Construct the video mode with its attributes.  <a href="#9478572db06121f70260e6b9dc21704e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VideoMode.htm#13ccf1d15900d7251659f871ea362c7c">IsValid</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Tell whether or not the video mode is supported.  <a href="#13ccf1d15900d7251659f871ea362c7c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VideoMode.htm#497c88cd2475d941f27a0ac2a0541fa1">operator==</a> (const <a class="el" href="classsf_1_1VideoMode.htm">VideoMode</a> &amp;Other) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Comparison operator overload -- tell if two video modes are equal.  <a href="#497c88cd2475d941f27a0ac2a0541fa1"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VideoMode.htm#7db70f110d4a1404e38ed8a909d77821">operator!=</a> (const <a class="el" href="classsf_1_1VideoMode.htm">VideoMode</a> &amp;Other) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Comparison operator overload -- tell if two video modes are different.  <a href="#7db70f110d4a1404e38ed8a909d77821"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static <a class="el" href="classsf_1_1VideoMode.htm">VideoMode</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VideoMode.htm#0b29193258c4855f75337e62f2b56eea">GetDesktopMode</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the current desktop video mode.  <a href="#0b29193258c4855f75337e62f2b56eea"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static <a class="el" href="classsf_1_1VideoMode.htm">VideoMode</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VideoMode.htm#50e64232abd41b7ee1016948b41ea5a2">GetMode</a> (std::size_t Index)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get a valid video mode Index must be in range [0, <a class="el" href="classsf_1_1VideoMode.htm#1700d0b9230f34533cadd88f5cc61723" title="Get valid video modes count.">GetModesCount()</a>[ Modes are sorted from best to worst.  <a href="#50e64232abd41b7ee1016948b41ea5a2"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static std::size_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VideoMode.htm#1700d0b9230f34533cadd88f5cc61723">GetModesCount</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get valid video modes count.  <a href="#1700d0b9230f34533cadd88f5cc61723"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Public Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VideoMode.htm#bee130381af7a465b29ea5cdb3927203">Width</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Video mode width, in pixels.  <a href="#bee130381af7a465b29ea5cdb3927203"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VideoMode.htm#c890fbaecc5d9b82b44123a0d5b3c0f5">Height</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Video mode height, in pixels.  <a href="#c890fbaecc5d9b82b44123a0d5b3c0f5"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VideoMode.htm#c2aa4a809527fd9da6b70c9479d02c7a">BitsPerPixel</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Video mode pixel depth, in bits per pixels.  <a href="#c2aa4a809527fd9da6b70c9479d02c7a"></a><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
<a class="el" href="classsf_1_1VideoMode.htm" title="VideoMode defines a video mode (width, height, bpp, frequency) and provides static...">VideoMode</a> defines a video mode (width, height, bpp, frequency) and provides static functions for getting modes supported by the display device. 
<p>Definition at line <a class="el" href="VideoMode_8hpp-source.htm#l00042">42</a> of file <a class="el" href="VideoMode_8hpp-source.htm">VideoMode.hpp</a>.</p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="04c9417e5c304510bef5f6aeb03f6ce1"></a><!-- doxytag: member="sf::VideoMode::VideoMode" ref="04c9417e5c304510bef5f6aeb03f6ce1" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::VideoMode::VideoMode           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Default constructor. 
<p>

<p>Definition at line <a class="el" href="VideoMode_8cpp-source.htm#l00067">67</a> of file <a class="el" href="VideoMode_8cpp-source.htm">VideoMode.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="9478572db06121f70260e6b9dc21704e"></a><!-- doxytag: member="sf::VideoMode::VideoMode" ref="9478572db06121f70260e6b9dc21704e" args="(unsigned int ModeWidth, unsigned int ModeHeight, unsigned int ModeBpp=32)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::VideoMode::VideoMode           </td>
          <td>(</td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>ModeWidth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>ModeHeight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>ModeBpp</em> = <code>32</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Construct the video mode with its attributes. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>ModeWidth</em>&nbsp;</td><td>: Width in pixels </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>ModeHeight</em>&nbsp;</td><td>: Height in pixels </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>ModeBpp</em>&nbsp;</td><td>: Pixel depths in bits per pixel (32 by default) </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="VideoMode_8cpp-source.htm#l00079">79</a> of file <a class="el" href="VideoMode_8cpp-source.htm">VideoMode.cpp</a>.</p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="0b29193258c4855f75337e62f2b56eea"></a><!-- doxytag: member="sf::VideoMode::GetDesktopMode" ref="0b29193258c4855f75337e62f2b56eea" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1VideoMode.htm">VideoMode</a> sf::VideoMode::GetDesktopMode           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the current desktop video mode. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Current desktop video mode </dd></dl>

<p>Definition at line <a class="el" href="VideoMode_8cpp-source.htm#l00091">91</a> of file <a class="el" href="VideoMode_8cpp-source.htm">VideoMode.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="50e64232abd41b7ee1016948b41ea5a2"></a><!-- doxytag: member="sf::VideoMode::GetMode" ref="50e64232abd41b7ee1016948b41ea5a2" args="(std::size_t Index)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1VideoMode.htm">VideoMode</a> sf::VideoMode::GetMode           </td>
          <td>(</td>
          <td class="paramtype">std::size_t&nbsp;</td>
          <td class="paramname"> <em>Index</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get a valid video mode Index must be in range [0, <a class="el" href="classsf_1_1VideoMode.htm#1700d0b9230f34533cadd88f5cc61723" title="Get valid video modes count.">GetModesCount()</a>[ Modes are sorted from best to worst. 
<p>
Get a valid video mode Index must be in range [0, <a class="el" href="classsf_1_1VideoMode.htm#1700d0b9230f34533cadd88f5cc61723" title="Get valid video modes count.">GetModesCount()</a>[.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Index</em>&nbsp;</td><td>: Index of video mode to get</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Corresponding video mode (invalid mode if index is out of range) </dd></dl>

<p>Definition at line <a class="el" href="VideoMode_8cpp-source.htm#l00102">102</a> of file <a class="el" href="VideoMode_8cpp-source.htm">VideoMode.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="1700d0b9230f34533cadd88f5cc61723"></a><!-- doxytag: member="sf::VideoMode::GetModesCount" ref="1700d0b9230f34533cadd88f5cc61723" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::size_t sf::VideoMode::GetModesCount           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get valid video modes count. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Number of valid video modes available </dd></dl>

<p>Definition at line <a class="el" href="VideoMode_8cpp-source.htm#l00117">117</a> of file <a class="el" href="VideoMode_8cpp-source.htm">VideoMode.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="13ccf1d15900d7251659f871ea362c7c"></a><!-- doxytag: member="sf::VideoMode::IsValid" ref="13ccf1d15900d7251659f871ea362c7c" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::VideoMode::IsValid           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Tell whether or not the video mode is supported. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>True if video mode is supported, false otherwise </dd></dl>

<p>Definition at line <a class="el" href="VideoMode_8cpp-source.htm#l00129">129</a> of file <a class="el" href="VideoMode_8cpp-source.htm">VideoMode.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="7db70f110d4a1404e38ed8a909d77821"></a><!-- doxytag: member="sf::VideoMode::operator!=" ref="7db70f110d4a1404e38ed8a909d77821" args="(const VideoMode &amp;Other) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::VideoMode::operator!=           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1VideoMode.htm">VideoMode</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>Other</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Comparison operator overload -- tell if two video modes are different. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Other</em>&nbsp;</td><td>: Video mode to compare</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>True if modes are different </dd></dl>

<p>Definition at line <a class="el" href="VideoMode_8cpp-source.htm#l00152">152</a> of file <a class="el" href="VideoMode_8cpp-source.htm">VideoMode.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="497c88cd2475d941f27a0ac2a0541fa1"></a><!-- doxytag: member="sf::VideoMode::operator==" ref="497c88cd2475d941f27a0ac2a0541fa1" args="(const VideoMode &amp;Other) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::VideoMode::operator==           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1VideoMode.htm">VideoMode</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>Other</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Comparison operator overload -- tell if two video modes are equal. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Other</em>&nbsp;</td><td>: Video mode to compare</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>True if modes are equal </dd></dl>

<p>Definition at line <a class="el" href="VideoMode_8cpp-source.htm#l00141">141</a> of file <a class="el" href="VideoMode_8cpp-source.htm">VideoMode.cpp</a>.</p>

</div>
</div><p>
<hr><h2>Member Data Documentation</h2>
<a class="anchor" name="c2aa4a809527fd9da6b70c9479d02c7a"></a><!-- doxytag: member="sf::VideoMode::BitsPerPixel" ref="c2aa4a809527fd9da6b70c9479d02c7a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="classsf_1_1VideoMode.htm#c2aa4a809527fd9da6b70c9479d02c7a">sf::VideoMode::BitsPerPixel</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Video mode pixel depth, in bits per pixels. 
<p>

<p>Definition at line <a class="el" href="VideoMode_8hpp-source.htm#l00123">123</a> of file <a class="el" href="VideoMode_8hpp-source.htm">VideoMode.hpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="c890fbaecc5d9b82b44123a0d5b3c0f5"></a><!-- doxytag: member="sf::VideoMode::Height" ref="c890fbaecc5d9b82b44123a0d5b3c0f5" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="classsf_1_1VideoMode.htm#c890fbaecc5d9b82b44123a0d5b3c0f5">sf::VideoMode::Height</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Video mode height, in pixels. 
<p>

<p>Definition at line <a class="el" href="VideoMode_8hpp-source.htm#l00122">122</a> of file <a class="el" href="VideoMode_8hpp-source.htm">VideoMode.hpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="bee130381af7a465b29ea5cdb3927203"></a><!-- doxytag: member="sf::VideoMode::Width" ref="bee130381af7a465b29ea5cdb3927203" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="classsf_1_1VideoMode.htm#bee130381af7a465b29ea5cdb3927203">sf::VideoMode::Width</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Video mode width, in pixels. 
<p>

<p>Definition at line <a class="el" href="VideoMode_8hpp-source.htm#l00121">121</a> of file <a class="el" href="VideoMode_8hpp-source.htm">VideoMode.hpp</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="VideoMode_8hpp-source.htm">VideoMode.hpp</a><li><a class="el" href="VideoMode_8cpp-source.htm">VideoMode.cpp</a></ul>
</div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
