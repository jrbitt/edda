<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>sf::Packet Member List</h1>This is the complete list of members for <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>, including all inherited members.<p><table>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Packet.htm#aaa020852bd7be75625b9f64b3a77c64">Append</a>(const void *Data, std::size_t SizeInBytes)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Packet.htm#3a7a30fb7a39e59df0cbd773756f60da">Clear</a>()</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Packet.htm#8d587905fb63e62419f1cc338eceed36">EndOfPacket</a>() const </td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Packet.htm#78286172beef1f89bd2a77edb7118c7a">GetData</a>() const </td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Packet.htm#4e6fcdc0ff42ad45b33cea22be253b0d">GetDataSize</a>() const </td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Packet.htm#087ae98bb7e93f8c82b29b88aee2f8d6">operator bool</a>() const </td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Packet.htm#63d813d3e0e7f8438ad15a0130b4f550">operator&lt;&lt;</a>(bool Data)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>operator&lt;&lt;</b>(Int8 Data) (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>operator&lt;&lt;</b>(Uint8 Data) (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>operator&lt;&lt;</b>(Int16 Data) (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>operator&lt;&lt;</b>(Uint16 Data) (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>operator&lt;&lt;</b>(Int32 Data) (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>operator&lt;&lt;</b>(Uint32 Data) (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>operator&lt;&lt;</b>(float Data) (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>operator&lt;&lt;</b>(double Data) (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>operator&lt;&lt;</b>(const char *Data) (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>operator&lt;&lt;</b>(const std::string &amp;Data) (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>operator&lt;&lt;</b>(const wchar_t *Data) (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>operator&lt;&lt;</b>(const std::wstring &amp;Data) (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Packet.htm#8dfd4b8767cfd705a71d79b76d12ee16">operator&gt;&gt;</a>(bool &amp;Data)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>operator&gt;&gt;</b>(Int8 &amp;Data) (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>operator&gt;&gt;</b>(Uint8 &amp;Data) (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>operator&gt;&gt;</b>(Int16 &amp;Data) (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>operator&gt;&gt;</b>(Uint16 &amp;Data) (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>operator&gt;&gt;</b>(Int32 &amp;Data) (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>operator&gt;&gt;</b>(Uint32 &amp;Data) (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>operator&gt;&gt;</b>(float &amp;Data) (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>operator&gt;&gt;</b>(double &amp;Data) (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>operator&gt;&gt;</b>(char *Data) (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>operator&gt;&gt;</b>(std::string &amp;Data) (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>operator&gt;&gt;</b>(wchar_t *Data) (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>operator&gt;&gt;</b>(std::wstring &amp;Data) (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Packet.htm#786e5d4ced83992ceefa1799963ea858">Packet</a>()</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SocketTCP</b> (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td><code> [friend]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SocketUDP</b> (defined in <a class="el" href="classsf_1_1Packet.htm">sf::Packet</a>)</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Packet.htm#bd57f3b7a6e0e9119f4021754b5b19e5">~Packet</a>()</td><td><a class="el" href="classsf_1_1Packet.htm">sf::Packet</a></td><td><code> [virtual]</code></td></tr>
</table></div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
