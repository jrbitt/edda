<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><b>sf</b>::<a class="el" href="classsf_1_1Ftp.htm">Ftp</a>
  </div>
</div>
<div class="contents">
<h1>sf::Ftp Class Reference</h1><!-- doxytag: class="sf::Ftp" --><!-- doxytag: inherits="sf::NonCopyable" -->This class provides methods for manipulating the FTP protocol (described in RFC 959).  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="Ftp_8hpp-source.htm">Ftp.hpp</a>&gt;</code>
<p>
<div class="dynheader">
Inheritance diagram for sf::Ftp:</div>
<div class="dynsection">

<p><center><img src="classsf_1_1Ftp.png" usemap="#sf::Ftp_map" border="0" alt=""></center>
<map name="sf::Ftp_map">
<area href="structsf_1_1NonCopyable.htm" alt="sf::NonCopyable" shape="rect" coords="0,0,105,24">
</map>
</div>

<p>
<a href="classsf_1_1Ftp-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Classes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><b>DataChannel</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Ftp_1_1DirectoryResponse.htm">DirectoryResponse</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Specialization of FTP response returning a directory.  <a href="classsf_1_1Ftp_1_1DirectoryResponse.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Ftp_1_1ListingResponse.htm">ListingResponse</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Specialization of FTP response returning a filename lisiting.  <a href="classsf_1_1Ftp_1_1ListingResponse.htm#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Response</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This class wraps a FTP response, which is basically :<ul>
<li>a status code</li><li>a message. </li></ul>
 <a href="classsf_1_1Ftp_1_1Response.htm#_details">More...</a><br></td></tr>
<tr><td colspan="2"><br><h2>Public Types</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Ftp.htm#1cd6b89ad23253f6d97e6d4ca4d558cb">TransferMode</a> { <br>
&nbsp;&nbsp;<a class="el" href="classsf_1_1Ftp.htm#1cd6b89ad23253f6d97e6d4ca4d558cb6f253b362639fb5e059dc292762a21ee">Binary</a>, 
<br>
&nbsp;&nbsp;<a class="el" href="classsf_1_1Ftp.htm#1cd6b89ad23253f6d97e6d4ca4d558cbc9e544a22dce8ef3177449cb235d15c2">Ascii</a>, 
<br>
&nbsp;&nbsp;<a class="el" href="classsf_1_1Ftp.htm#1cd6b89ad23253f6d97e6d4ca4d558cbbb1e34435231e73c96534c71090be7f4">Ebcdic</a>
<br>
 }</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Enumeration of transfer modes.  <a href="classsf_1_1Ftp.htm#1cd6b89ad23253f6d97e6d4ca4d558cb">More...</a><br></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Ftp.htm#2edfa8e9009caf27bce74459ae76dc52">~Ftp</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Destructor -- close the connection with the server.  <a href="#2edfa8e9009caf27bce74459ae76dc52"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Response</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Ftp.htm#f566dc8b2595722dd08c312677c3f26c">Connect</a> (const <a class="el" href="classsf_1_1IPAddress.htm">IPAddress</a> &amp;Server, unsigned short Port=21, float Timeout=0.f)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Connect to the specified FTP server.  <a href="#f566dc8b2595722dd08c312677c3f26c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Response</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Ftp.htm#cee25f564e7dbab511e46e61d14bb0cf">Login</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Log in using anonymous account.  <a href="#cee25f564e7dbab511e46e61d14bb0cf"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Response</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Ftp.htm#1ed080612214df38a5f740d1ee49f082">Login</a> (const std::string &amp;UserName, const std::string &amp;Password)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Log in using a username and a password.  <a href="#1ed080612214df38a5f740d1ee49f082"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Response</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Ftp.htm#5ec762168457a0b6385ad1104f5869bc">Disconnect</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Close the connection with FTP server.  <a href="#5ec762168457a0b6385ad1104f5869bc"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Response</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Ftp.htm#0ee896f69d6fdaa18d65df83e7347ab4">KeepAlive</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Send a null command just to prevent from being disconnected.  <a href="#0ee896f69d6fdaa18d65df83e7347ab4"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classsf_1_1Ftp_1_1DirectoryResponse.htm">DirectoryResponse</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Ftp.htm#c7ae66df8800b2dffadaa293b80f3dde">GetWorkingDirectory</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the current working directory.  <a href="#c7ae66df8800b2dffadaa293b80f3dde"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classsf_1_1Ftp_1_1ListingResponse.htm">ListingResponse</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Ftp.htm#2d68f88694c0b12f1b2bfdb23246c357">GetDirectoryListing</a> (const std::string &amp;Directory=&quot;&quot;)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the contents of the given directory (subdirectories and files).  <a href="#2d68f88694c0b12f1b2bfdb23246c357"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Response</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Ftp.htm#6b7e5a6d2f6d3a8cac82d759502f2fbc">ChangeDirectory</a> (const std::string &amp;Directory)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Change the current working directory.  <a href="#6b7e5a6d2f6d3a8cac82d759502f2fbc"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Response</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Ftp.htm#327e052e0c352d743804d7146a7eb6f6">ParentDirectory</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Go to the parent directory of the current one.  <a href="#327e052e0c352d743804d7146a7eb6f6"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Response</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Ftp.htm#302127842055302365b0982077f11071">MakeDirectory</a> (const std::string &amp;Name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Create a new directory.  <a href="#302127842055302365b0982077f11071"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Response</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Ftp.htm#c90d9da996773cb3eed1b715fbb85d32">DeleteDirectory</a> (const std::string &amp;Name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Remove an existing directory.  <a href="#c90d9da996773cb3eed1b715fbb85d32"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Response</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Ftp.htm#85075cbe59e9cc2ac0f8ca0b6c0e982c">RenameFile</a> (const std::string &amp;File, const std::string &amp;NewName)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Rename a file.  <a href="#85075cbe59e9cc2ac0f8ca0b6c0e982c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Response</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Ftp.htm#eb6d5688700b36ea2a34a8e0dbcf43a9">DeleteFile</a> (const std::string &amp;Name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Remove an existing file.  <a href="#eb6d5688700b36ea2a34a8e0dbcf43a9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Response</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Ftp.htm#17e6cc8f6ce7c1904d598d5bb6a2d886">Download</a> (const std::string &amp;DistantFile, const std::string &amp;DestPath, <a class="el" href="classsf_1_1Ftp.htm#1cd6b89ad23253f6d97e6d4ca4d558cb">TransferMode</a> Mode=Binary)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Download a file from the server.  <a href="#17e6cc8f6ce7c1904d598d5bb6a2d886"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Response</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Ftp.htm#32240c75993a64710da8a29804bd6528">Upload</a> (const std::string &amp;LocalFile, const std::string &amp;DestPath, <a class="el" href="classsf_1_1Ftp.htm#1cd6b89ad23253f6d97e6d4ca4d558cb">TransferMode</a> Mode=Binary)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Upload a file to the server.  <a href="#32240c75993a64710da8a29804bd6528"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Friends</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="8dee57337b6a7e183bfe21d178757b0c"></a><!-- doxytag: member="sf::Ftp::DataChannel" ref="8dee57337b6a7e183bfe21d178757b0c" args="" -->
class&nbsp;</td><td class="memItemRight" valign="bottom"><b>DataChannel</b></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
This class provides methods for manipulating the FTP protocol (described in RFC 959). 
<p>
It provides easy access and transfers to remote directories and files on a FTP server 
<p>Definition at line <a class="el" href="Ftp_8hpp-source.htm#l00047">47</a> of file <a class="el" href="Ftp_8hpp-source.htm">Ftp.hpp</a>.</p>
<hr><h2>Member Enumeration Documentation</h2>
<a class="anchor" name="1cd6b89ad23253f6d97e6d4ca4d558cb"></a><!-- doxytag: member="sf::Ftp::TransferMode" ref="1cd6b89ad23253f6d97e6d4ca4d558cb" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classsf_1_1Ftp.htm#1cd6b89ad23253f6d97e6d4ca4d558cb">sf::Ftp::TransferMode</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Enumeration of transfer modes. 
<p>
<dl compact><dt><b>Enumerator: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" name="1cd6b89ad23253f6d97e6d4ca4d558cb6f253b362639fb5e059dc292762a21ee"></a><!-- doxytag: member="Binary" ref="1cd6b89ad23253f6d97e6d4ca4d558cb6f253b362639fb5e059dc292762a21ee" args="" -->Binary</em>&nbsp;</td><td>
Binary mode (file is transfered as a sequence of bytes). </td></tr>
<tr><td valign="top"><em><a class="anchor" name="1cd6b89ad23253f6d97e6d4ca4d558cbc9e544a22dce8ef3177449cb235d15c2"></a><!-- doxytag: member="Ascii" ref="1cd6b89ad23253f6d97e6d4ca4d558cbc9e544a22dce8ef3177449cb235d15c2" args="" -->Ascii</em>&nbsp;</td><td>
Text mode using ASCII encoding. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="1cd6b89ad23253f6d97e6d4ca4d558cbbb1e34435231e73c96534c71090be7f4"></a><!-- doxytag: member="Ebcdic" ref="1cd6b89ad23253f6d97e6d4ca4d558cbbb1e34435231e73c96534c71090be7f4" args="" -->Ebcdic</em>&nbsp;</td><td>
Text mode using EBCDIC encoding. </td></tr>
</table>
</dl>

<p>Definition at line <a class="el" href="Ftp_8hpp-source.htm#l00054">54</a> of file <a class="el" href="Ftp_8hpp-source.htm">Ftp.hpp</a>.</p>

</div>
</div><p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="2edfa8e9009caf27bce74459ae76dc52"></a><!-- doxytag: member="sf::Ftp::~Ftp" ref="2edfa8e9009caf27bce74459ae76dc52" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::Ftp::~Ftp           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Destructor -- close the connection with the server. 
<p>

<p>Definition at line <a class="el" href="Ftp_8cpp-source.htm#l00186">186</a> of file <a class="el" href="Ftp_8cpp-source.htm">Ftp.cpp</a>.</p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="6b7e5a6d2f6d3a8cac82d759502f2fbc"></a><!-- doxytag: member="sf::Ftp::ChangeDirectory" ref="6b7e5a6d2f6d3a8cac82d759502f2fbc" args="(const std::string &amp;Directory)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Ftp::Response</a> sf::Ftp::ChangeDirectory           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>Directory</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Change the current working directory. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Directory</em>&nbsp;</td><td>: New directory, relative to the current one</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Server response to the request </dd></dl>

<p>Definition at line <a class="el" href="Ftp_8cpp-source.htm#l00291">291</a> of file <a class="el" href="Ftp_8cpp-source.htm">Ftp.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="f566dc8b2595722dd08c312677c3f26c"></a><!-- doxytag: member="sf::Ftp::Connect" ref="f566dc8b2595722dd08c312677c3f26c" args="(const IPAddress &amp;Server, unsigned short Port=21, float Timeout=0.f)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Ftp::Response</a> sf::Ftp::Connect           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1IPAddress.htm">IPAddress</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>Server</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned short&nbsp;</td>
          <td class="paramname"> <em>Port</em> = <code>21</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>Timeout</em> = <code>0.f</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Connect to the specified FTP server. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Server</em>&nbsp;</td><td>: FTP server to connect to </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>Port</em>&nbsp;</td><td>: Port used for connection (21 by default, standard FTP port) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>Timeout</em>&nbsp;</td><td>: Maximum time to wait, in seconds (0 by default, means no timeout)</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Server response to the request </dd></dl>

<p>Definition at line <a class="el" href="Ftp_8cpp-source.htm#l00195">195</a> of file <a class="el" href="Ftp_8cpp-source.htm">Ftp.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="c90d9da996773cb3eed1b715fbb85d32"></a><!-- doxytag: member="sf::Ftp::DeleteDirectory" ref="c90d9da996773cb3eed1b715fbb85d32" args="(const std::string &amp;Name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Ftp::Response</a> sf::Ftp::DeleteDirectory           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>Name</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Remove an existing directory. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Name</em>&nbsp;</td><td>: Name of the directory to remove</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Server response to the request </dd></dl>

<p>Definition at line <a class="el" href="Ftp_8cpp-source.htm#l00318">318</a> of file <a class="el" href="Ftp_8cpp-source.htm">Ftp.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="eb6d5688700b36ea2a34a8e0dbcf43a9"></a><!-- doxytag: member="sf::Ftp::DeleteFile" ref="eb6d5688700b36ea2a34a8e0dbcf43a9" args="(const std::string &amp;Name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Ftp::Response</a> sf::Ftp::DeleteFile           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>Name</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Remove an existing file. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Name</em>&nbsp;</td><td>: File to remove</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Server response to the request </dd></dl>

<p>Definition at line <a class="el" href="Ftp_8cpp-source.htm#l00340">340</a> of file <a class="el" href="Ftp_8cpp-source.htm">Ftp.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="5ec762168457a0b6385ad1104f5869bc"></a><!-- doxytag: member="sf::Ftp::Disconnect" ref="5ec762168457a0b6385ad1104f5869bc" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Ftp::Response</a> sf::Ftp::Disconnect           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Close the connection with FTP server. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Server response to the request </dd></dl>

<p>Definition at line <a class="el" href="Ftp_8cpp-source.htm#l00231">231</a> of file <a class="el" href="Ftp_8cpp-source.htm">Ftp.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="17e6cc8f6ce7c1904d598d5bb6a2d886"></a><!-- doxytag: member="sf::Ftp::Download" ref="17e6cc8f6ce7c1904d598d5bb6a2d886" args="(const std::string &amp;DistantFile, const std::string &amp;DestPath, TransferMode Mode=Binary)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Ftp::Response</a> sf::Ftp::Download           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>DistantFile</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>DestPath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classsf_1_1Ftp.htm#1cd6b89ad23253f6d97e6d4ca4d558cb">TransferMode</a>&nbsp;</td>
          <td class="paramname"> <em>Mode</em> = <code>Binary</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Download a file from the server. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>DistantFile</em>&nbsp;</td><td>: Path of the distant file to download </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>DestPath</em>&nbsp;</td><td>: Where to put to file on the local computer </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>Mode</em>&nbsp;</td><td>: Transfer mode (binary by default)</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Server response to the request </dd></dl>

<p>Definition at line <a class="el" href="Ftp_8cpp-source.htm#l00349">349</a> of file <a class="el" href="Ftp_8cpp-source.htm">Ftp.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="2d68f88694c0b12f1b2bfdb23246c357"></a><!-- doxytag: member="sf::Ftp::GetDirectoryListing" ref="2d68f88694c0b12f1b2bfdb23246c357" args="(const std::string &amp;Directory=&quot;&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Ftp_1_1ListingResponse.htm">Ftp::ListingResponse</a> sf::Ftp::GetDirectoryListing           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>Directory</em> = <code>&quot;&quot;</code>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the contents of the given directory (subdirectories and files). 
<p>
Get the contents of the given directory (subdirectories and files).<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Directory</em>&nbsp;</td><td>: Directory to list ("" by default, the current one)</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Server response to the request </dd></dl>

<p>Definition at line <a class="el" href="Ftp_8cpp-source.htm#l00264">264</a> of file <a class="el" href="Ftp_8cpp-source.htm">Ftp.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="c7ae66df8800b2dffadaa293b80f3dde"></a><!-- doxytag: member="sf::Ftp::GetWorkingDirectory" ref="c7ae66df8800b2dffadaa293b80f3dde" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Ftp_1_1DirectoryResponse.htm">Ftp::DirectoryResponse</a> sf::Ftp::GetWorkingDirectory           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the current working directory. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Server response to the request </dd></dl>

<p>Definition at line <a class="el" href="Ftp_8cpp-source.htm#l00254">254</a> of file <a class="el" href="Ftp_8cpp-source.htm">Ftp.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="0ee896f69d6fdaa18d65df83e7347ab4"></a><!-- doxytag: member="sf::Ftp::KeepAlive" ref="0ee896f69d6fdaa18d65df83e7347ab4" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Ftp::Response</a> sf::Ftp::KeepAlive           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Send a null command just to prevent from being disconnected. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Server response to the request </dd></dl>

<p>Definition at line <a class="el" href="Ftp_8cpp-source.htm#l00245">245</a> of file <a class="el" href="Ftp_8cpp-source.htm">Ftp.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="1ed080612214df38a5f740d1ee49f082"></a><!-- doxytag: member="sf::Ftp::Login" ref="1ed080612214df38a5f740d1ee49f082" args="(const std::string &amp;UserName, const std::string &amp;Password)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Ftp::Response</a> sf::Ftp::Login           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>UserName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>Password</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Log in using a username and a password. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>UserName</em>&nbsp;</td><td>: User name </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>Password</em>&nbsp;</td><td>: Password</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Server response to the request </dd></dl>

<p>Definition at line <a class="el" href="Ftp_8cpp-source.htm#l00218">218</a> of file <a class="el" href="Ftp_8cpp-source.htm">Ftp.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="cee25f564e7dbab511e46e61d14bb0cf"></a><!-- doxytag: member="sf::Ftp::Login" ref="cee25f564e7dbab511e46e61d14bb0cf" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Ftp::Response</a> sf::Ftp::Login           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Log in using anonymous account. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Server response to the request </dd></dl>

<p>Definition at line <a class="el" href="Ftp_8cpp-source.htm#l00209">209</a> of file <a class="el" href="Ftp_8cpp-source.htm">Ftp.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="302127842055302365b0982077f11071"></a><!-- doxytag: member="sf::Ftp::MakeDirectory" ref="302127842055302365b0982077f11071" args="(const std::string &amp;Name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Ftp::Response</a> sf::Ftp::MakeDirectory           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>Name</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Create a new directory. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Name</em>&nbsp;</td><td>: Name of the directory to create</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Server response to the request </dd></dl>

<p>Definition at line <a class="el" href="Ftp_8cpp-source.htm#l00309">309</a> of file <a class="el" href="Ftp_8cpp-source.htm">Ftp.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="327e052e0c352d743804d7146a7eb6f6"></a><!-- doxytag: member="sf::Ftp::ParentDirectory" ref="327e052e0c352d743804d7146a7eb6f6" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Ftp::Response</a> sf::Ftp::ParentDirectory           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Go to the parent directory of the current one. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Server response to the request </dd></dl>

<p>Definition at line <a class="el" href="Ftp_8cpp-source.htm#l00300">300</a> of file <a class="el" href="Ftp_8cpp-source.htm">Ftp.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="85075cbe59e9cc2ac0f8ca0b6c0e982c"></a><!-- doxytag: member="sf::Ftp::RenameFile" ref="85075cbe59e9cc2ac0f8ca0b6c0e982c" args="(const std::string &amp;File, const std::string &amp;NewName)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Ftp::Response</a> sf::Ftp::RenameFile           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>File</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>NewName</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Rename a file. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>File</em>&nbsp;</td><td>: File to rename </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>NewName</em>&nbsp;</td><td>: New name</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Server response to the request </dd></dl>

<p>Definition at line <a class="el" href="Ftp_8cpp-source.htm#l00327">327</a> of file <a class="el" href="Ftp_8cpp-source.htm">Ftp.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="32240c75993a64710da8a29804bd6528"></a><!-- doxytag: member="sf::Ftp::Upload" ref="32240c75993a64710da8a29804bd6528" args="(const std::string &amp;LocalFile, const std::string &amp;DestPath, TransferMode Mode=Binary)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Ftp_1_1Response.htm">Ftp::Response</a> sf::Ftp::Upload           </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>LocalFile</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&nbsp;</td>
          <td class="paramname"> <em>DestPath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classsf_1_1Ftp.htm#1cd6b89ad23253f6d97e6d4ca4d558cb">TransferMode</a>&nbsp;</td>
          <td class="paramname"> <em>Mode</em> = <code>Binary</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Upload a file to the server. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>LocalFile</em>&nbsp;</td><td>: Path of the local file to upload </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>DestPath</em>&nbsp;</td><td>: Where to put to file on the server </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>Mode</em>&nbsp;</td><td>: Transfer mode (binary by default)</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Server response to the request </dd></dl>

<p>Definition at line <a class="el" href="Ftp_8cpp-source.htm#l00396">396</a> of file <a class="el" href="Ftp_8cpp-source.htm">Ftp.cpp</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="Ftp_8hpp-source.htm">Ftp.hpp</a><li><a class="el" href="Ftp_8cpp-source.htm">Ftp.cpp</a></ul>
</div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
