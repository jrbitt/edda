<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><b>sf</b>::<a class="el" href="classsf_1_1View.htm">View</a>
  </div>
</div>
<div class="contents">
<h1>sf::View Class Reference</h1><!-- doxytag: class="sf::View" -->This class defines a view (position, size, etc.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="View_8hpp-source.htm">View.hpp</a>&gt;</code>
<p>

<p>
<a href="classsf_1_1View-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.htm#884afd75948366ba6c0f760b276496cc">View</a> (const <a class="el" href="classsf_1_1Rect.htm">FloatRect</a> &amp;ViewRect=<a class="el" href="classsf_1_1Rect.htm">FloatRect</a>(0, 0, 1000, 1000))</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Construct the view from a rectangle.  <a href="#884afd75948366ba6c0f760b276496cc"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.htm#0323ca80f81ad7feb877d328a0fdbb60">View</a> (const <a class="el" href="classsf_1_1Vector2.htm">sf::Vector2f</a> &amp;Center, const <a class="el" href="classsf_1_1Vector2.htm">sf::Vector2f</a> &amp;HalfSize)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Construct the view from its center and half-size.  <a href="#0323ca80f81ad7feb877d328a0fdbb60"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.htm#f357e9c647672b94b8b8f584eaff1e86">SetCenter</a> (float X, float Y)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Change the center of the view (take 2 values).  <a href="#f357e9c647672b94b8b8f584eaff1e86"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.htm#fc62a34d1bb3c7a64ab5cc11941967cb">SetCenter</a> (const <a class="el" href="classsf_1_1Vector2.htm">sf::Vector2f</a> &amp;Center)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Change the center of the view (take a vector).  <a href="#fc62a34d1bb3c7a64ab5cc11941967cb"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.htm#5e1a8e0c729daf4be95c1f27ba275a2a">SetHalfSize</a> (float HalfWidth, float HalfHeight)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Change the half-size of the view (take 2 values).  <a href="#5e1a8e0c729daf4be95c1f27ba275a2a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.htm#ce6e0d15b8fe1f2f0066d8438c01f1d3">SetHalfSize</a> (const <a class="el" href="classsf_1_1Vector2.htm">sf::Vector2f</a> &amp;HalfSize)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Change the half-size of the view (take a vector).  <a href="#ce6e0d15b8fe1f2f0066d8438c01f1d3"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.htm#a5c2ac8985a573632f9a1e95d56cc2ee">SetFromRect</a> (const <a class="el" href="classsf_1_1Rect.htm">FloatRect</a> &amp;ViewRect)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Rebuild the view from a rectangle.  <a href="#a5c2ac8985a573632f9a1e95d56cc2ee"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const <a class="el" href="classsf_1_1Vector2.htm">sf::Vector2f</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.htm#edfc422283cb9dbd89c2beb70261b7fd">GetCenter</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the center of the view.  <a href="#edfc422283cb9dbd89c2beb70261b7fd"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const <a class="el" href="classsf_1_1Vector2.htm">sf::Vector2f</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.htm#2fa0eb90604dd90ffdaf2405be276d47">GetHalfSize</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the half-size of the view.  <a href="#2fa0eb90604dd90ffdaf2405be276d47"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const <a class="el" href="classsf_1_1Rect.htm">sf::FloatRect</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.htm#af368a69233ee426a5fbd63dde1cc4bd">GetRect</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the bounding rectangle of the view.  <a href="#af368a69233ee426a5fbd63dde1cc4bd"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.htm#8f1bfbae90991ab777994cad4f4bfa9c">Move</a> (float OffsetX, float OffsetY)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Move the view (take 2 values).  <a href="#8f1bfbae90991ab777994cad4f4bfa9c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.htm#e065331d6f2d450b3482c623c7506ced">Move</a> (const <a class="el" href="classsf_1_1Vector2.htm">sf::Vector2f</a> &amp;Offset)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Move the view (take a vector).  <a href="#e065331d6f2d450b3482c623c7506ced"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.htm#2bc9321a19bc371b3f29d8c9f25bcbb1">Zoom</a> (float Factor)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Resize the view rectangle to simulate a zoom / unzoom effect.  <a href="#2bc9321a19bc371b3f29d8c9f25bcbb1"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Friends</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a5afc6f82b7b587ed5ada4d227ce32aa"></a><!-- doxytag: member="sf::View::RenderTarget" ref="a5afc6f82b7b587ed5ada4d227ce32aa" args="" -->
class&nbsp;</td><td class="memItemRight" valign="bottom"><b>RenderTarget</b></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
This class defines a view (position, size, etc. 
<p>
) ; you can consider it as a 2D camera 
<p>Definition at line <a class="el" href="View_8hpp-source.htm#l00045">45</a> of file <a class="el" href="View_8hpp-source.htm">View.hpp</a>.</p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="884afd75948366ba6c0f760b276496cc"></a><!-- doxytag: member="sf::View::View" ref="884afd75948366ba6c0f760b276496cc" args="(const FloatRect &amp;ViewRect=FloatRect(0, 0, 1000, 1000))" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::View::View           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Rect.htm">FloatRect</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>ViewRect</em> = <code><a class="el" href="classsf_1_1Rect.htm">FloatRect</a>(0,&nbsp;0,&nbsp;1000,&nbsp;1000)</code>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [explicit]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Construct the view from a rectangle. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>ViewRect</em>&nbsp;</td><td>: Rectangle defining the position and size of the view (1000x1000 by default) </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="View_8cpp-source.htm#l00037">37</a> of file <a class="el" href="View_8cpp-source.htm">View.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="0323ca80f81ad7feb877d328a0fdbb60"></a><!-- doxytag: member="sf::View::View" ref="0323ca80f81ad7feb877d328a0fdbb60" args="(const sf::Vector2f &amp;Center, const sf::Vector2f &amp;HalfSize)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::View::View           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Vector2.htm">sf::Vector2f</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>Center</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Vector2.htm">sf::Vector2f</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>HalfSize</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Construct the view from its center and half-size. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Center</em>&nbsp;</td><td>: Center of the view </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>HalfSize</em>&nbsp;</td><td>: Half-size of the view (from center to corner) </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="View_8cpp-source.htm#l00046">46</a> of file <a class="el" href="View_8cpp-source.htm">View.cpp</a>.</p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="edfc422283cb9dbd89c2beb70261b7fd"></a><!-- doxytag: member="sf::View::GetCenter" ref="edfc422283cb9dbd89c2beb70261b7fd" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classsf_1_1Vector2.htm">sf::Vector2f</a> &amp; sf::View::GetCenter           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the center of the view. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Center of the view </dd></dl>

<p>Definition at line <a class="el" href="View_8cpp-source.htm#l00108">108</a> of file <a class="el" href="View_8cpp-source.htm">View.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="2fa0eb90604dd90ffdaf2405be276d47"></a><!-- doxytag: member="sf::View::GetHalfSize" ref="2fa0eb90604dd90ffdaf2405be276d47" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classsf_1_1Vector2.htm">sf::Vector2f</a> &amp; sf::View::GetHalfSize           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the half-size of the view. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Half-size of the view </dd></dl>

<p>Definition at line <a class="el" href="View_8cpp-source.htm#l00117">117</a> of file <a class="el" href="View_8cpp-source.htm">View.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="af368a69233ee426a5fbd63dde1cc4bd"></a><!-- doxytag: member="sf::View::GetRect" ref="af368a69233ee426a5fbd63dde1cc4bd" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classsf_1_1Rect.htm">sf::FloatRect</a> &amp; sf::View::GetRect           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the bounding rectangle of the view. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Bounding rectangle of the view </dd></dl>

<p>Definition at line <a class="el" href="View_8cpp-source.htm#l00126">126</a> of file <a class="el" href="View_8cpp-source.htm">View.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="e065331d6f2d450b3482c623c7506ced"></a><!-- doxytag: member="sf::View::Move" ref="e065331d6f2d450b3482c623c7506ced" args="(const sf::Vector2f &amp;Offset)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::View::Move           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Vector2.htm">sf::Vector2f</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>Offset</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Move the view (take a vector). 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Offset</em>&nbsp;</td><td>: Offset to move the view </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="View_8cpp-source.htm#l00150">150</a> of file <a class="el" href="View_8cpp-source.htm">View.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="8f1bfbae90991ab777994cad4f4bfa9c"></a><!-- doxytag: member="sf::View::Move" ref="8f1bfbae90991ab777994cad4f4bfa9c" args="(float OffsetX, float OffsetY)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::View::Move           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>OffsetX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>OffsetY</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Move the view (take 2 values). 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>OffsetX</em>&nbsp;</td><td>: Offset to move the view, on X axis </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>OffsetY</em>&nbsp;</td><td>: Offset to move the view, on Y axis </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="View_8cpp-source.htm#l00139">139</a> of file <a class="el" href="View_8cpp-source.htm">View.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="fc62a34d1bb3c7a64ab5cc11941967cb"></a><!-- doxytag: member="sf::View::SetCenter" ref="fc62a34d1bb3c7a64ab5cc11941967cb" args="(const sf::Vector2f &amp;Center)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::View::SetCenter           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Vector2.htm">sf::Vector2f</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>Center</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Change the center of the view (take a vector). 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Center</em>&nbsp;</td><td>: New center </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="View_8cpp-source.htm#l00069">69</a> of file <a class="el" href="View_8cpp-source.htm">View.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="f357e9c647672b94b8b8f584eaff1e86"></a><!-- doxytag: member="sf::View::SetCenter" ref="f357e9c647672b94b8b8f584eaff1e86" args="(float X, float Y)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::View::SetCenter           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>X</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>Y</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Change the center of the view (take 2 values). 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>X</em>&nbsp;</td><td>: X coordinate of the new center </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>Y</em>&nbsp;</td><td>: Y coordinate of the new center </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="View_8cpp-source.htm#l00058">58</a> of file <a class="el" href="View_8cpp-source.htm">View.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="a5c2ac8985a573632f9a1e95d56cc2ee"></a><!-- doxytag: member="sf::View::SetFromRect" ref="a5c2ac8985a573632f9a1e95d56cc2ee" args="(const FloatRect &amp;ViewRect)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::View::SetFromRect           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Rect.htm">FloatRect</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>ViewRect</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Rebuild the view from a rectangle. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>ViewRect</em>&nbsp;</td><td>: Rectangle defining the position and size of the view </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="View_8cpp-source.htm#l00098">98</a> of file <a class="el" href="View_8cpp-source.htm">View.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="ce6e0d15b8fe1f2f0066d8438c01f1d3"></a><!-- doxytag: member="sf::View::SetHalfSize" ref="ce6e0d15b8fe1f2f0066d8438c01f1d3" args="(const sf::Vector2f &amp;HalfSize)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::View::SetHalfSize           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Vector2.htm">sf::Vector2f</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>HalfSize</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Change the half-size of the view (take a vector). 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>HalfSize</em>&nbsp;</td><td>: New half-size </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="View_8cpp-source.htm#l00089">89</a> of file <a class="el" href="View_8cpp-source.htm">View.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="5e1a8e0c729daf4be95c1f27ba275a2a"></a><!-- doxytag: member="sf::View::SetHalfSize" ref="5e1a8e0c729daf4be95c1f27ba275a2a" args="(float HalfWidth, float HalfHeight)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::View::SetHalfSize           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>HalfWidth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>HalfHeight</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Change the half-size of the view (take 2 values). 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>HalfWidth</em>&nbsp;</td><td>: New half-width </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>HalfHeight</em>&nbsp;</td><td>: New half-height </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="View_8cpp-source.htm#l00078">78</a> of file <a class="el" href="View_8cpp-source.htm">View.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="2bc9321a19bc371b3f29d8c9f25bcbb1"></a><!-- doxytag: member="sf::View::Zoom" ref="2bc9321a19bc371b3f29d8c9f25bcbb1" args="(float Factor)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::View::Zoom           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>Factor</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Resize the view rectangle to simulate a zoom / unzoom effect. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Factor</em>&nbsp;</td><td>: Zoom factor to apply, relative to the current zoom </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="View_8cpp-source.htm#l00159">159</a> of file <a class="el" href="View_8cpp-source.htm">View.cpp</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="View_8hpp-source.htm">View.hpp</a><li><a class="el" href="View_8cpp-source.htm">View.cpp</a></ul>
</div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
