<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>sf::Image Member List</h1>This is the complete list of members for <a class="el" href="classsf_1_1Image.htm">sf::Image</a>, including all inherited members.<p><table>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Image.htm#74bda6dc927849ff25f8fce5143918e7">Bind</a>() const </td><td><a class="el" href="classsf_1_1Image.htm">sf::Image</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Image.htm#408c40c8675363adfa96a8b9a9576bc2">Copy</a>(const Image &amp;Source, unsigned int DestX, unsigned int DestY, const IntRect &amp;SourceRect=IntRect(0, 0, 0, 0), bool ApplyAlpha=false)</td><td><a class="el" href="classsf_1_1Image.htm">sf::Image</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Image.htm#96597746f70ce1925ec82d2df8ae6974">CopyScreen</a>(RenderWindow &amp;Window, const IntRect &amp;SourceRect=IntRect(0, 0, 0, 0))</td><td><a class="el" href="classsf_1_1Image.htm">sf::Image</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Image.htm#4e2ce8821e8de36462604bbf99f39cde">Create</a>(unsigned int Width, unsigned int Height, Color Col=Color(0, 0, 0, 255))</td><td><a class="el" href="classsf_1_1Image.htm">sf::Image</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Image.htm#e9a15fe9a4750295845b5ae081c2ec50">CreateMaskFromColor</a>(Color ColorKey, Uint8 Alpha=0)</td><td><a class="el" href="classsf_1_1Image.htm">sf::Image</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Image.htm#f2131512b6290fd96fd10c539723fe89">GetHeight</a>() const </td><td><a class="el" href="classsf_1_1Image.htm">sf::Image</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Image.htm#b7590e372a153ace848cf8a6081c8bc4">GetPixel</a>(unsigned int X, unsigned int Y) const </td><td><a class="el" href="classsf_1_1Image.htm">sf::Image</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Image.htm#85355b09f946aa4b985f9d2a1d620022">GetPixelsPtr</a>() const </td><td><a class="el" href="classsf_1_1Image.htm">sf::Image</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Image.htm#066704507bcaabe27db17170bf02bd56">GetTexCoords</a>(const IntRect &amp;Rect) const </td><td><a class="el" href="classsf_1_1Image.htm">sf::Image</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Image.htm#b41056600a1a4848833cc8b5239a9488">GetValidTextureSize</a>(unsigned int Size)</td><td><a class="el" href="classsf_1_1Image.htm">sf::Image</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Image.htm#896f09a4eb769b5b866b6dde9c1a25e7">GetWidth</a>() const </td><td><a class="el" href="classsf_1_1Image.htm">sf::Image</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Image.htm#bb4caf3cb167b613345ebe36fc883f12">Image</a>()</td><td><a class="el" href="classsf_1_1Image.htm">sf::Image</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Image.htm#a38cae7c1c704aa0175b9e73645cb210">Image</a>(const Image &amp;Copy)</td><td><a class="el" href="classsf_1_1Image.htm">sf::Image</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Image.htm#2a4c0ec448863784f83e9931d25dada2">Image</a>(unsigned int Width, unsigned int Height, const Color &amp;Col=Color(0, 0, 0, 255))</td><td><a class="el" href="classsf_1_1Image.htm">sf::Image</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Image.htm#7092ba80cc19c053bf356e98a4743acb">Image</a>(unsigned int Width, unsigned int Height, const Uint8 *Data)</td><td><a class="el" href="classsf_1_1Image.htm">sf::Image</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Image.htm#d175b4c9110549c5df324ba61c580ce3">IsSmooth</a>() const </td><td><a class="el" href="classsf_1_1Image.htm">sf::Image</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Image.htm#7cf6316aa5d022e0bdd95f1e79c9f50b">LoadFromFile</a>(const std::string &amp;Filename)</td><td><a class="el" href="classsf_1_1Image.htm">sf::Image</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Image.htm#72565ffabe12dfb2602e209c2e6f0486">LoadFromMemory</a>(const char *Data, std::size_t SizeInBytes)</td><td><a class="el" href="classsf_1_1Image.htm">sf::Image</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Image.htm#67d65c552c9bcba989a061e9c5b5d10c">LoadFromPixels</a>(unsigned int Width, unsigned int Height, const Uint8 *Data)</td><td><a class="el" href="classsf_1_1Image.htm">sf::Image</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Image.htm#5f9927e407bbe34172553ecfff2f54f3">operator=</a>(const Image &amp;Other)</td><td><a class="el" href="classsf_1_1Image.htm">sf::Image</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Resource.htm#772badbe4813a5b459f588698ac7ad60">Resource&lt; Image &gt;::operator=</a>(const Resource&lt; Image &gt; &amp;Other)</td><td><a class="el" href="classsf_1_1Resource.htm">sf::Resource&lt; Image &gt;</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Resource.htm#a044d32edfcd9b6aebd50d03658e8130">Resource</a>()</td><td><a class="el" href="classsf_1_1Resource.htm">sf::Resource&lt; Image &gt;</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Resource.htm#59a0a5ddb77f7fe059bd32dee5f792d0">Resource</a>(const Resource&lt; Image &gt; &amp;Copy)</td><td><a class="el" href="classsf_1_1Resource.htm">sf::Resource&lt; Image &gt;</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Image.htm#50eed54ef8e9f3aeef5bb7f19144aa08">SaveToFile</a>(const std::string &amp;Filename) const </td><td><a class="el" href="classsf_1_1Image.htm">sf::Image</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Image.htm#623f2379b30307b4ee4eb08d517d9584">SetPixel</a>(unsigned int X, unsigned int Y, const Color &amp;Col)</td><td><a class="el" href="classsf_1_1Image.htm">sf::Image</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Image.htm#d167422fd331cd069674391fb16e8452">SetSmooth</a>(bool Smooth)</td><td><a class="el" href="classsf_1_1Image.htm">sf::Image</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Image.htm#0ba22a38e6c96e3b37dd88198046de83">~Image</a>()</td><td><a class="el" href="classsf_1_1Image.htm">sf::Image</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Resource.htm#0e83e83339851d7b3246939bde3fc1ac">~Resource</a>()</td><td><a class="el" href="classsf_1_1Resource.htm">sf::Resource&lt; Image &gt;</a></td><td><code> [protected]</code></td></tr>
</table></div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
