<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><b>sf</b>::<a class="el" href="classsf_1_1Packet.htm">Packet</a>
  </div>
</div>
<div class="contents">
<h1>sf::Packet Class Reference</h1><!-- doxytag: class="sf::Packet" --><a class="el" href="classsf_1_1Packet.htm" title="Packet wraps data to send / to receive through the network.">Packet</a> wraps data to send / to receive through the network.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="Packet_8hpp-source.htm">Packet.hpp</a>&gt;</code>
<p>

<p>
<a href="classsf_1_1Packet-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Packet.htm#786e5d4ced83992ceefa1799963ea858">Packet</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Default constructor.  <a href="#786e5d4ced83992ceefa1799963ea858"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Packet.htm#bd57f3b7a6e0e9119f4021754b5b19e5">~Packet</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Virtual destructor.  <a href="#bd57f3b7a6e0e9119f4021754b5b19e5"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Packet.htm#aaa020852bd7be75625b9f64b3a77c64">Append</a> (const void *Data, std::size_t SizeInBytes)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Append data to the end of the packet.  <a href="#aaa020852bd7be75625b9f64b3a77c64"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Packet.htm#3a7a30fb7a39e59df0cbd773756f60da">Clear</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Clear the packet data.  <a href="#3a7a30fb7a39e59df0cbd773756f60da"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Packet.htm#78286172beef1f89bd2a77edb7118c7a">GetData</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get a pointer to the data contained in the packet Warning : the returned pointer may be invalid after you append data to the packet.  <a href="#78286172beef1f89bd2a77edb7118c7a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">std::size_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Packet.htm#4e6fcdc0ff42ad45b33cea22be253b0d">GetDataSize</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the size of the data contained in the packet.  <a href="#4e6fcdc0ff42ad45b33cea22be253b0d"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Packet.htm#8d587905fb63e62419f1cc338eceed36">EndOfPacket</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Tell if the reading position has reached the end of the packet.  <a href="#8d587905fb63e62419f1cc338eceed36"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Packet.htm#087ae98bb7e93f8c82b29b88aee2f8d6">operator bool</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return the validity of packet.  <a href="#087ae98bb7e93f8c82b29b88aee2f8d6"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Packet.htm#8dfd4b8767cfd705a71d79b76d12ee16">operator&gt;&gt;</a> (bool &amp;Data)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Operator &gt;&gt; overloads to extract data from the packet.  <a href="#8dfd4b8767cfd705a71d79b76d12ee16"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="aae75c289e3719ed8bed8e38113a2173"></a><!-- doxytag: member="sf::Packet::operator&gt;&gt;" ref="aae75c289e3719ed8bed8e38113a2173" args="(Int8 &amp;Data)" -->
<a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator&gt;&gt;</b> (Int8 &amp;Data)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="f94175e49e7de4f0ad0182cc1a8d6e9d"></a><!-- doxytag: member="sf::Packet::operator&gt;&gt;" ref="f94175e49e7de4f0ad0182cc1a8d6e9d" args="(Uint8 &amp;Data)" -->
<a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator&gt;&gt;</b> (Uint8 &amp;Data)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="7555b63985eeb8e4c84c4cd4d366c912"></a><!-- doxytag: member="sf::Packet::operator&gt;&gt;" ref="7555b63985eeb8e4c84c4cd4d366c912" args="(Int16 &amp;Data)" -->
<a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator&gt;&gt;</b> (Int16 &amp;Data)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="616d87ff0ef554ebb40cf03e21e1a098"></a><!-- doxytag: member="sf::Packet::operator&gt;&gt;" ref="616d87ff0ef554ebb40cf03e21e1a098" args="(Uint16 &amp;Data)" -->
<a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator&gt;&gt;</b> (Uint16 &amp;Data)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="3207d48a8f67d97c47feba75ced003b1"></a><!-- doxytag: member="sf::Packet::operator&gt;&gt;" ref="3207d48a8f67d97c47feba75ced003b1" args="(Int32 &amp;Data)" -->
<a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator&gt;&gt;</b> (Int32 &amp;Data)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="7046e2ca352612fc733c53e593f62254"></a><!-- doxytag: member="sf::Packet::operator&gt;&gt;" ref="7046e2ca352612fc733c53e593f62254" args="(Uint32 &amp;Data)" -->
<a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator&gt;&gt;</b> (Uint32 &amp;Data)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="92ae7aea969f9464b8e060ceaf111eb4"></a><!-- doxytag: member="sf::Packet::operator&gt;&gt;" ref="92ae7aea969f9464b8e060ceaf111eb4" args="(float &amp;Data)" -->
<a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator&gt;&gt;</b> (float &amp;Data)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b19341a5f43de09c6756ecca7134b716"></a><!-- doxytag: member="sf::Packet::operator&gt;&gt;" ref="b19341a5f43de09c6756ecca7134b716" args="(double &amp;Data)" -->
<a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator&gt;&gt;</b> (double &amp;Data)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a53e1bf31bc9b7c24fbbee317109aed2"></a><!-- doxytag: member="sf::Packet::operator&gt;&gt;" ref="a53e1bf31bc9b7c24fbbee317109aed2" args="(char *Data)" -->
<a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator&gt;&gt;</b> (char *Data)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="071a9e306370c58ff629faac35bd2c8f"></a><!-- doxytag: member="sf::Packet::operator&gt;&gt;" ref="071a9e306370c58ff629faac35bd2c8f" args="(std::string &amp;Data)" -->
<a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator&gt;&gt;</b> (std::string &amp;Data)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="6a4a58d98d14b8b6b519f405da4a6b65"></a><!-- doxytag: member="sf::Packet::operator&gt;&gt;" ref="6a4a58d98d14b8b6b519f405da4a6b65" args="(wchar_t *Data)" -->
<a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator&gt;&gt;</b> (wchar_t *Data)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="57b2fb61a444a4ef782b8cbdeea2b250"></a><!-- doxytag: member="sf::Packet::operator&gt;&gt;" ref="57b2fb61a444a4ef782b8cbdeea2b250" args="(std::wstring &amp;Data)" -->
<a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator&gt;&gt;</b> (std::wstring &amp;Data)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Packet.htm#63d813d3e0e7f8438ad15a0130b4f550">operator&lt;&lt;</a> (bool Data)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Operator &lt;&lt; overloads to put data into the packet.  <a href="#63d813d3e0e7f8438ad15a0130b4f550"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="9347ec41af2959871aed0402081e1776"></a><!-- doxytag: member="sf::Packet::operator&lt;&lt;" ref="9347ec41af2959871aed0402081e1776" args="(Int8 Data)" -->
<a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (Int8 Data)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="503dbc5fcb30dafad82f4ba03122ca15"></a><!-- doxytag: member="sf::Packet::operator&lt;&lt;" ref="503dbc5fcb30dafad82f4ba03122ca15" args="(Uint8 Data)" -->
<a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (Uint8 Data)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="652c760093d4d99957b65504ee10a8f8"></a><!-- doxytag: member="sf::Packet::operator&lt;&lt;" ref="652c760093d4d99957b65504ee10a8f8" args="(Int16 Data)" -->
<a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (Int16 Data)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="3bff4e704ea629291ba68c9e5e30843c"></a><!-- doxytag: member="sf::Packet::operator&lt;&lt;" ref="3bff4e704ea629291ba68c9e5e30843c" args="(Uint16 Data)" -->
<a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (Uint16 Data)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="49b57b56fc00355aaca3ff6f92fd14c1"></a><!-- doxytag: member="sf::Packet::operator&lt;&lt;" ref="49b57b56fc00355aaca3ff6f92fd14c1" args="(Int32 Data)" -->
<a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (Int32 Data)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="efa8ac0dd13312872c78a9eada54dd5a"></a><!-- doxytag: member="sf::Packet::operator&lt;&lt;" ref="efa8ac0dd13312872c78a9eada54dd5a" args="(Uint32 Data)" -->
<a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (Uint32 Data)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2a401cc304feedeb5841cc31d27198fc"></a><!-- doxytag: member="sf::Packet::operator&lt;&lt;" ref="2a401cc304feedeb5841cc31d27198fc" args="(float Data)" -->
<a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (float Data)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2ffe815c2515026437b674201121be16"></a><!-- doxytag: member="sf::Packet::operator&lt;&lt;" ref="2ffe815c2515026437b674201121be16" args="(double Data)" -->
<a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (double Data)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="31d185239d6e99120bd08ea833e63462"></a><!-- doxytag: member="sf::Packet::operator&lt;&lt;" ref="31d185239d6e99120bd08ea833e63462" args="(const char *Data)" -->
<a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (const char *Data)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="8523cea4df1dbd52bae71c9c4f4e98e6"></a><!-- doxytag: member="sf::Packet::operator&lt;&lt;" ref="8523cea4df1dbd52bae71c9c4f4e98e6" args="(const std::string &amp;Data)" -->
<a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (const std::string &amp;Data)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="13e8c5fda6973f905e67107bb568f259"></a><!-- doxytag: member="sf::Packet::operator&lt;&lt;" ref="13e8c5fda6973f905e67107bb568f259" args="(const wchar_t *Data)" -->
<a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (const wchar_t *Data)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="cbc23fdf72e8ef25d6a6e04fc46393ed"></a><!-- doxytag: member="sf::Packet::operator&lt;&lt;" ref="cbc23fdf72e8ef25d6a6e04fc46393ed" args="(const std::wstring &amp;Data)" -->
<a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (const std::wstring &amp;Data)</td></tr>

<tr><td colspan="2"><br><h2>Friends</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="96e899eb92ab68761ba10f3bcd3101bb"></a><!-- doxytag: member="sf::Packet::SocketTCP" ref="96e899eb92ab68761ba10f3bcd3101bb" args="" -->
class&nbsp;</td><td class="memItemRight" valign="bottom"><b>SocketTCP</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="89a79a0a0dd881f68463c69c9e980412"></a><!-- doxytag: member="sf::Packet::SocketUDP" ref="89a79a0a0dd881f68463c69c9e980412" args="" -->
class&nbsp;</td><td class="memItemRight" valign="bottom"><b>SocketUDP</b></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
<a class="el" href="classsf_1_1Packet.htm" title="Packet wraps data to send / to receive through the network.">Packet</a> wraps data to send / to receive through the network. 
<p>Definition at line <a class="el" href="Packet_8hpp-source.htm#l00041">41</a> of file <a class="el" href="Packet_8hpp-source.htm">Packet.hpp</a>.</p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="786e5d4ced83992ceefa1799963ea858"></a><!-- doxytag: member="sf::Packet::Packet" ref="786e5d4ced83992ceefa1799963ea858" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::Packet::Packet           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Default constructor. 
<p>

<p>Definition at line <a class="el" href="Packet_8cpp-source.htm#l00038">38</a> of file <a class="el" href="Packet_8cpp-source.htm">Packet.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="bd57f3b7a6e0e9119f4021754b5b19e5"></a><!-- doxytag: member="sf::Packet::~Packet" ref="bd57f3b7a6e0e9119f4021754b5b19e5" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::Packet::~Packet           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Virtual destructor. 
<p>

<p>Definition at line <a class="el" href="Packet_8cpp-source.htm#l00049">49</a> of file <a class="el" href="Packet_8cpp-source.htm">Packet.cpp</a>.</p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="aaa020852bd7be75625b9f64b3a77c64"></a><!-- doxytag: member="sf::Packet::Append" ref="aaa020852bd7be75625b9f64b3a77c64" args="(const void *Data, std::size_t SizeInBytes)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Packet::Append           </td>
          <td>(</td>
          <td class="paramtype">const void *&nbsp;</td>
          <td class="paramname"> <em>Data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t&nbsp;</td>
          <td class="paramname"> <em>SizeInBytes</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Append data to the end of the packet. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Data</em>&nbsp;</td><td>: Pointer to the bytes to append </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>SizeInBytes</em>&nbsp;</td><td>: Number of bytes to append </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="Packet_8cpp-source.htm#l00058">58</a> of file <a class="el" href="Packet_8cpp-source.htm">Packet.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="3a7a30fb7a39e59df0cbd773756f60da"></a><!-- doxytag: member="sf::Packet::Clear" ref="3a7a30fb7a39e59df0cbd773756f60da" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Packet::Clear           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Clear the packet data. 
<p>

<p>Definition at line <a class="el" href="Packet_8cpp-source.htm#l00072">72</a> of file <a class="el" href="Packet_8cpp-source.htm">Packet.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="8d587905fb63e62419f1cc338eceed36"></a><!-- doxytag: member="sf::Packet::EndOfPacket" ref="8d587905fb63e62419f1cc338eceed36" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::Packet::EndOfPacket           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Tell if the reading position has reached the end of the packet. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>True if all data have been read into the packet </dd></dl>

<p>Definition at line <a class="el" href="Packet_8cpp-source.htm#l00103">103</a> of file <a class="el" href="Packet_8cpp-source.htm">Packet.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="78286172beef1f89bd2a77edb7118c7a"></a><!-- doxytag: member="sf::Packet::GetData" ref="78286172beef1f89bd2a77edb7118c7a" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char * sf::Packet::GetData           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get a pointer to the data contained in the packet Warning : the returned pointer may be invalid after you append data to the packet. 
<p>
Get a pointer to the data contained in the packet Warning : the returned pointer may be invalid after you append data to the packet.<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Pointer to the data </dd></dl>

<p>Definition at line <a class="el" href="Packet_8cpp-source.htm#l00085">85</a> of file <a class="el" href="Packet_8cpp-source.htm">Packet.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="4e6fcdc0ff42ad45b33cea22be253b0d"></a><!-- doxytag: member="sf::Packet::GetDataSize" ref="4e6fcdc0ff42ad45b33cea22be253b0d" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::size_t sf::Packet::GetDataSize           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the size of the data contained in the packet. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Data size, in bytes </dd></dl>

<p>Definition at line <a class="el" href="Packet_8cpp-source.htm#l00094">94</a> of file <a class="el" href="Packet_8cpp-source.htm">Packet.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="087ae98bb7e93f8c82b29b88aee2f8d6"></a><!-- doxytag: member="sf::Packet::operator bool" ref="087ae98bb7e93f8c82b29b88aee2f8d6" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::Packet::operator bool           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Return the validity of packet. 
<p>
Tell if the packet is valid for reading.<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>True if last data extraction from packet was successful </dd></dl>

<p>Definition at line <a class="el" href="Packet_8cpp-source.htm#l00112">112</a> of file <a class="el" href="Packet_8cpp-source.htm">Packet.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="63d813d3e0e7f8438ad15a0130b4f550"></a><!-- doxytag: member="sf::Packet::operator&lt;&lt;" ref="63d813d3e0e7f8438ad15a0130b4f550" args="(bool Data)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp; sf::Packet::operator&lt;&lt;           </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>Data</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Operator &lt;&lt; overloads to put data into the packet. 
<p>

<p>Definition at line <a class="el" href="Packet_8cpp-source.htm#l00290">290</a> of file <a class="el" href="Packet_8cpp-source.htm">Packet.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="8dfd4b8767cfd705a71d79b76d12ee16"></a><!-- doxytag: member="sf::Packet::operator&gt;&gt;" ref="8dfd4b8767cfd705a71d79b76d12ee16" args="(bool &amp;Data)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Packet.htm">Packet</a> &amp; sf::Packet::operator&gt;&gt;           </td>
          <td>(</td>
          <td class="paramtype">bool &amp;&nbsp;</td>
          <td class="paramname"> <em>Data</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Operator &gt;&gt; overloads to extract data from the packet. 
<p>

<p>Definition at line <a class="el" href="Packet_8cpp-source.htm#l00121">121</a> of file <a class="el" href="Packet_8cpp-source.htm">Packet.cpp</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="Packet_8hpp-source.htm">Packet.hpp</a><li><a class="el" href="Packet_8cpp-source.htm">Packet.cpp</a></ul>
</div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
