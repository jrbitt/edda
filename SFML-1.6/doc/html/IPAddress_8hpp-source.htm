<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.htm"><span>File&nbsp;List</span></a></li>
    </ul>
  </div>
<h1>IPAddress.hpp</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00002"></a>00002 <span class="comment">//</span>
<a name="l00003"></a>00003 <span class="comment">// SFML - Simple and Fast Multimedia Library</span>
<a name="l00004"></a>00004 <span class="comment">// Copyright (C) 2007-2009 Laurent Gomila (laurent.gom@gmail.com)</span>
<a name="l00005"></a>00005 <span class="comment">//</span>
<a name="l00006"></a>00006 <span class="comment">// This software is provided 'as-is', without any express or implied warranty.</span>
<a name="l00007"></a>00007 <span class="comment">// In no event will the authors be held liable for any damages arising from the use of this software.</span>
<a name="l00008"></a>00008 <span class="comment">//</span>
<a name="l00009"></a>00009 <span class="comment">// Permission is granted to anyone to use this software for any purpose,</span>
<a name="l00010"></a>00010 <span class="comment">// including commercial applications, and to alter it and redistribute it freely,</span>
<a name="l00011"></a>00011 <span class="comment">// subject to the following restrictions:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// 1. The origin of this software must not be misrepresented;</span>
<a name="l00014"></a>00014 <span class="comment">//    you must not claim that you wrote the original software.</span>
<a name="l00015"></a>00015 <span class="comment">//    If you use this software in a product, an acknowledgment</span>
<a name="l00016"></a>00016 <span class="comment">//    in the product documentation would be appreciated but is not required.</span>
<a name="l00017"></a>00017 <span class="comment">//</span>
<a name="l00018"></a>00018 <span class="comment">// 2. Altered source versions must be plainly marked as such,</span>
<a name="l00019"></a>00019 <span class="comment">//    and must not be misrepresented as being the original software.</span>
<a name="l00020"></a>00020 <span class="comment">//</span>
<a name="l00021"></a>00021 <span class="comment">// 3. This notice may not be removed or altered from any source distribution.</span>
<a name="l00022"></a>00022 <span class="comment">//</span>
<a name="l00024"></a>00024 <span class="comment"></span>
<a name="l00025"></a>00025 <span class="preprocessor">#ifndef SFML_IPADDRESS_HPP</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span><span class="preprocessor">#define SFML_IPADDRESS_HPP</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span>
<a name="l00029"></a>00029 <span class="comment">// Headers</span>
<a name="l00031"></a>00031 <span class="comment"></span><span class="preprocessor">#include &lt;SFML/Config.hpp&gt;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;istream&gt;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &lt;ostream&gt;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &lt;string&gt;</span>
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 
<a name="l00037"></a>00037 <span class="keyword">namespace </span>sf
<a name="l00038"></a>00038 {
<a name="l00042"></a><a class="code" href="classsf_1_1IPAddress.htm">00042</a> <span class="keyword">class </span>SFML_API <a class="code" href="classsf_1_1IPAddress.htm" title="IPAddress provides easy manipulation of IP v4 addresses.">IPAddress</a>
<a name="l00043"></a>00043 {
<a name="l00044"></a>00044 <span class="keyword">public</span> :
<a name="l00045"></a>00045 
<a name="l00050"></a>00050     <a class="code" href="classsf_1_1IPAddress.htm" title="IPAddress provides easy manipulation of IP v4 addresses.">IPAddress</a>();
<a name="l00051"></a>00051 
<a name="l00058"></a>00058     <a class="code" href="classsf_1_1IPAddress.htm" title="IPAddress provides easy manipulation of IP v4 addresses.">IPAddress</a>(<span class="keyword">const</span> std::string&amp; Address);
<a name="l00059"></a>00059 
<a name="l00067"></a>00067     <a class="code" href="classsf_1_1IPAddress.htm" title="IPAddress provides easy manipulation of IP v4 addresses.">IPAddress</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* Address);
<a name="l00068"></a>00068 
<a name="l00078"></a>00078     <a class="code" href="classsf_1_1IPAddress.htm" title="IPAddress provides easy manipulation of IP v4 addresses.">IPAddress</a>(Uint8 Byte0, Uint8 Byte1, Uint8 Byte2, Uint8 Byte3);
<a name="l00079"></a>00079 
<a name="l00086"></a>00086     <a class="code" href="classsf_1_1IPAddress.htm" title="IPAddress provides easy manipulation of IP v4 addresses.">IPAddress</a>(Uint32 Address);
<a name="l00087"></a>00087 
<a name="l00094"></a>00094     <span class="keywordtype">bool</span> IsValid() <span class="keyword">const</span>;
<a name="l00095"></a>00095 
<a name="l00102"></a>00102     std::string ToString() <span class="keyword">const</span>;
<a name="l00103"></a>00103 
<a name="l00110"></a>00110     Uint32 ToInteger() <span class="keyword">const</span>;
<a name="l00111"></a>00111 
<a name="l00118"></a>00118     <span class="keyword">static</span> <a class="code" href="classsf_1_1IPAddress.htm" title="IPAddress provides easy manipulation of IP v4 addresses.">IPAddress</a> GetLocalAddress();
<a name="l00119"></a>00119 
<a name="l00131"></a>00131     <span class="keyword">static</span> <a class="code" href="classsf_1_1IPAddress.htm" title="IPAddress provides easy manipulation of IP v4 addresses.">IPAddress</a> GetPublicAddress(<span class="keywordtype">float</span> Timeout = 0.f);
<a name="l00132"></a>00132 
<a name="l00141"></a>00141     <span class="keywordtype">bool</span> operator ==(<span class="keyword">const</span> <a class="code" href="classsf_1_1IPAddress.htm" title="IPAddress provides easy manipulation of IP v4 addresses.">IPAddress</a>&amp; Other) <span class="keyword">const</span>;
<a name="l00142"></a>00142 
<a name="l00151"></a>00151     <span class="keywordtype">bool</span> operator !=(<span class="keyword">const</span> <a class="code" href="classsf_1_1IPAddress.htm" title="IPAddress provides easy manipulation of IP v4 addresses.">IPAddress</a>&amp; Other) <span class="keyword">const</span>;
<a name="l00152"></a>00152 
<a name="l00161"></a>00161     <span class="keywordtype">bool</span> operator &lt;(<span class="keyword">const</span> <a class="code" href="classsf_1_1IPAddress.htm" title="IPAddress provides easy manipulation of IP v4 addresses.">IPAddress</a>&amp; Other) <span class="keyword">const</span>;
<a name="l00162"></a>00162 
<a name="l00171"></a>00171     <span class="keywordtype">bool</span> operator &gt;(<span class="keyword">const</span> <a class="code" href="classsf_1_1IPAddress.htm" title="IPAddress provides easy manipulation of IP v4 addresses.">IPAddress</a>&amp; Other) <span class="keyword">const</span>;
<a name="l00172"></a>00172 
<a name="l00181"></a>00181     <span class="keywordtype">bool</span> operator &lt;=(<span class="keyword">const</span> <a class="code" href="classsf_1_1IPAddress.htm" title="IPAddress provides easy manipulation of IP v4 addresses.">IPAddress</a>&amp; Other) <span class="keyword">const</span>;
<a name="l00182"></a>00182 
<a name="l00191"></a>00191     <span class="keywordtype">bool</span> operator &gt;=(<span class="keyword">const</span> <a class="code" href="classsf_1_1IPAddress.htm" title="IPAddress provides easy manipulation of IP v4 addresses.">IPAddress</a>&amp; Other) <span class="keyword">const</span>;
<a name="l00192"></a>00192 
<a name="l00194"></a>00194     <span class="comment">// Static member data</span>
<a name="l00196"></a><a class="code" href="classsf_1_1IPAddress.htm#3529ec93755712b038fe6b1456c4f7e0">00196</a> <span class="comment"></span>    <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classsf_1_1IPAddress.htm" title="IPAddress provides easy manipulation of IP v4 addresses.">IPAddress</a> LocalHost; 
<a name="l00197"></a>00197 
<a name="l00198"></a>00198 <span class="keyword">private</span> :
<a name="l00199"></a>00199 
<a name="l00201"></a>00201     <span class="comment">// Member data</span>
<a name="l00203"></a>00203 <span class="comment"></span>    Uint32 myAddress; 
<a name="l00204"></a>00204 };
<a name="l00205"></a>00205 
<a name="l00215"></a>00215 SFML_API std::istream&amp; operator &gt;&gt;(std::istream&amp; Stream, <a class="code" href="classsf_1_1IPAddress.htm" title="IPAddress provides easy manipulation of IP v4 addresses.">IPAddress</a>&amp; Address);
<a name="l00216"></a>00216 
<a name="l00226"></a>00226 SFML_API std::ostream&amp; operator &lt;&lt;(std::ostream&amp; Stream, <span class="keyword">const</span> <a class="code" href="classsf_1_1IPAddress.htm" title="IPAddress provides easy manipulation of IP v4 addresses.">IPAddress</a>&amp; Address);
<a name="l00227"></a>00227 
<a name="l00228"></a>00228 } <span class="comment">// namespace sf</span>
<a name="l00229"></a>00229 
<a name="l00230"></a>00230 
<a name="l00231"></a>00231 <span class="preprocessor">#endif // SFML_IPADDRESS_HPP</span>
</pre></div></div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
