<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>sf::Sprite Member List</h1>This is the complete list of members for <a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a>, including all inherited members.<p><table>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#712de01505e04a03b93cf33ae004cdbc">Drawable</a>(const Vector2f &amp;Position=Vector2f(0, 0), const Vector2f &amp;Scale=Vector2f(1, 1), float Rotation=0.f, const Color &amp;Col=Color(255, 255, 255, 255))</td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sprite.htm#262e7dfd12caa5c434d546b68e5ff71b">FlipX</a>(bool Flipped)</td><td><a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sprite.htm#88e999eade1c55aadd5f618f1f17ec97">FlipY</a>(bool Flipped)</td><td><a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#b6446c4717a2800cad85db55cb55409a">GetBlendMode</a>() const </td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#de634efe8d6264282acc564fa5ea77c0">GetCenter</a>() const </td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#a2a028c4a975b5ed6d5a560a1c44e0c8">GetColor</a>() const </td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sprite.htm#e2b23a9536486aa7ea3abc5801984aca">GetImage</a>() const </td><td><a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#48238d5726104ba7ddb42f21fc5d5b2f">GetInverseMatrix</a>() const </td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#c659a89e42063d13aa9ebe2b534d404e">GetMatrix</a>() const </td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sprite.htm#5a54b2a7c2fd5464a499ea8ac7348c1c">GetPixel</a>(unsigned int X, unsigned int Y) const </td><td><a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#9ad52594fd5e835cbd03b79098d70e0b">GetPosition</a>() const </td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#4e82bec096673bccf7ceac5207617017">GetRotation</a>() const </td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#fa4d6b97e7c10a82430ff9ee56009c97">GetScale</a>() const </td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sprite.htm#386e09c5f321a69707393851ae026f7e">GetSize</a>() const </td><td><a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sprite.htm#524cc0591bd56e48d8f0e0e5f9c9e941">GetSubRect</a>() const </td><td><a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#501df9af956362b3e3769d80381c051b">Move</a>(float OffsetX, float OffsetY)</td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#3c0ac0851d6b0ebed80ae9641ff93161">Move</a>(const Vector2f &amp;Offset)</td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sprite.htm#0f52de16559efc4bf748a14f43318c7b">Render</a>(RenderTarget &amp;Target) const </td><td><a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a></td><td><code> [protected, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sprite.htm#44a5075036963d312f3463caa2444e32">Resize</a>(float Width, float Height)</td><td><a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sprite.htm#7cc9df731a61f91ecd16b4a84de499aa">Resize</a>(const Vector2f &amp;Size)</td><td><a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#3e7d558d0ef488485a2d3f885ff2b419">Rotate</a>(float Angle)</td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#2a132c9f2f3736b7d0f6ea80303caacd">Scale</a>(float FactorX, float FactorY)</td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#c969d85eaf63f072de9e963bd973e91a">Scale</a>(const Vector2f &amp;Factor)</td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#aa6558b1ae27e29cb825028473707da5">SetBlendMode</a>(Blend::Mode Mode)</td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#11ba1d92bc863af6d95831d216802f61">SetCenter</a>(float CenterX, float CenterY)</td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#235e438555d8161f4995615f24fa0b11">SetCenter</a>(const Vector2f &amp;Center)</td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#8cae9f22220985e368a1b38af7644ffb">SetColor</a>(const Color &amp;Col)</td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sprite.htm#3674c4c0556e4e19cb307d52f254b53c">SetImage</a>(const Image &amp;Img)</td><td><a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#419da954b1f2ad1ac2ae0b9ab6e72589">SetPosition</a>(float X, float Y)</td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#d2a279f3b13abf57cc25b2b4bd3b81ae">SetPosition</a>(const Vector2f &amp;Position)</td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#6d06383770eb01ffecf3d1cae6fec0ec">SetRotation</a>(float Rotation)</td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#0b486c56c2bd137bac629f72fea66769">SetScale</a>(float ScaleX, float ScaleY)</td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#84876c5ef7fa628c85c3c9e000e50aa1">SetScale</a>(const Vector2f &amp;Scale)</td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#0cafae61a1d23bddb059d64df0e1502f">SetScaleX</a>(float FactorX)</td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#89e7793c74c656e5850b71d0ab34b8bf">SetScaleY</a>(float FactorY)</td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sprite.htm#54bf1e6b425c40b00dd544a9c4fb77df">SetSubRect</a>(const IntRect &amp;SubRect)</td><td><a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#c8de7bfe092736083dcf23b0dbd22b1e">SetX</a>(float X)</td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#83fecebe749c1aca9070eafd63e1a0c9">SetY</a>(float Y)</td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sprite.htm#92559fbca895a96758abf5eabab96984">Sprite</a>()</td><td><a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sprite.htm#6992dc47da2f9349bbe691db532f2436">Sprite</a>(const Image &amp;Img, const Vector2f &amp;Position=Vector2f(0, 0), const Vector2f &amp;Scale=Vector2f(1, 1), float Rotation=0.f, const Color &amp;Col=Color(255, 255, 255, 255))</td><td><a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a></td><td><code> [explicit]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#fe3cb6e62921ce13806c27dc727f8945">TransformToGlobal</a>(const sf::Vector2f &amp;Point) const </td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#809f25ae0b3a2015ec8a44fe9f5a0008">TransformToLocal</a>(const sf::Vector2f &amp;Point) const </td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#28141b9ba1e4b432313339546669817a">~Drawable</a>()</td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td><code> [virtual]</code></td></tr>
</table></div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
