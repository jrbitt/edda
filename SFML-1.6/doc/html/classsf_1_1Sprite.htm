<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><b>sf</b>::<a class="el" href="classsf_1_1Sprite.htm">Sprite</a>
  </div>
</div>
<div class="contents">
<h1>sf::Sprite Class Reference</h1><!-- doxytag: class="sf::Sprite" --><!-- doxytag: inherits="sf::Drawable" --><a class="el" href="classsf_1_1Sprite.htm" title="Sprite defines a sprite : texture, transformations, color, and draw on screen.">Sprite</a> defines a sprite : texture, transformations, color, and draw on screen.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="Sprite_8hpp-source.htm">Sprite.hpp</a>&gt;</code>
<p>
<div class="dynheader">
Inheritance diagram for sf::Sprite:</div>
<div class="dynsection">

<p><center><img src="classsf_1_1Sprite.png" usemap="#sf::Sprite_map" border="0" alt=""></center>
<map name="sf::Sprite_map">
<area href="classsf_1_1Drawable.htm" alt="sf::Drawable" shape="rect" coords="0,0,82,24">
</map>
</div>

<p>
<a href="classsf_1_1Sprite-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sprite.htm#92559fbca895a96758abf5eabab96984">Sprite</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Default constructor.  <a href="#92559fbca895a96758abf5eabab96984"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sprite.htm#6992dc47da2f9349bbe691db532f2436">Sprite</a> (const <a class="el" href="classsf_1_1Image.htm">Image</a> &amp;Img, const <a class="el" href="classsf_1_1Vector2.htm">Vector2f</a> &amp;Position=<a class="el" href="classsf_1_1Vector2.htm">Vector2f</a>(0, 0), const <a class="el" href="classsf_1_1Vector2.htm">Vector2f</a> &amp;Scale=<a class="el" href="classsf_1_1Vector2.htm">Vector2f</a>(1, 1), float Rotation=0.f, const <a class="el" href="classsf_1_1Color.htm">Color</a> &amp;Col=<a class="el" href="classsf_1_1Color.htm">Color</a>(255, 255, 255, 255))</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Construct the sprite from a source image.  <a href="#6992dc47da2f9349bbe691db532f2436"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sprite.htm#3674c4c0556e4e19cb307d52f254b53c">SetImage</a> (const <a class="el" href="classsf_1_1Image.htm">Image</a> &amp;Img)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Change the image of the sprite.  <a href="#3674c4c0556e4e19cb307d52f254b53c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sprite.htm#54bf1e6b425c40b00dd544a9c4fb77df">SetSubRect</a> (const <a class="el" href="classsf_1_1Rect.htm">IntRect</a> &amp;SubRect)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the sub-rectangle of the sprite inside the source image.  <a href="#54bf1e6b425c40b00dd544a9c4fb77df"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sprite.htm#44a5075036963d312f3463caa2444e32">Resize</a> (float Width, float Height)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Resize the sprite (by changing its scale factors) (take 2 values).  <a href="#44a5075036963d312f3463caa2444e32"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sprite.htm#7cc9df731a61f91ecd16b4a84de499aa">Resize</a> (const <a class="el" href="classsf_1_1Vector2.htm">Vector2f</a> &amp;Size)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Resize the sprite (by changing its scale factors) (take a 2D vector).  <a href="#7cc9df731a61f91ecd16b4a84de499aa"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sprite.htm#262e7dfd12caa5c434d546b68e5ff71b">FlipX</a> (bool Flipped)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Flip the sprite horizontally.  <a href="#262e7dfd12caa5c434d546b68e5ff71b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sprite.htm#88e999eade1c55aadd5f618f1f17ec97">FlipY</a> (bool Flipped)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Flip the sprite vertically.  <a href="#88e999eade1c55aadd5f618f1f17ec97"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const <a class="el" href="classsf_1_1Image.htm">Image</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sprite.htm#e2b23a9536486aa7ea3abc5801984aca">GetImage</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the source image of the sprite.  <a href="#e2b23a9536486aa7ea3abc5801984aca"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const <a class="el" href="classsf_1_1Rect.htm">IntRect</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sprite.htm#524cc0591bd56e48d8f0e0e5f9c9e941">GetSubRect</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the sub-rectangle of the sprite inside the source image.  <a href="#524cc0591bd56e48d8f0e0e5f9c9e941"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classsf_1_1Vector2.htm">Vector2f</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sprite.htm#386e09c5f321a69707393851ae026f7e">GetSize</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the sprite size.  <a href="#386e09c5f321a69707393851ae026f7e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classsf_1_1Color.htm">Color</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sprite.htm#5a54b2a7c2fd5464a499ea8ac7348c1c">GetPixel</a> (unsigned int X, unsigned int Y) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the color of a given pixel in the sprite (point is in local coordinates).  <a href="#5a54b2a7c2fd5464a499ea8ac7348c1c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#419da954b1f2ad1ac2ae0b9ab6e72589">SetPosition</a> (float X, float Y)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the position of the object (take 2 values).  <a href="#419da954b1f2ad1ac2ae0b9ab6e72589"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#d2a279f3b13abf57cc25b2b4bd3b81ae">SetPosition</a> (const <a class="el" href="classsf_1_1Vector2.htm">Vector2f</a> &amp;Position)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the position of the object (take a 2D vector).  <a href="#d2a279f3b13abf57cc25b2b4bd3b81ae"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#c8de7bfe092736083dcf23b0dbd22b1e">SetX</a> (float X)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the X position of the object.  <a href="#c8de7bfe092736083dcf23b0dbd22b1e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#83fecebe749c1aca9070eafd63e1a0c9">SetY</a> (float Y)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the Y position of the object.  <a href="#83fecebe749c1aca9070eafd63e1a0c9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#0b486c56c2bd137bac629f72fea66769">SetScale</a> (float ScaleX, float ScaleY)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the scale of the object (take 2 values).  <a href="#0b486c56c2bd137bac629f72fea66769"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#84876c5ef7fa628c85c3c9e000e50aa1">SetScale</a> (const <a class="el" href="classsf_1_1Vector2.htm">Vector2f</a> &amp;Scale)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the scale of the object (take a 2D vector).  <a href="#84876c5ef7fa628c85c3c9e000e50aa1"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#0cafae61a1d23bddb059d64df0e1502f">SetScaleX</a> (float FactorX)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the X scale factor of the object.  <a href="#0cafae61a1d23bddb059d64df0e1502f"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#89e7793c74c656e5850b71d0ab34b8bf">SetScaleY</a> (float FactorY)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the Y scale factor of the object.  <a href="#89e7793c74c656e5850b71d0ab34b8bf"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#11ba1d92bc863af6d95831d216802f61">SetCenter</a> (float CenterX, float CenterY)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the center of the object, in coordinates relative to the top-left of the object (take 2 values).  <a href="#11ba1d92bc863af6d95831d216802f61"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#235e438555d8161f4995615f24fa0b11">SetCenter</a> (const <a class="el" href="classsf_1_1Vector2.htm">Vector2f</a> &amp;Center)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the center of the object, in coordinates relative to the top-left of the object (take a 2D vector).  <a href="#235e438555d8161f4995615f24fa0b11"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#6d06383770eb01ffecf3d1cae6fec0ec">SetRotation</a> (float Rotation)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the orientation of the object.  <a href="#6d06383770eb01ffecf3d1cae6fec0ec"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#8cae9f22220985e368a1b38af7644ffb">SetColor</a> (const <a class="el" href="classsf_1_1Color.htm">Color</a> &amp;Col)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the color of the object.  <a href="#8cae9f22220985e368a1b38af7644ffb"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#aa6558b1ae27e29cb825028473707da5">SetBlendMode</a> (<a class="el" href="namespacesf_1_1Blend.htm#1a2fa89de4bb0d82b2eb30399fe575ca">Blend::Mode</a> Mode)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the blending mode for the object.  <a href="#aa6558b1ae27e29cb825028473707da5"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const <a class="el" href="classsf_1_1Vector2.htm">Vector2f</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#9ad52594fd5e835cbd03b79098d70e0b">GetPosition</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the position of the object.  <a href="#9ad52594fd5e835cbd03b79098d70e0b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const <a class="el" href="classsf_1_1Vector2.htm">Vector2f</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#fa4d6b97e7c10a82430ff9ee56009c97">GetScale</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the current scale of the object.  <a href="#fa4d6b97e7c10a82430ff9ee56009c97"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const <a class="el" href="classsf_1_1Vector2.htm">Vector2f</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#de634efe8d6264282acc564fa5ea77c0">GetCenter</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the center of the object.  <a href="#de634efe8d6264282acc564fa5ea77c0"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">float&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#4e82bec096673bccf7ceac5207617017">GetRotation</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the orientation of the object.  <a href="#4e82bec096673bccf7ceac5207617017"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const <a class="el" href="classsf_1_1Color.htm">Color</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#a2a028c4a975b5ed6d5a560a1c44e0c8">GetColor</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the color of the object.  <a href="#a2a028c4a975b5ed6d5a560a1c44e0c8"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="namespacesf_1_1Blend.htm#1a2fa89de4bb0d82b2eb30399fe575ca">Blend::Mode</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#b6446c4717a2800cad85db55cb55409a">GetBlendMode</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the current blending mode.  <a href="#b6446c4717a2800cad85db55cb55409a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#501df9af956362b3e3769d80381c051b">Move</a> (float OffsetX, float OffsetY)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Move the object of a given offset (take 2 values).  <a href="#501df9af956362b3e3769d80381c051b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#3c0ac0851d6b0ebed80ae9641ff93161">Move</a> (const <a class="el" href="classsf_1_1Vector2.htm">Vector2f</a> &amp;Offset)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Move the object of a given offset (take a 2D vector).  <a href="#3c0ac0851d6b0ebed80ae9641ff93161"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#2a132c9f2f3736b7d0f6ea80303caacd">Scale</a> (float FactorX, float FactorY)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Scale the object (take 2 values).  <a href="#2a132c9f2f3736b7d0f6ea80303caacd"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#c969d85eaf63f072de9e963bd973e91a">Scale</a> (const <a class="el" href="classsf_1_1Vector2.htm">Vector2f</a> &amp;Factor)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Scale the object (take a 2D vector).  <a href="#c969d85eaf63f072de9e963bd973e91a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#3e7d558d0ef488485a2d3f885ff2b419">Rotate</a> (float Angle)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Rotate the object.  <a href="#3e7d558d0ef488485a2d3f885ff2b419"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classsf_1_1Vector2.htm">sf::Vector2f</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#809f25ae0b3a2015ec8a44fe9f5a0008">TransformToLocal</a> (const <a class="el" href="classsf_1_1Vector2.htm">sf::Vector2f</a> &amp;Point) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Transform a point from global coordinates into local coordinates (ie it applies the inverse of object's center, translation, rotation and scale to the point).  <a href="#809f25ae0b3a2015ec8a44fe9f5a0008"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classsf_1_1Vector2.htm">sf::Vector2f</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#fe3cb6e62921ce13806c27dc727f8945">TransformToGlobal</a> (const <a class="el" href="classsf_1_1Vector2.htm">sf::Vector2f</a> &amp;Point) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Transform a point from local coordinates into global coordinates (ie it applies the object's center, translation, rotation and scale to the point).  <a href="#fe3cb6e62921ce13806c27dc727f8945"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sprite.htm#0f52de16559efc4bf748a14f43318c7b">Render</a> (<a class="el" href="classsf_1_1RenderTarget.htm">RenderTarget</a> &amp;Target) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">/see Drawable::Render  <a href="#0f52de16559efc4bf748a14f43318c7b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const <a class="el" href="classsf_1_1Matrix3.htm">Matrix3</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#c659a89e42063d13aa9ebe2b534d404e">GetMatrix</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the transform matrix of the drawable.  <a href="#c659a89e42063d13aa9ebe2b534d404e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const <a class="el" href="classsf_1_1Matrix3.htm">Matrix3</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#48238d5726104ba7ddb42f21fc5d5b2f">GetInverseMatrix</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the inverse transform matrix of the drawable.  <a href="#48238d5726104ba7ddb42f21fc5d5b2f"></a><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
<a class="el" href="classsf_1_1Sprite.htm" title="Sprite defines a sprite : texture, transformations, color, and draw on screen.">Sprite</a> defines a sprite : texture, transformations, color, and draw on screen. 
<p>Definition at line <a class="el" href="Sprite_8hpp-source.htm#l00044">44</a> of file <a class="el" href="Sprite_8hpp-source.htm">Sprite.hpp</a>.</p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="92559fbca895a96758abf5eabab96984"></a><!-- doxytag: member="sf::Sprite::Sprite" ref="92559fbca895a96758abf5eabab96984" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::Sprite::Sprite           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Default constructor. 
<p>

<p>Definition at line <a class="el" href="Sprite_8cpp-source.htm#l00038">38</a> of file <a class="el" href="Sprite_8cpp-source.htm">Sprite.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="6992dc47da2f9349bbe691db532f2436"></a><!-- doxytag: member="sf::Sprite::Sprite" ref="6992dc47da2f9349bbe691db532f2436" args="(const Image &amp;Img, const Vector2f &amp;Position=Vector2f(0, 0), const Vector2f &amp;Scale=Vector2f(1, 1), float Rotation=0.f, const Color &amp;Col=Color(255, 255, 255, 255))" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::Sprite::Sprite           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Image.htm">Image</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>Img</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Vector2.htm">Vector2f</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>Position</em> = <code><a class="el" href="classsf_1_1Vector2.htm">Vector2f</a>(0,&nbsp;0)</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Vector2.htm">Vector2f</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>Scale</em> = <code><a class="el" href="classsf_1_1Vector2.htm">Vector2f</a>(1,&nbsp;1)</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>Rotation</em> = <code>0.f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Color.htm">Color</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>Col</em> = <code><a class="el" href="classsf_1_1Color.htm">Color</a>(255,&nbsp;255,&nbsp;255,&nbsp;255)</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [explicit]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Construct the sprite from a source image. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Img</em>&nbsp;</td><td>: <a class="el" href="classsf_1_1Image.htm" title="Image is the low-level class for loading and manipulating images.">Image</a> of the sprite </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>Position</em>&nbsp;</td><td>: Position of the sprite (0, 0 by default) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>Scale</em>&nbsp;</td><td>: Scale factor (1, 1 by default) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>Rotation</em>&nbsp;</td><td>: Orientation, in degrees (0 by default) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>Col</em>&nbsp;</td><td>: <a class="el" href="classsf_1_1Color.htm" title="Color is an utility class for manipulating 32-bits RGBA colors.">Color</a> of the sprite (white by default) </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="Sprite_8cpp-source.htm#l00050">50</a> of file <a class="el" href="Sprite_8cpp-source.htm">Sprite.cpp</a>.</p>

</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="262e7dfd12caa5c434d546b68e5ff71b"></a><!-- doxytag: member="sf::Sprite::FlipX" ref="262e7dfd12caa5c434d546b68e5ff71b" args="(bool Flipped)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Sprite::FlipX           </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>Flipped</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Flip the sprite horizontally. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Flipped</em>&nbsp;</td><td>: True to flip the sprite </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="Sprite_8cpp-source.htm#l00112">112</a> of file <a class="el" href="Sprite_8cpp-source.htm">Sprite.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="88e999eade1c55aadd5f618f1f17ec97"></a><!-- doxytag: member="sf::Sprite::FlipY" ref="88e999eade1c55aadd5f618f1f17ec97" args="(bool Flipped)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Sprite::FlipY           </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>Flipped</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Flip the sprite vertically. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Flipped</em>&nbsp;</td><td>: True to flip the sprite </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="Sprite_8cpp-source.htm#l00121">121</a> of file <a class="el" href="Sprite_8cpp-source.htm">Sprite.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="b6446c4717a2800cad85db55cb55409a"></a><!-- doxytag: member="sf::Sprite::GetBlendMode" ref="b6446c4717a2800cad85db55cb55409a" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacesf_1_1Blend.htm#1a2fa89de4bb0d82b2eb30399fe575ca">Blend::Mode</a> sf::Drawable::GetBlendMode           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the current blending mode. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Current blending mode </dd></dl>

<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00258">258</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="de634efe8d6264282acc564fa5ea77c0"></a><!-- doxytag: member="sf::Sprite::GetCenter" ref="de634efe8d6264282acc564fa5ea77c0" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classsf_1_1Vector2.htm">Vector2f</a> &amp; sf::Drawable::GetCenter           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the center of the object. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Current position of the center </dd></dl>

<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00231">231</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="a2a028c4a975b5ed6d5a560a1c44e0c8"></a><!-- doxytag: member="sf::Sprite::GetColor" ref="a2a028c4a975b5ed6d5a560a1c44e0c8" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classsf_1_1Color.htm">Color</a> &amp; sf::Drawable::GetColor           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the color of the object. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Current color </dd></dl>

<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00249">249</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="e2b23a9536486aa7ea3abc5801984aca"></a><!-- doxytag: member="sf::Sprite::GetImage" ref="e2b23a9536486aa7ea3abc5801984aca" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classsf_1_1Image.htm">Image</a> * sf::Sprite::GetImage           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the source image of the sprite. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Pointer to the image (can be NULL) </dd></dl>

<p>Definition at line <a class="el" href="Sprite_8cpp-source.htm#l00130">130</a> of file <a class="el" href="Sprite_8cpp-source.htm">Sprite.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="48238d5726104ba7ddb42f21fc5d5b2f"></a><!-- doxytag: member="sf::Sprite::GetInverseMatrix" ref="48238d5726104ba7ddb42f21fc5d5b2f" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classsf_1_1Matrix3.htm">Matrix3</a> &amp; sf::Drawable::GetInverseMatrix           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [protected, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the inverse transform matrix of the drawable. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Inverse transform matrix </dd></dl>

<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00350">350</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="c659a89e42063d13aa9ebe2b534d404e"></a><!-- doxytag: member="sf::Sprite::GetMatrix" ref="c659a89e42063d13aa9ebe2b534d404e" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classsf_1_1Matrix3.htm">Matrix3</a> &amp; sf::Drawable::GetMatrix           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [protected, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the transform matrix of the drawable. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Transform matrix </dd></dl>

<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00334">334</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="5a54b2a7c2fd5464a499ea8ac7348c1c"></a><!-- doxytag: member="sf::Sprite::GetPixel" ref="5a54b2a7c2fd5464a499ea8ac7348c1c" args="(unsigned int X, unsigned int Y) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Color.htm">Color</a> sf::Sprite::GetPixel           </td>
          <td>(</td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>X</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>Y</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the color of a given pixel in the sprite (point is in local coordinates). 
<p>
Get the color of a given pixel in the sprite (point is in local coordinates).<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>X</em>&nbsp;</td><td>: X coordinate of the pixel to get </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>Y</em>&nbsp;</td><td>: Y coordinate of the pixel to get</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd><a class="el" href="classsf_1_1Color.htm" title="Color is an utility class for manipulating 32-bits RGBA colors.">Color</a> of pixel (X, Y) </dd></dl>

<p>Definition at line <a class="el" href="Sprite_8cpp-source.htm#l00158">158</a> of file <a class="el" href="Sprite_8cpp-source.htm">Sprite.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="9ad52594fd5e835cbd03b79098d70e0b"></a><!-- doxytag: member="sf::Sprite::GetPosition" ref="9ad52594fd5e835cbd03b79098d70e0b" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classsf_1_1Vector2.htm">Vector2f</a> &amp; sf::Drawable::GetPosition           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the position of the object. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Current position </dd></dl>

<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00213">213</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="4e82bec096673bccf7ceac5207617017"></a><!-- doxytag: member="sf::Sprite::GetRotation" ref="4e82bec096673bccf7ceac5207617017" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float sf::Drawable::GetRotation           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the orientation of the object. 
<p>
Rotation is always in the range [0, 360]<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Current rotation, in degrees </dd></dl>

<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00240">240</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="fa4d6b97e7c10a82430ff9ee56009c97"></a><!-- doxytag: member="sf::Sprite::GetScale" ref="fa4d6b97e7c10a82430ff9ee56009c97" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classsf_1_1Vector2.htm">Vector2f</a> &amp; sf::Drawable::GetScale           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the current scale of the object. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Current scale factor (always positive) </dd></dl>

<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00222">222</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="386e09c5f321a69707393851ae026f7e"></a><!-- doxytag: member="sf::Sprite::GetSize" ref="386e09c5f321a69707393851ae026f7e" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Vector2.htm">Vector2f</a> sf::Sprite::GetSize           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the sprite size. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Size of the sprite </dd></dl>

<p>Definition at line <a class="el" href="Sprite_8cpp-source.htm#l00148">148</a> of file <a class="el" href="Sprite_8cpp-source.htm">Sprite.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="524cc0591bd56e48d8f0e0e5f9c9e941"></a><!-- doxytag: member="sf::Sprite::GetSubRect" ref="524cc0591bd56e48d8f0e0e5f9c9e941" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classsf_1_1Rect.htm">IntRect</a> &amp; sf::Sprite::GetSubRect           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Get the sub-rectangle of the sprite inside the source image. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Sub-rectangle </dd></dl>

<p>Definition at line <a class="el" href="Sprite_8cpp-source.htm#l00139">139</a> of file <a class="el" href="Sprite_8cpp-source.htm">Sprite.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="3c0ac0851d6b0ebed80ae9641ff93161"></a><!-- doxytag: member="sf::Sprite::Move" ref="3c0ac0851d6b0ebed80ae9641ff93161" args="(const Vector2f &amp;Offset)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Drawable::Move           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Vector2.htm">Vector2f</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>Offset</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Move the object of a given offset (take a 2D vector). 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Offset</em>&nbsp;</td><td>: Amount of units to move the object of </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00278">278</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="501df9af956362b3e3769d80381c051b"></a><!-- doxytag: member="sf::Sprite::Move" ref="501df9af956362b3e3769d80381c051b" args="(float OffsetX, float OffsetY)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Drawable::Move           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>OffsetX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>OffsetY</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Move the object of a given offset (take 2 values). 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>OffsetX</em>&nbsp;</td><td>: X offset </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>OffsetY</em>&nbsp;</td><td>: Y offset</td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00268">268</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="0f52de16559efc4bf748a14f43318c7b"></a><!-- doxytag: member="sf::Sprite::Render" ref="0f52de16559efc4bf748a14f43318c7b" args="(RenderTarget &amp;Target) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Sprite::Render           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classsf_1_1RenderTarget.htm">RenderTarget</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>Target</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [protected, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
/see Drawable::Render 
<p>
/see sfDrawable::Render
<p>Implements <a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a>.</p>

<p>Definition at line <a class="el" href="Sprite_8cpp-source.htm#l00180">180</a> of file <a class="el" href="Sprite_8cpp-source.htm">Sprite.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="7cc9df731a61f91ecd16b4a84de499aa"></a><!-- doxytag: member="sf::Sprite::Resize" ref="7cc9df731a61f91ecd16b4a84de499aa" args="(const Vector2f &amp;Size)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Sprite::Resize           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Vector2.htm">Vector2f</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>Size</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Resize the sprite (by changing its scale factors) (take a 2D vector). 
<p>
Resize the object (by changing its scale factors) (take a 2D vector) The default size is defined by the subrect.<p>
The default size is defined by the subrect<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Size</em>&nbsp;</td><td>: New size (both coordinates must be strictly positive) </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="Sprite_8cpp-source.htm#l00103">103</a> of file <a class="el" href="Sprite_8cpp-source.htm">Sprite.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="44a5075036963d312f3463caa2444e32"></a><!-- doxytag: member="sf::Sprite::Resize" ref="44a5075036963d312f3463caa2444e32" args="(float Width, float Height)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Sprite::Resize           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>Width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>Height</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Resize the sprite (by changing its scale factors) (take 2 values). 
<p>
The default size is defined by the subrect<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Width</em>&nbsp;</td><td>: New width (must be strictly positive) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>Height</em>&nbsp;</td><td>: New height (must be strictly positive)</td></tr>
  </table>
</dl>
The default size is defined by the subrect 
<p>Definition at line <a class="el" href="Sprite_8cpp-source.htm#l00089">89</a> of file <a class="el" href="Sprite_8cpp-source.htm">Sprite.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="3e7d558d0ef488485a2d3f885ff2b419"></a><!-- doxytag: member="sf::Sprite::Rotate" ref="3e7d558d0ef488485a2d3f885ff2b419" args="(float Angle)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Drawable::Rotate           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>Angle</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Rotate the object. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Angle</em>&nbsp;</td><td>: Angle of rotation, in degrees </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00306">306</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="c969d85eaf63f072de9e963bd973e91a"></a><!-- doxytag: member="sf::Sprite::Scale" ref="c969d85eaf63f072de9e963bd973e91a" args="(const Vector2f &amp;Factor)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Drawable::Scale           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Vector2.htm">Vector2f</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>Factor</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Scale the object (take a 2D vector). 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Factor</em>&nbsp;</td><td>: Scaling factors (both values must be strictly positive) </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00297">297</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="2a132c9f2f3736b7d0f6ea80303caacd"></a><!-- doxytag: member="sf::Sprite::Scale" ref="2a132c9f2f3736b7d0f6ea80303caacd" args="(float FactorX, float FactorY)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Drawable::Scale           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>FactorX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>FactorY</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Scale the object (take 2 values). 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>FactorX</em>&nbsp;</td><td>: Scaling factor on X (must be strictly positive) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>FactorY</em>&nbsp;</td><td>: Scaling factor on Y (must be strictly positive) </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00287">287</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="aa6558b1ae27e29cb825028473707da5"></a><!-- doxytag: member="sf::Sprite::SetBlendMode" ref="aa6558b1ae27e29cb825028473707da5" args="(Blend::Mode Mode)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Drawable::SetBlendMode           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacesf_1_1Blend.htm#1a2fa89de4bb0d82b2eb30399fe575ca">Blend::Mode</a>&nbsp;</td>
          <td class="paramname"> <em>Mode</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the blending mode for the object. 
<p>
The default blend mode is <a class="el" href="namespacesf_1_1Blend.htm#1a2fa89de4bb0d82b2eb30399fe575ca23075ecfbf49e19b713cc18188a7661a" title="Pixel = Src * a + Dest * (1 - a).">Blend::Alpha</a><p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Mode</em>&nbsp;</td><td>: New blending mode</td></tr>
  </table>
</dl>
The default blend mode is <a class="el" href="namespacesf_1_1Blend.htm#1a2fa89de4bb0d82b2eb30399fe575ca23075ecfbf49e19b713cc18188a7661a" title="Pixel = Src * a + Dest * (1 - a).">Blend::Alpha</a> 
<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00204">204</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="235e438555d8161f4995615f24fa0b11"></a><!-- doxytag: member="sf::Sprite::SetCenter" ref="235e438555d8161f4995615f24fa0b11" args="(const Vector2f &amp;Center)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Drawable::SetCenter           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Vector2.htm">Vector2f</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>Center</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the center of the object, in coordinates relative to the top-left of the object (take a 2D vector). 
<p>
Set the center of the object, in coordinates relative to the top-left of the object (take a 2D vector).<p>
The default center is (0, 0)<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Center</em>&nbsp;</td><td>: New center</td></tr>
  </table>
</dl>
The default center is (0, 0) 
<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00171">171</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="11ba1d92bc863af6d95831d216802f61"></a><!-- doxytag: member="sf::Sprite::SetCenter" ref="11ba1d92bc863af6d95831d216802f61" args="(float CenterX, float CenterY)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Drawable::SetCenter           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>CenterX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>CenterY</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the center of the object, in coordinates relative to the top-left of the object (take 2 values). 
<p>
Set the center of the object, in coordinates relative to the top-left of the object (take 2 values).<p>
The default center is (0, 0)<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>CenterX</em>&nbsp;</td><td>: X coordinate of the center </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>CenterY</em>&nbsp;</td><td>: Y coordinate of the center</td></tr>
  </table>
</dl>
The default center is (0, 0) 
<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00157">157</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="8cae9f22220985e368a1b38af7644ffb"></a><!-- doxytag: member="sf::Sprite::SetColor" ref="8cae9f22220985e368a1b38af7644ffb" args="(const Color &amp;Col)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Drawable::SetColor           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Color.htm">Color</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>Col</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the color of the object. 
<p>
The default color is white<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Col</em>&nbsp;</td><td>: New color</td></tr>
  </table>
</dl>
The default color is white 
<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00194">194</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="3674c4c0556e4e19cb307d52f254b53c"></a><!-- doxytag: member="sf::Sprite::SetImage" ref="3674c4c0556e4e19cb307d52f254b53c" args="(const Image &amp;Img)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Sprite::SetImage           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Image.htm">Image</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>Img</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Change the image of the sprite. 
<p>
Set the image of the sprite.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Img</em>&nbsp;</td><td>: New image </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="Sprite_8cpp-source.htm#l00063">63</a> of file <a class="el" href="Sprite_8cpp-source.htm">Sprite.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="d2a279f3b13abf57cc25b2b4bd3b81ae"></a><!-- doxytag: member="sf::Sprite::SetPosition" ref="d2a279f3b13abf57cc25b2b4bd3b81ae" args="(const Vector2f &amp;Position)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Drawable::SetPosition           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Vector2.htm">Vector2f</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>Position</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the position of the object (take a 2D vector). 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Position</em>&nbsp;</td><td>: New position </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00075">75</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="419da954b1f2ad1ac2ae0b9ab6e72589"></a><!-- doxytag: member="sf::Sprite::SetPosition" ref="419da954b1f2ad1ac2ae0b9ab6e72589" args="(float X, float Y)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Drawable::SetPosition           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>X</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>Y</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the position of the object (take 2 values). 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>X</em>&nbsp;</td><td>: New X coordinate </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>Y</em>&nbsp;</td><td>: New Y coordinate </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00065">65</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="6d06383770eb01ffecf3d1cae6fec0ec"></a><!-- doxytag: member="sf::Sprite::SetRotation" ref="6d06383770eb01ffecf3d1cae6fec0ec" args="(float Rotation)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Drawable::SetRotation           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>Rotation</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the orientation of the object. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Rotation</em>&nbsp;</td><td>: Angle of rotation, in degrees </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00180">180</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="84876c5ef7fa628c85c3c9e000e50aa1"></a><!-- doxytag: member="sf::Sprite::SetScale" ref="84876c5ef7fa628c85c3c9e000e50aa1" args="(const Vector2f &amp;Scale)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Drawable::SetScale           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Vector2.htm">Vector2f</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>Scale</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the scale of the object (take a 2D vector). 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Scale</em>&nbsp;</td><td>: New scale (both values must be strictly positive) </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00117">117</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="0b486c56c2bd137bac629f72fea66769"></a><!-- doxytag: member="sf::Sprite::SetScale" ref="0b486c56c2bd137bac629f72fea66769" args="(float ScaleX, float ScaleY)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Drawable::SetScale           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>ScaleX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>ScaleY</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the scale of the object (take 2 values). 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>ScaleX</em>&nbsp;</td><td>: New horizontal scale (must be strictly positive) </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>ScaleY</em>&nbsp;</td><td>: New vertical scale (must be strictly positive) </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00107">107</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="0cafae61a1d23bddb059d64df0e1502f"></a><!-- doxytag: member="sf::Sprite::SetScaleX" ref="0cafae61a1d23bddb059d64df0e1502f" args="(float FactorX)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Drawable::SetScaleX           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>FactorX</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the X scale factor of the object. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>X</em>&nbsp;</td><td>: New X scale factor </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00127">127</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="89e7793c74c656e5850b71d0ab34b8bf"></a><!-- doxytag: member="sf::Sprite::SetScaleY" ref="89e7793c74c656e5850b71d0ab34b8bf" args="(float FactorY)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Drawable::SetScaleY           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>FactorY</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the Y scale factor of the object. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Y</em>&nbsp;</td><td>: New Y scale factor </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00141">141</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="54bf1e6b425c40b00dd544a9c4fb77df"></a><!-- doxytag: member="sf::Sprite::SetSubRect" ref="54bf1e6b425c40b00dd544a9c4fb77df" args="(const IntRect &amp;SubRect)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Sprite::SetSubRect           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Rect.htm">IntRect</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>SubRect</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the sub-rectangle of the sprite inside the source image. 
<p>
By default, the subrect covers the entire source image<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>SubRect</em>&nbsp;</td><td>: New sub-rectangle </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="Sprite_8cpp-source.htm#l00079">79</a> of file <a class="el" href="Sprite_8cpp-source.htm">Sprite.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="c8de7bfe092736083dcf23b0dbd22b1e"></a><!-- doxytag: member="sf::Sprite::SetX" ref="c8de7bfe092736083dcf23b0dbd22b1e" args="(float X)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Drawable::SetX           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>X</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the X position of the object. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>X</em>&nbsp;</td><td>: New X coordinate </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00085">85</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="83fecebe749c1aca9070eafd63e1a0c9"></a><!-- doxytag: member="sf::Sprite::SetY" ref="83fecebe749c1aca9070eafd63e1a0c9" args="(float Y)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Drawable::SetY           </td>
          <td>(</td>
          <td class="paramtype">float&nbsp;</td>
          <td class="paramname"> <em>Y</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the Y position of the object. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Y</em>&nbsp;</td><td>: New Y coordinate </td></tr>
  </table>
</dl>

<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00096">96</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="fe3cb6e62921ce13806c27dc727f8945"></a><!-- doxytag: member="sf::Sprite::TransformToGlobal" ref="fe3cb6e62921ce13806c27dc727f8945" args="(const sf::Vector2f &amp;Point) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Vector2.htm">sf::Vector2f</a> sf::Drawable::TransformToGlobal           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Vector2.htm">sf::Vector2f</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>Point</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Transform a point from local coordinates into global coordinates (ie it applies the object's center, translation, rotation and scale to the point). 
<p>
Transform a point from local coordinates into global coordinates (ie it applies the object's center, translation, rotation and scale to the point).<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Point</em>&nbsp;</td><td>: Point to transform</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Transformed point </dd></dl>

<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00325">325</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<a class="anchor" name="809f25ae0b3a2015ec8a44fe9f5a0008"></a><!-- doxytag: member="sf::Sprite::TransformToLocal" ref="809f25ae0b3a2015ec8a44fe9f5a0008" args="(const sf::Vector2f &amp;Point) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Vector2.htm">sf::Vector2f</a> sf::Drawable::TransformToLocal           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Vector2.htm">sf::Vector2f</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>Point</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Transform a point from global coordinates into local coordinates (ie it applies the inverse of object's center, translation, rotation and scale to the point). 
<p>
Transform a point from global coordinates into local coordinates (ie it applies the inverse of object's center, translation, rotation and scale to the point).<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Point</em>&nbsp;</td><td>: Point to transform</td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Transformed point </dd></dl>

<p>Definition at line <a class="el" href="Drawable_8cpp-source.htm#l00316">316</a> of file <a class="el" href="Drawable_8cpp-source.htm">Drawable.cpp</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="Sprite_8hpp-source.htm">Sprite.hpp</a><li><a class="el" href="Sprite_8cpp-source.htm">Sprite.cpp</a></ul>
</div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
